{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/dateTimePicker.js","components/blocks/voyageFormComponent.js","components/pickers/datePicker.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","config/consts/listOfOptionsConst.js","pages/404NotFound.js","router.js","index.js"],"names":["console","log","shipCallsData","columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","rows","pageSize","onRowClick","e","push","id","disableSelectionOnClick","countryList","listOfShipTypes","formControl","margin","minWidth","formControlNoMargin","button","topMargin","correctDateTime","date","substr","ShipFormComponent","data","updateData","miniMarginTop","emptyDIV","component","gutterBottom","TextField","label","contentEditable","value","name","onChange","target","iMOnumber","otherInfo","callSign","mmsiNumner","FormControl","InputLabel","Select","labelId","flagState","map","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","grossTonnage","netTonnage","port","ListOfPorts","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","aria-label","onClick","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","agent","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","dateTimePicker","props","onSelect","setState","onCommit","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","showTimeSelect","timeIntervals","dateFormat","React","Component","DropDownEditor","Editors","ports","editable","editor","options","withStyles","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","row","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","ship","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","readPortXML","xml","children","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","find","el","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","vaildISSC","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","readXlsxFile","then","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","listOfOptions","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","dataItem","dataCopy","portCopy","voyageCopy","passengersCopy","shipStoresCopy","cargoCopy","ShipDetails","setActiveItem","defaultDataConst","openErrorDialog","marginRight","getElementById","reader","FileReader","onload","result","readAsText","htmlFor","multiple","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"k/KAWAA,QAAQC,IAAI,gBAAiBC,GAC7B,IAAMC,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACvC,CACIF,MAAO,OACPC,WAAY,OACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,KAEX,CACIF,MAAO,WACPC,WAAY,YACZC,MAAO,KAEX,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,MAITC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCC,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAIF,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAExBC,EAAUjB,IAEhB,OACI,sBAAKkB,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAMZ,uBAAMT,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SAEI,qBAAKG,MAAO,CAAC7B,MAAO,QAAS+B,OAAQ,SAArC,SACI,cAAC,IAAD,CACIC,KAAMpC,EACNC,QAASA,EACToC,SAAU,EACVC,WAAa,SAACC,GACVlB,EAAQmB,KAAR,mBAAyBD,EAAEE,MAE/BC,yBAAuB,c,4GC6JpCC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,e,QCOWC,EA1PS,CACpB,CACI,KAAQ,wBACR,KAAQ,MACT,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","file":"static/js/main.12688d9f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport shipCallsData from './../config/JSON/shipCallsData.json'\r\n\r\n\r\nconsole.log('COlumn data: ', shipCallsData)\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'ship',\r\n        headerName: 'Ship',\r\n        width: 130,\r\n    },\r\n    {\r\n        field: 'imo',\r\n        headerName: 'IMO',\r\n        width: 110,\r\n    },\r\n    {\r\n        field: 'portCall',\r\n        headerName: 'Port call',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'agent',\r\n        headerName: 'Agent',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'ETA',\r\n        headerName: 'ETA',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship calls\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '50px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '805px', height: '500px'}}>\r\n                        <DataGrid\r\n                            rows={shipCallsData}\r\n                            columns={columns}\r\n                            pageSize={7}\r\n                            onRowClick={ (e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                onChange={(e) =>\r\n                    updateData({name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                contentEditable={'false'}\r\n                value={data.iMOnumber}\r\n                onChange={(e) =>\r\n                    updateData({iMOnumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\n\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nimport './portFormComponent.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData}) {\r\n\r\n    const classes = useStyles();\r\n    console.log('THe data', data)\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '20px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({portOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'yes'}>Yes</MenuItem>\r\n                <MenuItem value={'no'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                onChange={(e) => {\r\n                    let company = e.target.value;\r\n                    let agent = {...data.agent, company};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass dateTimePicker extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY, h:mm\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} showTimeSelect timeIntervals={1}\r\n                           dateFormat=\"dd/MM/yyyy h:mm\"/>;\r\n    }\r\n}\r\n\r\nexport default dateTimePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dateTimePicker from \"../pickers/dateTimePicker\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: dateTimePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: dateTimePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: false\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        // ETAPortOfCall: defaultDateTime,\r\n        ETDPortOfCall: '',\r\n        // ETDPortOfCall: defaultDateTime,\r\n        ATAPortOfCall: '',\r\n        // ATAPortOfCall: defaultDateTime,\r\n        ATDPortOfCall: '',\r\n        // ATDPortOfCall: defaultDateTime,\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n            // time: defaultDateTime\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n}\r\n","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children[1].value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.vaildISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0];\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"crew \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n\r\n        console.log('Crew from Excel: ', crew);\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            let date = new Date(rows[i][4]);\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = (typeof new Date(rows[i][8]) === Object) ? new Date(rows[i][8]) : rows[i][8];\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        security.expiryDate = rows[7][7];\r\n        security.securityLevel = rows[11][4 ];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = rows[i][2];\r\n            let dateDeparture = rows[i][3];\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    EPCRequestBody.push({\r\n        EntryPosition: [\r\n            {\r\n                Position: [\r\n                    {Latitude: port.position.latitude},\r\n                    {Longitude: port.position.longitude},\r\n                    {Time: port.position.time}\r\n                ]\r\n            }]\r\n    })\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        console.log(\"id type \", rows[i].ID_type);\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        },\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","const generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]});\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    Consignment.push({\r\n        PortOfLoading: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfLoading.name},\r\n                    {CountryCode: portOfLoading.countryCode},\r\n                    {UNLoCode: portOfLoading.code}\r\n                ]\r\n            }]\r\n    });\r\n    Consignment.push({\r\n        PortOfDischarge: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfDischarge.name},\r\n                    {CountryCode: portOfDischarge.countryCode},\r\n                    {UNLoCode: portOfDischarge.code}\r\n                ]\r\n            }]\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import xml from 'xml'\r\nimport generatePort from \"./generatePort\";\r\nimport generateCrew from \"./generateCrew\";\r\nimport generateShip from \"./generateShip\";\r\nimport generatePassengers from \"./generatePasssengers\";\r\nimport generateVoyage from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth from \"./generateHealth\";\r\nimport generateCrewEffects from \"./generateCrewEffects\";\r\nimport generateCargo from \"./generateCargo\";\r\nimport generateSecurity from \"./generateSecurity\";\r\n\r\nfunction createXML(data) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nlet dataCheck = (data) => {\r\n    let port = data.port;\r\n    let crew = data.crew;\r\n    let passengers = data.passengers;\r\n\r\n    if (port.arrivalDeparture === '' || port.arrivalDeparture === null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    if (port.portOfCall === '' || port.portOfCall == null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    for (let i = 0; i < crew.rows.length; i++) {\r\n        let row = data.crew.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Rank_of_rating === '' || row.Rank_of_rating == null) {\r\n            alert(\"Please, fill in the required field 'Rank of rating' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Crew list\")\r\n            return false\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < passengers.rows.length; i++) {\r\n        let row = passengers.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_embarkation === '' || row.Port_of_embarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of embarkation' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_disembarkation === '' || row.Port_of_disembarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of disembarkation' in Passenger list\")\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n\r\n];\r\n\r\nfunction CrewEffectsForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind_of_packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS_code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Port';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 240 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails() {\r\n\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        createXML(data);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {config.showDrawerIcons && <ListItemIcon><i>icon</i></ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\"\" + openErrorDialog.error.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.port;\r\n                dataCopy.port = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.ship;\r\n                dataCopy.ship = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let voyageCopy = dataCopy.voyage;\r\n                dataCopy.voyage = {...voyageCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.crew;\r\n                dataCopy.crew = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let passengersCopy = dataCopy.passengers;\r\n                dataCopy.passengers = {...passengersCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let shipStoresCopy = dataCopy.shipStores;\r\n                dataCopy.passengers = {...shipStoresCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} updateData={() => {\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let cargoCopy = dataCopy.cargo;\r\n                dataCopy.cargo = {...cargoCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let dpg = dataCopy.dpg;\r\n                    dataCopy.dpg = {...dpg, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'waste':\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nexport default ShipDetails;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port'\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships'\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew'\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers'\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage'\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores'\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects'\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo'\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health'\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods'\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security'\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste'\r\n    }\r\n];","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}