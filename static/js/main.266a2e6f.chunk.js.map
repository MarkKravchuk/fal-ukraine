{"version":3,"sources":["pages/homePage.js","functions/countryList.js","Excel/Ports.xlsx","config/consts/listOfPortsConst.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/dateTimePicker.js","components/blocks/voyageFormComponent.js","components/pickers/datePicker.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","config/consts/listOfOptionsConst.js","pages/404NotFound.js","router.js","App.js","index.js"],"names":["HomePage","state","rows","id","ship","imo","portCall","agent","ETA","this","history","props","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","onClick","e","push","scope","React","Component","countryList","ListOfPorts","readExcel","readXlsxFile","PortExcel","then","console","log","listOfPorts","_instance","listOfShipTypes","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","formControlNoMargin","button","topMargin","marginTop","correctDateTime","date","substr","ShipFormComponent","data","updateData","classes","miniMarginTop","emptyDIV","style","width","Typography","variant","gutterBottom","Grid","container","justify","TextField","label","contentEditable","value","name","onChange","target","iMOnumber","otherInfo","callSign","mmsiNumner","FormControl","className","InputLabel","Select","labelId","flagState","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","grossTonnage","netTonnage","port","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","height","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","position","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","dateTimePicker","onSelect","setState","onCommit","forceUpdate","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","showTimeSelect","timeIntervals","dateFormat","DropDownEditor","Editors","ports","columns","editable","editor","options","withStyles","root","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","readPortXML","xml","children","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","find","el","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","content","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","vaildISSC","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","listOfOptions","drawerWidth","display","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","flexGrow","padding","uploadFile","getChildComponent","activeItem","setData","dataItem","dataCopy","portCopy","voyageCopy","passengersCopy","shipStoresCopy","cargoCopy","ShipDetails","setActiveItem","defaultDataConst","openErrorDialog","CssBaseline","AppBar","Toolbar","marginRight","getElementById","reader","FileReader","onload","result","readAsText","htmlFor","multiple","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","App","timeStamp","render","StrictMode"],"mappings":"4yJAWqBA,E,4MAEjBC,MAAQ,CACJC,KAAM,CACF,CACIC,GAAI,EACJC,KAAM,SACNC,IAAK,EACLC,SAAU,GACVC,MAAO,QACPC,IAAK,YACN,CACCL,GAAI,EACJC,KAAM,SACNC,IAAK,EACLC,SAAU,GACVC,MAAO,YACPC,IAAK,c,4CAMjB,WAEI,IAAKN,EAAQO,KAAKR,MAAbC,KAEAQ,EAAWD,KAAKE,MAAhBD,QAEL,OACI,cAACE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBAGR,cAACC,EAAA,EAAD,UACKnB,EAAKoB,KAAI,SAACC,GAAD,OACN,eAACL,EAAA,EAAD,CAAuBM,QAAS,SAACC,GAC7Bf,EAAQgB,KAAR,mBAAyBH,EAAIpB,MADjC,UAGI,cAACgB,EAAA,EAAD,CAAWN,UAAU,KAAKc,MAAM,MAAhC,SACKJ,EAAIpB,KAET,cAACgB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAInB,OAC9B,cAACe,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIlB,MAC9B,cAACc,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIjB,WAC9B,cAACa,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIhB,QAC9B,cAACY,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIf,QAVnBe,EAAIpB,kB,GA5CTyB,IAAMC,W,8JC2O7BC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,eC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","file":"static/js/main.266a2e6f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n    state = {\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                ship: 'Ship 1',\r\n                imo: 9,\r\n                portCall: 11,\r\n                agent: 'Vasya',\r\n                ETA: '11:11:11'\r\n            }, {\r\n                id: 2,\r\n                ship: 'Ship 2',\r\n                imo: 3,\r\n                portCall: 15,\r\n                agent: 'Ivanushka',\r\n                ETA: '66:66:66'\r\n            }\r\n        ]\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let {rows} = this.state;\r\n\r\n        let {history} = this.props;\r\n\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell align=\"right\">Ship</TableCell>\r\n                            <TableCell align=\"right\">IMO</TableCell>\r\n                            <TableCell align=\"right\">Port&nbsp;call</TableCell>\r\n                            <TableCell align=\"right\">Agent</TableCell>\r\n                            <TableCell align=\"right\">ETA</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id} onClick={(e) => {\r\n                                history.push(`/details/${row.id}`);\r\n                            }}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.ship}</TableCell>\r\n                                <TableCell align=\"right\">{row.imo}</TableCell>\r\n                                <TableCell align=\"right\">{row.portCall}</TableCell>\r\n                                <TableCell align=\"right\">{row.agent}</TableCell>\r\n                                <TableCell align=\"right\">{row.ETA}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n\r\n    }\r\n\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","export default __webpack_public_path__ + \"static/media/Ports.16460d99.xlsx\";","// const listOfPortConst = [\r\n//     {\r\n//         code: \"BGVAR\",\r\n//         countryCode: \"BG\",\r\n//         name: \"Varna\"\r\n//     }, {\r\n//         code: \"ROCND\",\r\n//         countryCode: \"RO\",\r\n//         name: \"Constanta\"\r\n//     }, {\r\n//         code: \"TRIST\",\r\n//         countryCode: \"TR\",\r\n//         name: \"Istanbul\"\r\n//     }, {\r\n//         code: \"TRIZM\",\r\n//         countryCode: \"TR\",\r\n//         name: \"Izmir\"\r\n//     }, {\r\n//         code: \"UAILK\",\r\n//         countryCode: \"UA\",\r\n//         name: \"Chornomorsk\"\r\n//     }, {\r\n//         code: \"UAODS\",\r\n//         countryCode: \"UA\",\r\n//         name: \"Odessa\"\r\n//     }, {\r\n//         code: \"UAOCT\",\r\n//         countryCode: \"UA\",\r\n//         name: \"Oktyabrsk\"\r\n//     }, {\r\n//         code: \"UAYUZ\",\r\n//         countryCode: \"UA\",\r\n//         name: \"Yuzhnyy\"\r\n//     }, {\r\n//         code: \"\",\r\n//         countryCode: \"TEST\",\r\n//         name: \"TEST\"\r\n//     },\r\n// ];\r\n\r\nimport PortExcel from '../../Excel/Ports.xlsx'\r\nimport readXlsxFile from \"read-excel-file\";\r\n\r\nexport class ListOfPorts {\r\n    constructor() {\r\n        if (!this.listOfPorts) this.listOfPorts = [];\r\n        if (!ListOfPorts._instance) {\r\n            ListOfPorts._instance = this;\r\n        }\r\n        let instance = ListOfPorts._instance;\r\n        instance.readExcel();\r\n        return ListOfPorts._instance;\r\n    }\r\n\r\n    readExcel = () => {\r\n        readXlsxFile(PortExcel).then((rows) => {\r\n            console.log(\"FUCKING PORTS ROWS:\", rows);\r\n            this.listOfPorts = rows;\r\n        });\r\n    }\r\n\r\n\r\n    static getInstance() {\r\n        return this._instance;\r\n    }\r\n}\r\n\r\nexport default [];","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                onChange={(e) =>\r\n                    updateData({name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                contentEditable={'false'}\r\n                value={data.iMOnumber}\r\n                onChange={(e) =>\r\n                    updateData({iMOnumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\n\r\nimport ListOfPorts from '../../config/consts/listOfPortsConst'\r\n\r\nimport './portFormComponent.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData}) {\r\n\r\n    const classes = useStyles();\r\n    console.log('THe data', data)\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '20px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({portOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'yes'}>Yes</MenuItem>\r\n                <MenuItem value={'no'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                onChange={(e) => {\r\n                    let company = e.target.value;\r\n                    let agent = {...data.agent, company};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass dateTimePicker extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY, h:mm\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} showTimeSelect timeIntervals={1}\r\n                           dateFormat=\"dd/MM/yyyy h:mm\"/>;\r\n    }\r\n}\r\n\r\nexport default dateTimePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dateTimePicker from \"../pickers/dateTimePicker\";\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: dateTimePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: dateTimePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: false\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        // ETAPortOfCall: defaultDateTime,\r\n        ETDPortOfCall: '',\r\n        // ETDPortOfCall: defaultDateTime,\r\n        ATAPortOfCall: '',\r\n        // ATAPortOfCall: defaultDateTime,\r\n        ATDPortOfCall: '',\r\n        // ATDPortOfCall: defaultDateTime,\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n            // time: defaultDateTime\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n}\r\n","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children[1].value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.vaildISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0];\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"crew \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n\r\n        console.log('Crew from Excel: ', crew);\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            let date = new Date(rows[i][4]);\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = (typeof new Date(rows[i][8]) === Object) ? new Date(rows[i][8]) : rows[i][8];\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        security.expiryDate = rows[7][7];\r\n        security.securityLevel = rows[11][4 ];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = rows[i][2];\r\n            let dateDeparture = rows[i][3];\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/consts/listOfPortsConst'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port, index) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    EPCRequestBody.push({\r\n        EntryPosition: [\r\n            {\r\n                Position: [\r\n                    {Latitude: port.position.latitude},\r\n                    {Longitude: port.position.longitude},\r\n                    {Time: port.position.time}\r\n                ]\r\n            }]\r\n    })\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        console.log(\"id type \", rows[i].ID_type);\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        },\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","const generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]});\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    Consignment.push({\r\n        PortOfLoading: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfLoading.name},\r\n                    {CountryCode: portOfLoading.countryCode},\r\n                    {UNLoCode: portOfLoading.code}\r\n                ]\r\n            }]\r\n    });\r\n    Consignment.push({\r\n        PortOfDischarge: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfDischarge.name},\r\n                    {CountryCode: portOfDischarge.countryCode},\r\n                    {UNLoCode: portOfDischarge.code}\r\n                ]\r\n            }]\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import xml from 'xml'\r\nimport generatePort from \"./generatePort\";\r\nimport generateCrew from \"./generateCrew\";\r\nimport generateShip from \"./generateShip\";\r\nimport generatePassengers from \"./generatePasssengers\";\r\nimport generateVoyage from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth from \"./generateHealth\";\r\nimport generateCrewEffects from \"./generateCrewEffects\";\r\nimport generateCargo from \"./generateCargo\";\r\nimport generateSecurity from \"./generateSecurity\";\r\n\r\nfunction createXML(data) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nlet dataCheck = (data) => {\r\n    let port = data.port;\r\n    let crew = data.crew;\r\n    let passengers = data.passengers;\r\n\r\n    if (port.arrivalDeparture === '' || port.arrivalDeparture === null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    if (port.portOfCall === '' || port.portOfCall == null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    for (let i = 0; i < crew.rows.length; i++) {\r\n        let row = data.crew.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Rank_of_rating === '' || row.Rank_of_rating == null) {\r\n            alert(\"Please, fill in the required field 'Rank of rating' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Crew list\")\r\n            return false\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < passengers.rows.length; i++) {\r\n        let row = passengers.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_embarkation === '' || row.Port_of_embarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of embarkation' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_disembarkation === '' || row.Port_of_disembarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of disembarkation' in Passenger list\")\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n\r\n];\r\n\r\nfunction CrewEffectsForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind_of_packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS_code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography style={marginTop} variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Security';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 240 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails() {\r\n\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        createXML(data);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {config.showDrawerIcons && <ListItemIcon><i>icon</i></ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\"\" + openErrorDialog.error.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.port;\r\n                dataCopy.port = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.ship;\r\n                dataCopy.ship = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let voyageCopy = dataCopy.voyage;\r\n                dataCopy.voyage = {...voyageCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.crew;\r\n                dataCopy.crew = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let passengersCopy = dataCopy.passengers;\r\n                dataCopy.passengers = {...passengersCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let shipStoresCopy = dataCopy.shipStores;\r\n                dataCopy.passengers = {...shipStoresCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} updateData={() => {\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let cargoCopy = dataCopy.cargo;\r\n                dataCopy.cargo = {...cargoCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let dpg = dataCopy.dpg;\r\n                    dataCopy.dpg = {...dpg, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'waste':\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nexport default ShipDetails;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port'\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships'\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew'\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers'\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage'\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores'\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects'\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo'\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health'\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods'\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security'\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste'\r\n    }\r\n];","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react'\nimport AppRouter from \"./router\";\n\nimport './App.css';\n\nexport default class App extends React.Component {\n\n\n    render() {\n        return (\n            <AppRouter/>\n        )\n    }\n\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {ListOfPorts} from \"./config/consts/listOfPortsConst\";\r\n\r\nconst listOfPorts = new ListOfPorts();\r\nconsole.timeStamp(\"List of ports\", listOfPorts);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}