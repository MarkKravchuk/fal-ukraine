{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/dateTimePicker.js","components/blocks/voyageFormComponent.js","components/pickers/datePicker.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","config/consts/listOfOptionsConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readWasteXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSWaste.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateWaste.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/WasteFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","pages/404NotFound.js","router.js","index.js"],"names":["console","log","shipCallsData","columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","rows","pageSize","onRowClick","e","push","id","disableSelectionOnClick","countryList","listOfShipTypes","formControl","margin","minWidth","formControlNoMargin","button","topMargin","correctDateTime","date","substr","ShipFormComponent","data","updateData","miniMarginTop","emptyDIV","component","gutterBottom","TextField","label","contentEditable","value","name","onChange","target","iMOnumber","otherInfo","callSign","mmsiNumner","FormControl","InputLabel","Select","labelId","flagState","map","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","grossTonnage","netTonnage","port","ListOfPorts","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","aria-label","onClick","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","agent","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","dateTimePicker","props","onSelect","setState","onCommit","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","showTimeSelect","timeIntervals","dateFormat","React","Component","DropDownEditor","Editors","ports","editable","editor","options","withStyles","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","row","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","ship","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","waste","WasteDeliveryStatus","LastPortDelivered","LastPortDeliveredDate","icon","readPortXML","xml","children","find","el","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readWasteXML","WasteInformation","WasteDisposalInformation","information","WasteType","WasteToBeDelivered","MaxStorage","WasteAmount","EstimatedWaste","PortOfDelivery","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","readXlsxFile","then","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLSWaste","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","generateWaste","lastPortDelivered","DeliveryPortCode","wasteTypeCode","wasteTypeDescription","wasteType","ToBeDelivered","RetainedOnboard","EstimateGenerated","DisposedOfInPort","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","onError","errors","checkRequiredPort","Ships","checkRequiredShip","forEach","checkRequiredCrew","checkRequiredPassengers","Voyage","checkRequiredVoyage","Cargo","checkRequiredCargo","Dangerous_goods","checkRequiredDangerous","Security","checkRequiredSecurity","Crew_effects","checkRequiredCrewEffects","checkRequiredHealth","Waste","checkRequiredWaste","_","isEmpty","checkRequiredFields","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","marginRight","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","wasteTypesList","wasteTypes","wasteTypeFormatted","WasteTypesEditor","listOfOptions","listOfOptionsConst","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","dataItem","WasteFormComponent","onload","addEventListener","confirmationMessage","event","returnValue","ShipDetails","setActiveItem","defaultDataConst","openErrorDialog","getElementById","reader","FileReader","result","dataCopy","readAsText","htmlFor","multiple","missingFields","block","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Array","isArray","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"stOAWAA,QAAQC,IAAI,gBAAiBC,GAC7B,IAAMC,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACvC,CACIF,MAAO,OACPC,WAAY,OACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,KAEX,CACIF,MAAO,WACPC,WAAY,YACZC,MAAO,KAEX,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,MAITC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCC,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAIF,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAExBC,EAAUjB,IAEhB,OACI,sBAAKkB,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAMZ,uBAAMT,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SAEI,qBAAKG,MAAO,CAAC7B,MAAO,QAAS+B,OAAQ,SAArC,SACI,cAAC,IAAD,CACIC,KAAMpC,EACNC,QAASA,EACToC,SAAU,EACVC,WAAa,SAACC,GACVlB,EAAQmB,KAAR,mBAAyBD,EAAEE,MAE/BC,yBAAuB,c,4GC6JpCC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,e,QCOWC,EA1PS,CACpB,CACI,KAAQ,wBACR,KAAQ,MACT,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","file":"static/js/main.5bc3714f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport shipCallsData from './../config/JSON/shipCallsData.json'\r\n\r\n\r\nconsole.log('COlumn data: ', shipCallsData)\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'ship',\r\n        headerName: 'Ship',\r\n        width: 130,\r\n    },\r\n    {\r\n        field: 'imo',\r\n        headerName: 'IMO',\r\n        width: 110,\r\n    },\r\n    {\r\n        field: 'portCall',\r\n        headerName: 'Port call',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'agent',\r\n        headerName: 'Agent',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'ETA',\r\n        headerName: 'ETA',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship calls\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '50px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '805px', height: '500px'}}>\r\n                        <DataGrid\r\n                            rows={shipCallsData}\r\n                            columns={columns}\r\n                            pageSize={7}\r\n                            onRowClick={ (e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                onChange={(e) =>\r\n                    updateData({name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                contentEditable={'false'}\r\n                value={data.iMOnumber}\r\n                onChange={(e) =>\r\n                    updateData({iMOnumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\n\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData}) {\r\n\r\n    const classes = useStyles();\r\n    console.log('THe data', data)\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\">\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({portOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                <MenuItem value={'No'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '15px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                onChange={(e) => {\r\n                    let company = e.target.value;\r\n                    let agent = {...data.agent, company};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass dateTimePicker extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY, h:mm\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} showTimeSelect timeIntervals={1}\r\n                           dateFormat=\"dd/MM/yyyy h:mm\"/>;\r\n    }\r\n}\r\n\r\nexport default dateTimePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dateTimePicker from \"../pickers/dateTimePicker\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: dateTimePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: dateTimePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: true,\r\n    addOnCloseEvent: true,\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        ETDPortOfCall: '',\r\n        ATAPortOfCall: '',\r\n        ATDPortOfCall: '',\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    waste: {\r\n        WasteDeliveryStatus:'',\r\n        LastPortDelivered:'',\r\n        LastPortDeliveredDate:'',\r\n        rows: [\r\n            {NR: 1}\r\n        ]\r\n    },\r\n}\r\n","import DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships',\r\n        icon: <DirectionsBoatIcon/>\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew',\r\n        icon: <WorkIcon/>\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage',\r\n        icon: <CompareArrowsIcon/>\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores',\r\n        icon: <StorageIcon/>\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects',\r\n        icon: <AssignmentIndIcon/>\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo',\r\n        icon: <LocalShippingIcon/>\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health',\r\n        icon: <LocalHospitalIcon/>\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods',\r\n        icon: <WarningIcon/>\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security',\r\n        icon: <SecurityIcon/>\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste',\r\n        icon: <DeleteIcon/>\r\n    }\r\n];","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children.find( el=> el.name === 'CallPurposeCode').value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.validISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","const readWasteXML = (waste, xml) => {\r\n    let WasteInformation = xml.getElementsByTagName('WasteInformation');\r\n    waste.rows = [];\r\n    try {\r\n\r\n        try {\r\n            waste.LastPortDelivered = WasteInformation[0].children.find(el => el.name === \"LastPortDelivered\").children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n        } catch (e) {\r\n            waste.LastPortDelivered = '';\r\n        }\r\n\r\n        waste.WasteDeliveryStatus = WasteInformation[0].children.find(el => el.name === \"WasteDeliveryStatus\").value;\r\n        waste.LastPortDeliveredDate = WasteInformation[0].children.find(el => el.name === \"LastPortDeliveredDate\").value;\r\n\r\n        let WasteDisposalInformation = xml.getElementsByTagName('WasteDisposalInformation');\r\n        if (WasteDisposalInformation.length > 0) {\r\n            for (let i = 0; i < WasteDisposalInformation.length; i++) {\r\n                let information = WasteDisposalInformation[i];\r\n                if (information) {\r\n                    try {\r\n                        let Seq = i + 1;\r\n                        let WasteType = information.children.find(el => el.name === \"WasteType\").children[0].value + \" : \" + information.children.find(el => el.name === \"WasteType\").children[1].value;\r\n                        let WasteToBeDelivered = information.children.find(el => el.name === \"ToBeDelivered\").value;\r\n                        let MaxStorage = information.children.find(el => el.name === \"MaxStorage\").value;\r\n                        let WasteAmount = information.children.find(el => el.name === \"RetainedOnboard\").value;\r\n                        let EstimatedWaste = information.children.find(el => el.name === \"EstimateGenerated\").value;\r\n                        let PortOfDelivery = information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'UNLoCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'CountryCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'Name').value;\r\n                        ;\r\n                        let row = {\r\n                            NR: Seq,\r\n                            WasteToBeDelivered: WasteToBeDelivered,\r\n                            WasteType: WasteType,\r\n                            MaxStorage: MaxStorage,\r\n                            WasteAmount: WasteAmount,\r\n                            EstimatedWaste: EstimatedWaste,\r\n                            PortOfDelivery: PortOfDelivery,\r\n                        }\r\n\r\n                        waste.rows.push(row)\r\n                    } catch (e) {\r\n                        console.log(e)\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n};\r\n\r\nexport default readWasteXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\nimport readWasteXML from \"./readWasteXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n    readWasteXML(data.waste, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        for (let i = 4; i < rows.length; i++) {\r\n            // skip the line if the field is not filled in\r\n            if (!rows[i][2]) continue;\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            if (!rows[i][2]) continue;\r\n\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            // let date = rows[i][4];\r\n            let date = \"\";\r\n            if (rows[i][4] != null) {\r\n                date = moment(rows[i][4]).format(\"DD/MM/YYYY\")\r\n            }\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = ''\r\n            if (rows[i][8] != null) {\r\n                symptomsDate = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        if (rows[7][7] != null) {\r\n            security.expiryDate = moment(rows[7][7]).format(\"YYYY-MM-DD\")\r\n        }\r\n        security.securityLevel = rows[11][4];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = '';\r\n            if (rows[i][2] != null) {\r\n                dateFrom = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let dateDeparture = '';\r\n            if (rows[i][3] != null) {\r\n                dateDeparture = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSWaste(file, onSave) {\r\n    data.waste.rows = [];\r\n    data.waste.WasteDeliveryStatus = '';\r\n    data.waste.LastPortDelivered = '';\r\n    data.waste.LastPortDeliveredDate = '';\r\n    let waste = data.waste;\r\n    readXlsxFile(file).then((rows) => {\r\n\r\n        data.waste.WasteDeliveryStatus = rows[2][3];\r\n        data.waste.LastPortDelivered = rows[9][2];\r\n        if (rows[9][4] != null) {\r\n            data.waste.LastPortDeliveredDate = moment(rows[9][4]).format(\"YYYY-MM-DD\");\r\n        }\r\n\r\n\r\n        for (let i = 14; i < 23; i++) {\r\n            let Port = '';\r\n            if (rows[i]) {\r\n                Port = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][6];\r\n                });\r\n\r\n\r\n                let Port_formatted = ''\r\n                if (Port) {\r\n                    Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    PortOfDelivery: Port_formatted,\r\n                    WasteType: rows[i][1],\r\n                    WasteToBeDelivered: rows[i][3],\r\n                    MaxStorage: rows[i][4],\r\n                    WasteAmount: rows[i][5],\r\n                    EstimatedWaste: rows[i][7],\r\n                }\r\n                waste.rows.push(row)\r\n            }\r\n        }\r\n\r\n        onSave({waste});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSWaste;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\nimport readXLSWaste from \"./readXLSWaste\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                } else if (name === \"waste information\") {\r\n                    readXLSWaste(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    EPCRequestBody.push({\r\n        EntryPosition: [\r\n            {\r\n                Position: [\r\n                    {Latitude: port.position.latitude},\r\n                    {Longitude: port.position.longitude},\r\n                    {Time: port.position.time}\r\n                ]\r\n            }]\r\n    })\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport const checkRequiredPort = (errors, data) => {\r\n    errors.Port = {};\r\n\r\n    if (!data.arrivalDeparture) errors.Port['Departure/Arrival'] = true;\r\n    if (!data.portOfCall) errors.Port[\"Port of call\"] = true;\r\n    if (!data.position.latitude) errors.Port['Latitude'] = true;\r\n    if (!data.position.longitude) errors.Port['Longitude'] = true;\r\n    if (!data.position.time) errors.Port['Position time'] = true;\r\n    if (!data.position.latitude)\r\n\r\n    if (!data.nameOfMaster.givenName) errors.Port['Master`s Given name'] = true;\r\n    if (!data.nameOfMaster.familyName) errors.Port['Master`s Family name'] = true;\r\n    if (!data.agent.company) errors.Port['Company name'] = true;\r\n    if (!data.personsOnBoard.numberOfPersonsOnBoard) errors.Port['Number of persons'] = true;\r\n}\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nexport const checkRequiredCrew = (errors, data) => {\r\n    errors.Crew = {};\r\n    data.rows.forEach( el => {\r\n        if (!el.Family_name) errors.Crew['Family name'] = [];\r\n        if (!el.Given_name) errors.Crew['Given name'] = [];\r\n        if (!el.Rank_of_rating) errors.Crew['Rank of rating'] = [];\r\n        if (!el.date_of_birth) errors.Crew['Date of birth'] = [];\r\n        if (!el.Country_of_birth) errors.Crew['Country of birth'] = [];\r\n        if (!el.Place_of_birth) errors.Crew['Place of birth'] = [];\r\n\r\n        if (!el.Nationality) errors.Crew['Nationality'] = [];\r\n        if (!el.ID_type) errors.Crew['ID type'] = [];\r\n        if (!el.ID_document_number) errors.Crew['ID document number'] = [];\r\n        if (!el.Place_of_birth) errors.Crew['Place of rating'] = [];\r\n    })\r\n}\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredShip = (errors, data) => {\r\n    errors.Ships = {};\r\n    if (!data.port) errors.Ships['Port'] = true;\r\n    if (!data.issueDate)  errors.Ships['Date of issue'] = true;\r\n    if (!data.certificateNumber)  errors.Ships['Number'] = true;\r\n}\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        },\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredPassengers = (errors, data) => {\r\n    errors.Passengers = {};\r\n\r\n    data.rows.forEach( el => {\r\n        if (!el.Family_name) errors.Passengers['Family name'] = [];\r\n        if (!el.Given_name) errors.Passengers['Given name'] = [];\r\n        if (!el.date_of_birth) errors.Passengers['Date of birth'] = [];\r\n        if (!el.Country_of_birth) errors.Passengers['Country of birth'] = [];\r\n        if (!el.Place_of_birth) errors.Passengers['Place of birth'] = [];\r\n        if (!el.Nationality) errors.Passengers['Nationality'] = [];\r\n        if (!el.ID_type) errors.Passengers['ID type'] = [];\r\n        if (!el.ID_document_number) errors.Passengers['ID document number'] = [];\r\n        if (!el.Place_of_birth) errors.Passengers['Place of rating'] = [];\r\n        if (!el.Port_of_embarkation) errors.Passengers['Port of embarkation'] = [];\r\n        if (!el.Port_of_disembarkation) errors.Passengers['Port of disembarkation'] = [];\r\n        if (!el.Transit) errors.Passengers['Transit'] = [];\r\n    })\r\n}\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredVoyage = (errors, data) => {\r\n    errors.Voyage = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Port) errors.Voyage.Port = [];\r\n    });\r\n\r\n}\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","export const checkRequiredHealth = (errors, data) => {\r\n    errors.Health = {};\r\n\r\n    data.illList.forEach(el => {\r\n        if (!el.NR) errors.Health['NR'] = [];\r\n        if (!el.crewPassenger) errors.Health['Crew or passenger'] = [];\r\n    });\r\n\r\n}\r\nconst generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({\r\n            CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]\r\n        });\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nexport const checkRequiredCrewEffects = (errors, data) => {\r\n    errors.Crew_effects = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.NR) errors.Crew_effects['NR'] = [];\r\n        if (!el.Effects_description) errors.Crew_effects['Effects description'] = [];\r\n    });\r\n\r\n}\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredCargo = (errors, data) => {\r\n    errors.Cargo = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Transport_unit) errors.Cargo['Transport unit(Container number)'] = [];\r\n    })\r\n}\r\n\r\nexport const checkRequiredDangerous = (errors, data) => {\r\n    errors.Dangerous_goods = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Textual_reference) errors.Dangerous_goods['Textual reference'] = [];\r\n        if (!el.DG_Classification) errors.Dangerous_goods['DG Classification'] = [];\r\n    })\r\n}\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    Consignment.push({\r\n        PortOfLoading: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfLoading.name},\r\n                    {CountryCode: portOfLoading.countryCode},\r\n                    {UNLoCode: portOfLoading.code}\r\n                ]\r\n            }]\r\n    });\r\n    Consignment.push({\r\n        PortOfDischarge: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfDischarge.name},\r\n                    {CountryCode: portOfDischarge.countryCode},\r\n                    {UNLoCode: portOfDischarge.code}\r\n                ]\r\n            }]\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredSecurity = (errors, data) => {\r\n    errors.Security = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.shipActivity) errors.Security['Activity'] = [];\r\n        if (!el.dateFrom) errors.Security['Date from'] = [];\r\n        if (!el.dateDeparture) errors.Security['Date departure'] = [];\r\n        if (!el.locationName) errors.Security['Location'] = [];\r\n    })\r\n}\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredWaste = (errors, data) => {\r\n    errors.Waste = {};\r\n\r\n    if (!data.WasteDeliveryStatus) errors.Waste['Are you delivering all,some or none\\n' +\r\n    'of your waste into port reception facility'] = true;\r\n    data.rows.forEach(el => {\r\n        if (!el.WasteType) errors.Waste['Waste Type'] = [];\r\n        if (!el.WasteToBeDelivered) errors.Waste['Waste to be delivered(m3)'] = [];\r\n    })\r\n}\r\nconst generateWaste = (waste, EPCRequestBody) => {\r\n    let WasteInformation = [];\r\n    let rows = waste.rows;\r\n    let lastPortDelivered = ListOfPorts.find(function (element) {\r\n        return element.code === waste.LastPortDelivered;\r\n    });\r\n\r\n\r\n    WasteInformation.push({WasteDeliveryStatus: waste.WasteDeliveryStatus});\r\n    WasteInformation.push({\r\n        LastPortDelivered: [\r\n            {\r\n                Port: [\r\n                    {Name: lastPortDelivered.name},\r\n                    {CountryCode: lastPortDelivered.countryCode},\r\n                    {UNLoCode: lastPortDelivered.code}\r\n                ]\r\n            }]\r\n    });\r\n    WasteInformation.push({LastPortDeliveredDate: waste.LastPortDeliveredDate});\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let WasteDisposalInformation = [];\r\n        let PortOfDelivery = {};\r\n        if (rows[i].PortOfDelivery && rows[i].PortOfDelivery !== '') {\r\n            let DeliveryPortCode = rows[i].PortOfDelivery.split(' -')[0]\r\n            PortOfDelivery = ListOfPorts.find(function (element) {\r\n                return element.code === DeliveryPortCode;\r\n            });\r\n        }\r\n        let wasteTypeCode = '';\r\n        let wasteTypeDescription = '';\r\n        if (rows[i].WasteType && rows[i].WasteType !== '' && rows[i].WasteType !== '[Waste type]') {\r\n            let wasteType = rows[i].WasteType.split(\" : \");\r\n            wasteTypeCode = wasteType[0];\r\n            wasteTypeDescription = wasteType[1];\r\n        }\r\n\r\n        WasteDisposalInformation.push({\r\n            WasteType: [\r\n                {Code: wasteTypeCode},\r\n                {Description: wasteTypeDescription},\r\n            ]\r\n        });\r\n        WasteDisposalInformation.push({ToBeDelivered: rows[i].WasteToBeDelivered});\r\n        WasteDisposalInformation.push({MaxStorage: rows[i].MaxStorage});\r\n        WasteDisposalInformation.push({RetainedOnboard: rows[i].WasteAmount});\r\n        WasteDisposalInformation.push({EstimateGenerated: rows[i].EstimatedWaste});\r\n        if (PortOfDelivery && PortOfDelivery !== {}) {\r\n            WasteDisposalInformation.push({\r\n                DisposedOfInPort: [\r\n                    {Name: PortOfDelivery.name},\r\n                    {CountryCode: PortOfDelivery.countryCode},\r\n                    {UNLoCode: PortOfDelivery.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n\r\n        WasteInformation.push({WasteDisposalInformation: WasteDisposalInformation});\r\n    }\r\n\r\n    EPCRequestBody.push({WasteInformation: WasteInformation})\r\n};\r\n\r\nexport default generateWaste;","import xml from 'xml'\r\nimport generatePort, {checkRequiredPort} from \"./generatePort\";\r\nimport generateCrew, {checkRequiredCrew} from \"./generateCrew\";\r\nimport generateShip, {checkRequiredShip} from \"./generateShip\";\r\nimport generatePassengers, {checkRequiredPassengers} from \"./generatePasssengers\";\r\nimport generateVoyage, {checkRequiredVoyage} from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth, {checkRequiredHealth} from \"./generateHealth\";\r\nimport generateCrewEffects, {checkRequiredCrewEffects} from \"./generateCrewEffects\";\r\nimport generateCargo, {checkRequiredCargo, checkRequiredDangerous} from \"./generateCargo\";\r\nimport generateSecurity, {checkRequiredSecurity} from \"./generateSecurity\";\r\nimport generateWaste, {checkRequiredWaste} from \"./generateWaste\";\r\nimport _ from 'underscore'\r\n\r\nfunction createXML(data, onError) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    const errors = checkRequiredFields(data);\r\n    if (!_.isEmpty(errors)) {\r\n        onError(errors);\r\n        return;\r\n    }\r\n\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n    generateWaste(data.waste, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nfunction checkRequiredFields(data) {\r\n    const errors = {};\r\n    checkRequiredPort(errors, data.port);\r\n    checkRequiredShip(errors, data.ship);\r\n    checkRequiredCrew(errors, data.crew);\r\n    checkRequiredPassengers(errors, data.passengers);\r\n    checkRequiredVoyage(errors, data.voyage);\r\n    checkRequiredCargo(errors, data.cargo);\r\n    checkRequiredDangerous(errors, data.dpg);\r\n    checkRequiredSecurity(errors, data.security);\r\n    checkRequiredCrewEffects(errors, data.crewEffects);\r\n    checkRequiredHealth(errors, data.health);\r\n    checkRequiredWaste(errors, data.waste)\r\n\r\n\r\n    //deleting empty objects\r\n    Object.keys(errors).forEach(el => {\r\n        if (_.isEmpty(errors[el])) delete errors[el];\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor}\r\n];\r\n\r\nfunction CrewEffectsForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind of packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport wasteTypes from \"../../config/consts/wasteTypes.json\";\r\n\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nlet wasteTypesList = [\"[Waste type]\"];\r\nfor (let i = 0; i < Object.keys(wasteTypes).length; i++) {\r\n    let wasteTypeFormatted = Object.keys(wasteTypes)[i] + ' : ' + Object.values(wasteTypes)[i];\r\n    wasteTypesList.push(wasteTypeFormatted);\r\n}\r\nconst WasteTypesEditor = <DropDownEditor options={wasteTypesList}/>;\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst columns = [\r\n    {key: \"NR\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"WasteType\", name: \"Waste Type\", editable: true, width: 150, editor: WasteTypesEditor},\r\n    {key: \"WasteDescription\", name: \"Waste Description(when relevant)\", editable: true, width: 250},\r\n    {key: \"WasteToBeDelivered\", name: \"Waste to be delivered(m3)\", editable: true, width: 250},\r\n    {key: \"MaxStorage\", name: \"Maximum dedicated storage capacity (m3)\", editable: true, width: 300},\r\n    {key: \"WasteAmount\", name: \"Amount of waste on board (m3)\", editable: true, width: 250},\r\n    {\r\n        key: \"PortOfDelivery\",\r\n        name: \"Port of delivery of remaining waste\",\r\n        editable: true,\r\n        width: 250,\r\n        editor: PortEditor\r\n    },\r\n    {key: \"EstimatedWaste\", name: \"Estimated amount of waste to be generated (m3)\", editable: true, width: 350},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction WasteForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n    function correctDateTime(date) {\r\n        date = \"\" + date;\r\n        return date.substr(0, 16);\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Waste information\r\n            </Typography>\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">Are you delivering all,some or none\r\n                        of your waste into port reception facility? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.WasteDeliveryStatus}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({WasteDeliveryStatus: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'All'}>All</MenuItem>\r\n                        <MenuItem value={'Some'}>Some</MenuItem>\r\n                        <MenuItem value={'None'}>None</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom className={classes.formControl}>\r\n                Last port and date when ship-generated waste was delivered\r\n            </Typography>\r\n            <div className={'flex-parent'}>\r\n                <Grid container justify=\"space-between\" style={{width: '80%'}}>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        margin={\"normal\"}\r\n                    >\r\n                        <InputLabel id=\"last-port-label\">Port</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"port-of-label-label\"\r\n                            value={data.LastPortDelivered}\r\n                            onChange={(e) => {\r\n                                updateData({LastPortDelivered: e.target.value})\r\n                            }}\r\n                        >\r\n                            {ListOfPorts.map((port, index) =>\r\n                                <MenuItem key={index} value={`${port.code}`}>\r\n                                    {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        style={{minWidth: '225px'}}\r\n                        variant={'outlined'}\r\n                        className={classes.formControl}\r\n                        value={correctDateTime(data.LastPortDeliveredDate)}\r\n                        onChange={(e) =>\r\n                            updateData({LastPortDeliveredDate: e.target.value})}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}} className={classes.formControl}>\r\n                Waste items\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(WasteForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                style={{marginRight:\"10%\"}}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\nimport WasteFormComponent from \"../components/blocks/WasteFormComponent\";\r\nimport _ from 'underscore'\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Port';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 200 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails() {\r\n\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg,\r\n                                                        waste\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg,\r\n                                                            waste\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        const onError = (errors) => {\r\n                                            console.log(\"THE ERRORS: \", errors);\r\n                                            let missingFields = [];\r\n                                            for (let block in errors) {\r\n                                                if (!errors.hasOwnProperty(block) || _.isEmpty(errors['' + block])) continue;\r\n                                                missingFields.push(`Block ${block}:`);\r\n                                                for (let field in errors['' + block]) {\r\n                                                    if (!errors['' + block].hasOwnProperty(field)) continue;\r\n                                                    if (typeof errors[block][field] === typeof true) {\r\n                                                        missingFields.push(`→  ${field} is empty`);\r\n                                                    } else {\r\n                                                        missingFields.push(`→  ${field} columns are empty`);\r\n                                                    }\r\n                                                }\r\n                                                missingFields.push(\"\");\r\n                                            }\r\n                                            setOpenErrorDialog({\r\n                                                open: true,\r\n                                                error: {\r\n                                                    title: \"Please fill in required fields first: \",\r\n                                                    text: missingFields\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                        createXML(data, onError);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                color={'success'}\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {(config.showDrawerIcons && item.icon) && <ListItemIcon>{item.icon}</ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {text: []}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\r\n                            (Array.isArray(openErrorDialog.error.text))\r\n                                ?\r\n                                openErrorDialog.error.text.map((el) => <>{el}<br/></>)\r\n                                : openErrorDialog.error.text\r\n                        }\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                setData({...data, port: {...data.port, ...dataItem}});\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                setData({...data, ship: {...data.ship, ...dataItem}})\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                setData({...data, voyage: {...data.voyage, ...dataItem}})\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crew: {...data.crew, ...dataItem}})\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                setData({...data, passengers: {...data.passengers, ...dataItem}});\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                setData({...data, shipStores: {...data.shipStores, ...dataItem}});\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} updateData={(dataItem) => {\r\n                setData({...data, crewEffects: {...data.crewEffects, ...dataItem}})\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                setData({...data, cargo: {...data.cargo, ...dataItem}});\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    let health = JSON.parse(JSON.stringify(data.health))\r\n                    setData({...data, health: {...health, ...dataItem}});\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    let dpg = JSON.parse(JSON.stringify(data.dpg))\r\n                    setData({...data, dpg: {...dpg, ...dataItem}});\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    let security = JSON.parse(JSON.stringify(data.security));\r\n                    setData({...data, security: {...security, ...dataItem}});\r\n                }}/>\r\n        case 'waste':\r\n            return <WasteFormComponent\r\n                data={data.waste}\r\n                updateData={(dataItem) => {\r\n                    let waste = JSON.parse(JSON.stringify(data.waste));\r\n                    setData({...data, waste: {...waste, ...dataItem}});\r\n                }}/>\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nif (config.addOnCloseEvent) {\r\n    window.onload = function () {\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            const confirmationMessage = 'It looks like you have been editing something. '\r\n                + 'If you leave before saving, your changes will be lost.';\r\n\r\n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n        });\r\n    };\r\n}\r\nexport default ShipDetails;","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}