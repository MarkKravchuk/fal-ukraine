{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/datePicker.js","components/blocks/voyageFormComponent.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","config/consts/listOfOptionsConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readWasteXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSWaste.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateWaste.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/WasteFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","pages/404NotFound.js","router.js","index.js"],"names":["console","log","shipCallsData","columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","rows","pageSize","onRowClick","e","push","id","disableSelectionOnClick","countryList","listOfShipTypes","formControl","margin","minWidth","formControlNoMargin","button","topMargin","correctDateTime","date","substr","ShipFormComponent","data","updateData","miniMarginTop","emptyDIV","component","gutterBottom","TextField","label","contentEditable","value","name","onChange","target","iMOnumber","otherInfo","callSign","mmsiNumner","FormControl","InputLabel","Select","labelId","flagState","map","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","grossTonnage","netTonnage","port","ListOfPorts","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","aria-label","onClick","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","agent","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","props","onSelect","setState","onCommit","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","dateFormat","React","Component","DropDownEditor","Editors","ports","editable","editor","options","withStyles","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","row","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","ship","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","waste","WasteDeliveryStatus","LastPortDelivered","LastPortDeliveredDate","icon","readPortXML","xml","children","find","el","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readWasteXML","WasteInformation","WasteDisposalInformation","information","WasteType","WasteToBeDelivered","MaxStorage","WasteAmount","EstimatedWaste","PortOfDelivery","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","readXlsxFile","then","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLSWaste","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","generateWaste","lastPortDelivered","DeliveryPortCode","wasteTypeCode","wasteTypeDescription","wasteType","ToBeDelivered","RetainedOnboard","EstimateGenerated","DisposedOfInPort","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","onError","errors","checkRequiredPort","Ships","checkRequiredShip","forEach","checkRequiredCrew","checkRequiredPassengers","Voyage","checkRequiredVoyage","Cargo","checkRequiredCargo","Dangerous_goods","checkRequiredDangerous","Security","checkRequiredSecurity","Crew_effects","checkRequiredCrewEffects","checkRequiredHealth","Waste","checkRequiredWaste","_","isEmpty","checkRequiredFields","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","marginRight","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","wasteTypesList","wasteTypes","wasteTypeFormatted","WasteTypesEditor","listOfOptions","listOfOptionsConst","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","dataItem","WasteFormComponent","onload","addEventListener","confirmationMessage","event","returnValue","ShipDetails","setActiveItem","defaultDataConst","openErrorDialog","getElementById","reader","FileReader","result","dataCopy","readAsText","htmlFor","multiple","missingFields","block","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Array","isArray","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"01OAWAA,QAAQC,IAAI,gBAAiBC,GAC7B,IAAMC,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACvC,CACIF,MAAO,OACPC,WAAY,OACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,KAEX,CACIF,MAAO,WACPC,WAAY,YACZC,MAAO,KAEX,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,MAITC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCC,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAIF,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAExBC,EAAUjB,IAEhB,OACI,sBAAKkB,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAMZ,uBAAMT,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SAEI,qBAAKG,MAAO,CAAC7B,MAAO,QAAS+B,OAAQ,SAArC,SACI,cAAC,IAAD,CACIC,KAAMpC,EACNC,QAASA,EACToC,SAAU,EACVC,WAAa,SAACC,GACVlB,EAAQmB,KAAR,mBAAyBD,EAAEE,MAE/BC,yBAAuB,c,4GC6JpCC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,e,QCOWC,EA1PS,CACpB,CACI,KAAQ,wBACR,KAAQ,MACT,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","file":"static/js/main.7f278e44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport shipCallsData from './../config/JSON/shipCallsData.json'\r\n\r\n\r\nconsole.log('COlumn data: ', shipCallsData)\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'ship',\r\n        headerName: 'Ship',\r\n        width: 130,\r\n    },\r\n    {\r\n        field: 'imo',\r\n        headerName: 'IMO',\r\n        width: 110,\r\n    },\r\n    {\r\n        field: 'portCall',\r\n        headerName: 'Port call',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'agent',\r\n        headerName: 'Agent',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'ETA',\r\n        headerName: 'ETA',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship calls\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '50px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '805px', height: '500px'}}>\r\n                        <DataGrid\r\n                            rows={shipCallsData}\r\n                            columns={columns}\r\n                            pageSize={7}\r\n                            onRowClick={ (e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                onChange={(e) =>\r\n                    updateData({name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                contentEditable={'false'}\r\n                value={data.iMOnumber}\r\n                onChange={(e) =>\r\n                    updateData({iMOnumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\n\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData}) {\r\n\r\n    const classes = useStyles();\r\n    console.log('THe data', data)\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\">\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({portOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                <MenuItem value={'No'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '15px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                onChange={(e) => {\r\n                    let company = e.target.value;\r\n                    let agent = {...data.agent, company};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: datePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: datePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: true,\r\n    addOnCloseEvent: true,\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        ETDPortOfCall: '',\r\n        ATAPortOfCall: '',\r\n        ATDPortOfCall: '',\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    waste: {\r\n        WasteDeliveryStatus:'',\r\n        LastPortDelivered:'',\r\n        LastPortDeliveredDate:'',\r\n        rows: [\r\n            {NR: 1}\r\n        ]\r\n    },\r\n}\r\n","import DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships',\r\n        icon: <DirectionsBoatIcon/>\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew',\r\n        icon: <WorkIcon/>\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage',\r\n        icon: <CompareArrowsIcon/>\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores',\r\n        icon: <StorageIcon/>\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects',\r\n        icon: <AssignmentIndIcon/>\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo',\r\n        icon: <LocalShippingIcon/>\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health',\r\n        icon: <LocalHospitalIcon/>\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods',\r\n        icon: <WarningIcon/>\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security',\r\n        icon: <SecurityIcon/>\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste',\r\n        icon: <DeleteIcon/>\r\n    }\r\n];","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children.find( el=> el.name === 'CallPurposeCode').value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.validISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","const readWasteXML = (waste, xml) => {\r\n    let WasteInformation = xml.getElementsByTagName('WasteInformation');\r\n    waste.rows = [];\r\n    try {\r\n\r\n        try {\r\n            waste.LastPortDelivered = WasteInformation[0].children.find(el => el.name === \"LastPortDelivered\").children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n        } catch (e) {\r\n            waste.LastPortDelivered = '';\r\n        }\r\n\r\n        waste.WasteDeliveryStatus = WasteInformation[0].children.find(el => el.name === \"WasteDeliveryStatus\").value;\r\n        waste.LastPortDeliveredDate = WasteInformation[0].children.find(el => el.name === \"LastPortDeliveredDate\").value;\r\n\r\n        let WasteDisposalInformation = xml.getElementsByTagName('WasteDisposalInformation');\r\n        if (WasteDisposalInformation.length > 0) {\r\n            for (let i = 0; i < WasteDisposalInformation.length; i++) {\r\n                let information = WasteDisposalInformation[i];\r\n                if (information) {\r\n                    try {\r\n                        let Seq = i + 1;\r\n                        let WasteType = information.children.find(el => el.name === \"WasteType\").children[0].value + \" : \" + information.children.find(el => el.name === \"WasteType\").children[1].value;\r\n                        let WasteToBeDelivered = information.children.find(el => el.name === \"ToBeDelivered\").value;\r\n                        let MaxStorage = information.children.find(el => el.name === \"MaxStorage\").value;\r\n                        let WasteAmount = information.children.find(el => el.name === \"RetainedOnboard\").value;\r\n                        let EstimatedWaste = information.children.find(el => el.name === \"EstimateGenerated\").value;\r\n                        let PortOfDelivery = information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'UNLoCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'CountryCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'Name').value;\r\n                        ;\r\n                        let row = {\r\n                            NR: Seq,\r\n                            WasteToBeDelivered: WasteToBeDelivered,\r\n                            WasteType: WasteType,\r\n                            MaxStorage: MaxStorage,\r\n                            WasteAmount: WasteAmount,\r\n                            EstimatedWaste: EstimatedWaste,\r\n                            PortOfDelivery: PortOfDelivery,\r\n                        }\r\n\r\n                        waste.rows.push(row)\r\n                    } catch (e) {\r\n                        console.log(e)\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n};\r\n\r\nexport default readWasteXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\nimport readWasteXML from \"./readWasteXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n    readWasteXML(data.waste, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        for (let i = 4; i < rows.length; i++) {\r\n            // skip the line if the field is not filled in\r\n            if (!rows[i][2]) continue;\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            if (!rows[i][2]) continue;\r\n\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            // let date = rows[i][4];\r\n            let date = \"\";\r\n            if (rows[i][4] != null) {\r\n                date = moment(rows[i][4]).format(\"DD/MM/YYYY\")\r\n            }\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = ''\r\n            if (rows[i][8] != null) {\r\n                symptomsDate = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        if (rows[7][7] != null) {\r\n            security.expiryDate = moment(rows[7][7]).format(\"YYYY-MM-DD\")\r\n        }\r\n        security.securityLevel = rows[11][4];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = '';\r\n            if (rows[i][2] != null) {\r\n                dateFrom = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let dateDeparture = '';\r\n            if (rows[i][3] != null) {\r\n                dateDeparture = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSWaste(file, onSave) {\r\n    data.waste.rows = [];\r\n    data.waste.WasteDeliveryStatus = '';\r\n    data.waste.LastPortDelivered = '';\r\n    data.waste.LastPortDeliveredDate = '';\r\n    let waste = data.waste;\r\n    readXlsxFile(file).then((rows) => {\r\n\r\n        data.waste.WasteDeliveryStatus = rows[2][3];\r\n        data.waste.LastPortDelivered = rows[9][2];\r\n        if (rows[9][4] != null) {\r\n            data.waste.LastPortDeliveredDate = moment(rows[9][4]).format(\"YYYY-MM-DD\");\r\n        }\r\n\r\n\r\n        for (let i = 14; i < 23; i++) {\r\n            let Port = '';\r\n            if (rows[i]) {\r\n                Port = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][6];\r\n                });\r\n\r\n\r\n                let Port_formatted = ''\r\n                if (Port) {\r\n                    Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    PortOfDelivery: Port_formatted,\r\n                    WasteType: rows[i][1],\r\n                    WasteToBeDelivered: rows[i][3],\r\n                    MaxStorage: rows[i][4],\r\n                    WasteAmount: rows[i][5],\r\n                    EstimatedWaste: rows[i][7],\r\n                }\r\n                waste.rows.push(row)\r\n            }\r\n        }\r\n\r\n        onSave({waste});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSWaste;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\nimport readXLSWaste from \"./readXLSWaste\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                } else if (name === \"waste information\") {\r\n                    readXLSWaste(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    EPCRequestBody.push({\r\n        EntryPosition: [\r\n            {\r\n                Position: [\r\n                    {Latitude: port.position.latitude},\r\n                    {Longitude: port.position.longitude},\r\n                    {Time: port.position.time}\r\n                ]\r\n            }]\r\n    })\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport const checkRequiredPort = (errors, data) => {\r\n    errors.Port = {};\r\n\r\n    if (!data.arrivalDeparture) errors.Port['Departure/Arrival'] = true;\r\n    if (!data.portOfCall) errors.Port[\"Port of call\"] = true;\r\n    if (!data.position.latitude) errors.Port['Latitude'] = true;\r\n    if (!data.position.longitude) errors.Port['Longitude'] = true;\r\n    if (!data.position.time) errors.Port['Position time'] = true;\r\n    if (!data.position.latitude)\r\n\r\n    if (!data.nameOfMaster.givenName) errors.Port['Master`s Given name'] = true;\r\n    if (!data.nameOfMaster.familyName) errors.Port['Master`s Family name'] = true;\r\n    if (!data.agent.company) errors.Port['Company name'] = true;\r\n    if (!data.personsOnBoard.numberOfPersonsOnBoard) errors.Port['Number of persons'] = true;\r\n}\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nexport const checkRequiredCrew = (errors, data) => {\r\n    errors.Crew = {};\r\n    data.rows.forEach( el => {\r\n        if (!el.Family_name) errors.Crew['Family name'] = [];\r\n        if (!el.Given_name) errors.Crew['Given name'] = [];\r\n        if (!el.Rank_of_rating) errors.Crew['Rank of rating'] = [];\r\n        if (!el.date_of_birth) errors.Crew['Date of birth'] = [];\r\n        if (!el.Country_of_birth) errors.Crew['Country of birth'] = [];\r\n        if (!el.Place_of_birth) errors.Crew['Place of birth'] = [];\r\n        if (!el.Nationality) errors.Crew['Nationality'] = [];\r\n        if (!el.ID_type) errors.Crew['ID type'] = [];\r\n        if (!el.ID_document_number) errors.Crew['ID document number'] = [];\r\n    })\r\n}\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredShip = (errors, data) => {\r\n    errors.Ships = {};\r\n    if (!data.port) errors.Ships['Port'] = true;\r\n    if (!data.issueDate)  errors.Ships['Date of issue'] = true;\r\n    if (!data.certificateNumber)  errors.Ships['Number'] = true;\r\n}\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        },\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredPassengers = (errors, data) => {\r\n    errors.Passengers = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Family_name) errors.Passengers['Family name'] = [];\r\n            if (!el.Given_name) errors.Passengers['Given name'] = [];\r\n            if (!el.date_of_birth) errors.Passengers['Date of birth'] = [];\r\n            if (!el.Country_of_birth) errors.Passengers['Country of birth'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of birth'] = [];\r\n            if (!el.Nationality) errors.Passengers['Nationality'] = [];\r\n            if (!el.ID_type) errors.Passengers['ID type'] = [];\r\n            if (!el.ID_document_number) errors.Passengers['ID document number'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of rating'] = [];\r\n            if (!el.Port_of_embarkation) errors.Passengers['Port of embarkation'] = [];\r\n            if (!el.Port_of_disembarkation) errors.Passengers['Port of disembarkation'] = [];\r\n            if (!el.Transit) errors.Passengers['Transit'] = [];\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredVoyage = (errors, data) => {\r\n    errors.Voyage = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Port) errors.Voyage.Port = [];\r\n    });\r\n\r\n}\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","export const checkRequiredHealth = (errors, data) => {\r\n    errors.Health = {};\r\n\r\n    data.illList.forEach(el => {\r\n        if (!el.NR) errors.Health['NR'] = [];\r\n        if (!el.crewPassenger) errors.Health['Crew or passenger'] = [];\r\n    });\r\n\r\n}\r\nconst generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({\r\n            CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]\r\n        });\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nexport const checkRequiredCrewEffects = (errors, data) => {\r\n    errors.Crew_effects = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.NR) errors.Crew_effects['NR'] = [];\r\n        if (!el.Effects_description) errors.Crew_effects['Effects description'] = [];\r\n    });\r\n\r\n}\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredCargo = (errors, data) => {\r\n    errors.Cargo = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Transport_unit) errors.Cargo['Transport unit(Container number)'] = [];\r\n    })\r\n}\r\n\r\nexport const checkRequiredDangerous = (errors, data) => {\r\n    errors.Dangerous_goods = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.Textual_reference) errors.Dangerous_goods['Textual reference'] = [];\r\n        if (!el.DG_Classification) errors.Dangerous_goods['DG Classification'] = [];\r\n    })\r\n}\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    Consignment.push({\r\n        PortOfLoading: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfLoading.name},\r\n                    {CountryCode: portOfLoading.countryCode},\r\n                    {UNLoCode: portOfLoading.code}\r\n                ]\r\n            }]\r\n    });\r\n    Consignment.push({\r\n        PortOfDischarge: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfDischarge.name},\r\n                    {CountryCode: portOfDischarge.countryCode},\r\n                    {UNLoCode: portOfDischarge.code}\r\n                ]\r\n            }]\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredSecurity = (errors, data) => {\r\n    errors.Security = {};\r\n\r\n    data.rows.forEach(el => {\r\n        if (!el.shipActivity) errors.Security['Activity'] = [];\r\n        if (!el.dateFrom) errors.Security['Date from'] = [];\r\n        if (!el.dateDeparture) errors.Security['Date departure'] = [];\r\n        if (!el.locationName) errors.Security['Location'] = [];\r\n    })\r\n}\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredWaste = (errors, data) => {\r\n    errors.Waste = {};\r\n\r\n    if (!data.WasteDeliveryStatus) errors.Waste['Are you delivering all,some or none\\n' +\r\n    'of your waste into port reception facility'] = true;\r\n    data.rows.forEach(el => {\r\n        if (!el.WasteType) errors.Waste['Waste Type'] = [];\r\n        if (!el.WasteToBeDelivered) errors.Waste['Waste to be delivered(m3)'] = [];\r\n    })\r\n}\r\nconst generateWaste = (waste, EPCRequestBody) => {\r\n    let WasteInformation = [];\r\n    let rows = waste.rows;\r\n    let lastPortDelivered = ListOfPorts.find(function (element) {\r\n        return element.code === waste.LastPortDelivered;\r\n    });\r\n\r\n\r\n    WasteInformation.push({WasteDeliveryStatus: waste.WasteDeliveryStatus});\r\n    WasteInformation.push({\r\n        LastPortDelivered: [\r\n            {\r\n                Port: [\r\n                    {Name: lastPortDelivered.name},\r\n                    {CountryCode: lastPortDelivered.countryCode},\r\n                    {UNLoCode: lastPortDelivered.code}\r\n                ]\r\n            }]\r\n    });\r\n    WasteInformation.push({LastPortDeliveredDate: waste.LastPortDeliveredDate});\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let WasteDisposalInformation = [];\r\n        let PortOfDelivery = {};\r\n        if (rows[i].PortOfDelivery && rows[i].PortOfDelivery !== '') {\r\n            let DeliveryPortCode = rows[i].PortOfDelivery.split(' -')[0]\r\n            PortOfDelivery = ListOfPorts.find(function (element) {\r\n                return element.code === DeliveryPortCode;\r\n            });\r\n        }\r\n        let wasteTypeCode = '';\r\n        let wasteTypeDescription = '';\r\n        if (rows[i].WasteType && rows[i].WasteType !== '' && rows[i].WasteType !== '[Waste type]') {\r\n            let wasteType = rows[i].WasteType.split(\" : \");\r\n            wasteTypeCode = wasteType[0];\r\n            wasteTypeDescription = wasteType[1];\r\n        }\r\n\r\n        WasteDisposalInformation.push({\r\n            WasteType: [\r\n                {Code: wasteTypeCode},\r\n                {Description: wasteTypeDescription},\r\n            ]\r\n        });\r\n        WasteDisposalInformation.push({ToBeDelivered: rows[i].WasteToBeDelivered});\r\n        WasteDisposalInformation.push({MaxStorage: rows[i].MaxStorage});\r\n        WasteDisposalInformation.push({RetainedOnboard: rows[i].WasteAmount});\r\n        WasteDisposalInformation.push({EstimateGenerated: rows[i].EstimatedWaste});\r\n        if (PortOfDelivery && PortOfDelivery !== {}) {\r\n            WasteDisposalInformation.push({\r\n                DisposedOfInPort: [\r\n                    {Name: PortOfDelivery.name},\r\n                    {CountryCode: PortOfDelivery.countryCode},\r\n                    {UNLoCode: PortOfDelivery.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n\r\n        WasteInformation.push({WasteDisposalInformation: WasteDisposalInformation});\r\n    }\r\n\r\n    EPCRequestBody.push({WasteInformation: WasteInformation})\r\n};\r\n\r\nexport default generateWaste;","import xml from 'xml'\r\nimport generatePort, {checkRequiredPort} from \"./generatePort\";\r\nimport generateCrew, {checkRequiredCrew} from \"./generateCrew\";\r\nimport generateShip, {checkRequiredShip} from \"./generateShip\";\r\nimport generatePassengers, {checkRequiredPassengers} from \"./generatePasssengers\";\r\nimport generateVoyage, {checkRequiredVoyage} from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth, {checkRequiredHealth} from \"./generateHealth\";\r\nimport generateCrewEffects, {checkRequiredCrewEffects} from \"./generateCrewEffects\";\r\nimport generateCargo, {checkRequiredCargo, checkRequiredDangerous} from \"./generateCargo\";\r\nimport generateSecurity, {checkRequiredSecurity} from \"./generateSecurity\";\r\nimport generateWaste, {checkRequiredWaste} from \"./generateWaste\";\r\nimport _ from 'underscore'\r\n\r\nfunction createXML(data, onError) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    const errors = checkRequiredFields(data);\r\n    if (!_.isEmpty(errors)) {\r\n        onError(errors);\r\n        return;\r\n    }\r\n\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n    generateWaste(data.waste, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nfunction checkRequiredFields(data) {\r\n    const errors = {};\r\n    checkRequiredPort(errors, data.port);\r\n    checkRequiredShip(errors, data.ship);\r\n    checkRequiredCrew(errors, data.crew);\r\n    checkRequiredPassengers(errors, data.passengers);\r\n    checkRequiredVoyage(errors, data.voyage);\r\n    checkRequiredCargo(errors, data.cargo);\r\n    checkRequiredDangerous(errors, data.dpg);\r\n    checkRequiredSecurity(errors, data.security);\r\n    checkRequiredCrewEffects(errors, data.crewEffects);\r\n    checkRequiredHealth(errors, data.health);\r\n    checkRequiredWaste(errors, data.waste)\r\n\r\n\r\n    //deleting empty objects\r\n    Object.keys(errors).forEach(el => {\r\n        if (_.isEmpty(errors[el])) delete errors[el];\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\",\"PCS\",\"LTR\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor}\r\n];\r\n\r\nfunction CrewEffectsForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind of packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport wasteTypes from \"../../config/consts/wasteTypes.json\";\r\n\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nlet wasteTypesList = [\"[Waste type]\"];\r\nfor (let i = 0; i < Object.keys(wasteTypes).length; i++) {\r\n    let wasteTypeFormatted = Object.keys(wasteTypes)[i] + ' : ' + Object.values(wasteTypes)[i];\r\n    wasteTypesList.push(wasteTypeFormatted);\r\n}\r\nconst WasteTypesEditor = <DropDownEditor options={wasteTypesList}/>;\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst columns = [\r\n    {key: \"NR\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"WasteType\", name: \"Waste Type\", editable: true, width: 150, editor: WasteTypesEditor},\r\n    {key: \"WasteDescription\", name: \"Waste Description(when relevant)\", editable: true, width: 250},\r\n    {key: \"WasteToBeDelivered\", name: \"Waste to be delivered(m3)\", editable: true, width: 250},\r\n    {key: \"MaxStorage\", name: \"Maximum dedicated storage capacity (m3)\", editable: true, width: 300},\r\n    {key: \"WasteAmount\", name: \"Amount of waste on board (m3)\", editable: true, width: 250},\r\n    {\r\n        key: \"PortOfDelivery\",\r\n        name: \"Port of delivery of remaining waste\",\r\n        editable: true,\r\n        width: 250,\r\n        editor: PortEditor\r\n    },\r\n    {key: \"EstimatedWaste\", name: \"Estimated amount of waste to be generated (m3)\", editable: true, width: 350},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction WasteForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n    function correctDateTime(date) {\r\n        date = \"\" + date;\r\n        return date.substr(0, 16);\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Waste information\r\n            </Typography>\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">Are you delivering all,some or none\r\n                        of your waste into port reception facility? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.WasteDeliveryStatus}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({WasteDeliveryStatus: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'All'}>All</MenuItem>\r\n                        <MenuItem value={'Some'}>Some</MenuItem>\r\n                        <MenuItem value={'None'}>None</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom className={classes.formControl}>\r\n                Last port and date when ship-generated waste was delivered\r\n            </Typography>\r\n            <div className={'flex-parent'}>\r\n                <Grid container justify=\"space-between\" style={{width: '80%'}}>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        margin={\"normal\"}\r\n                    >\r\n                        <InputLabel id=\"last-port-label\">Port</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"port-of-label-label\"\r\n                            value={data.LastPortDelivered}\r\n                            onChange={(e) => {\r\n                                updateData({LastPortDelivered: e.target.value})\r\n                            }}\r\n                        >\r\n                            {ListOfPorts.map((port, index) =>\r\n                                <MenuItem key={index} value={`${port.code}`}>\r\n                                    {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        style={{minWidth: '225px'}}\r\n                        variant={'outlined'}\r\n                        className={classes.formControl}\r\n                        value={correctDateTime(data.LastPortDeliveredDate)}\r\n                        onChange={(e) =>\r\n                            updateData({LastPortDeliveredDate: e.target.value})}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}} className={classes.formControl}>\r\n                Waste items\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(WasteForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                style={{marginRight:\"10%\"}}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\nimport WasteFormComponent from \"../components/blocks/WasteFormComponent\";\r\nimport _ from 'underscore'\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Port';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 200 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails() {\r\n\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg,\r\n                                                        waste\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg,\r\n                                                            waste\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        const onError = (errors) => {\r\n                                            console.log(\"THE ERRORS: \", errors);\r\n                                            let missingFields = [];\r\n                                            for (let block in errors) {\r\n                                                if (!errors.hasOwnProperty(block) || _.isEmpty(errors['' + block])) continue;\r\n                                                missingFields.push(`Block ${block}:`);\r\n                                                for (let field in errors['' + block]) {\r\n                                                    if (!errors['' + block].hasOwnProperty(field)) continue;\r\n                                                    if (typeof errors[block][field] === typeof true) {\r\n                                                        missingFields.push(`→  ${field} is empty`);\r\n                                                    } else {\r\n                                                        missingFields.push(`→  ${field} columns are empty`);\r\n                                                    }\r\n                                                }\r\n                                                missingFields.push(\"\");\r\n                                            }\r\n                                            setOpenErrorDialog({\r\n                                                open: true,\r\n                                                error: {\r\n                                                    title: \"Please fill in required fields first: \",\r\n                                                    text: missingFields\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                        createXML(data, onError);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                color={'success'}\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {(config.showDrawerIcons && item.icon) && <ListItemIcon>{item.icon}</ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {text: []}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\r\n                            (Array.isArray(openErrorDialog.error.text))\r\n                                ?\r\n                                openErrorDialog.error.text.map((el) => <>{el}<br/></>)\r\n                                : openErrorDialog.error.text\r\n                        }\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                setData({...data, port: {...data.port, ...dataItem}});\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                setData({...data, ship: {...data.ship, ...dataItem}})\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                setData({...data, voyage: {...data.voyage, ...dataItem}})\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crew: {...data.crew, ...dataItem}})\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                setData({...data, passengers: {...data.passengers, ...dataItem}});\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                setData({...data, shipStores: {...data.shipStores, ...dataItem}});\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} updateData={(dataItem) => {\r\n                setData({...data, crewEffects: {...data.crewEffects, ...dataItem}})\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                setData({...data, cargo: {...data.cargo, ...dataItem}});\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    let health = JSON.parse(JSON.stringify(data.health))\r\n                    setData({...data, health: {...health, ...dataItem}});\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    let dpg = JSON.parse(JSON.stringify(data.dpg))\r\n                    setData({...data, dpg: {...dpg, ...dataItem}});\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    let security = JSON.parse(JSON.stringify(data.security));\r\n                    setData({...data, security: {...security, ...dataItem}});\r\n                }}/>\r\n        case 'waste':\r\n            return <WasteFormComponent\r\n                data={data.waste}\r\n                updateData={(dataItem) => {\r\n                    let waste = JSON.parse(JSON.stringify(data.waste));\r\n                    setData({...data, waste: {...waste, ...dataItem}});\r\n                }}/>\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nif (config.addOnCloseEvent) {\r\n    window.onload = function () {\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            const confirmationMessage = 'It looks like you have been editing something. '\r\n                + 'If you leave before saving, your changes will be lost.';\r\n\r\n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n        });\r\n    };\r\n}\r\nexport default ShipDetails;","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}