{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/datePicker.js","components/blocks/voyageFormComponent.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","config/consts/listOfOptionsConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readWasteXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/formatDropdownListValue.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSWaste.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateWaste.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/WasteFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","pages/404NotFound.js","router.js","index.js"],"names":["console","log","shipCallsData","columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","rows","pageSize","onRowClick","e","push","id","disableSelectionOnClick","countryList","listOfShipTypes","formControl","margin","minWidth","formControlNoMargin","button","topMargin","correctDateTime","date","substr","ShipFormComponent","data","updateData","locationNumber","miniMarginTop","emptyDIV","component","gutterBottom","TextField","label","contentEditable","value","name","IMOnumber","otherInfo","onChange","target","callSign","mmsiNumner","FormControl","InputLabel","Select","labelId","flagState","map","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","grossTonnage","netTonnage","port","ListOfPorts","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","aria-label","onClick","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","agent","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","props","onSelect","setState","onCommit","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","dateFormat","React","Component","DropDownEditor","Editors","ports","editable","editor","options","withStyles","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","row","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","ship","iMOnumber","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","waste","WasteDeliveryStatus","LastPortDelivered","LastPortDeliveredDate","icon","readPortXML","xml","children","find","el","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","CargoConsignmentData","Consignment","portOfLoadingFormatted","portOfDischargeFormatted","ConsignmentNumber","CargoItemFirst","j","indexOf","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","BL_number","Port_of_loading","Port_of_discharge","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readWasteXML","WasteInformation","WasteDisposalInformation","information","WasteType","WasteToBeDelivered","MaxStorage","WasteAmount","EstimatedWaste","PortOfDelivery","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","getUIDate","isDateTime","year","getFullYear","month","getMonth","getDate","hours","getHours","minutes","getMinutes","getUTCHours","readXLSShip","file","onSave","readXlsxFile","then","readXLSPort","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLSWaste","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","CargoConsignmentsData","checkedBLNumbers","dpgRows","includes","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","generateWaste","lastPortDelivered","DeliveryPortCode","wasteTypeCode","wasteTypeDescription","wasteType","ToBeDelivered","RetainedOnboard","EstimateGenerated","DisposedOfInPort","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","onError","checkForErrors","errors","checkRequiredPort","Ships","checkRequiredShip","forEach","checkRequiredCrew","checkRequiredPassengers","Voyage","checkRequiredVoyage","Dangerous_goods","checkRequiredDangerous","Security","checkRequiredSecurity","Crew_effects","checkRequiredCrewEffects","_","isEmpty","checkRequiredHealth","Waste","checkRequiredWaste","checkRequiredFields","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","marginRight","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","filter","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","wasteTypesList","wasteTypes","wasteTypeFormatted","WasteTypesEditor","listOfOptions","listOfOptionsConst","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","dataItem","WasteFormComponent","onload","addEventListener","confirmationMessage","event","returnValue","ShipDetails","pathname","setActiveItem","MainPageInfo","portCall","eta","ETA","dates","imo","def","defaultDataConst","openErrorDialog","uploadAnchorEl","setUploadAnchorEl","downloadAnchorEl","setDownloadAnchorEl","handleClose","aria-controls","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","Boolean","onClose","htmlFor","missingFields","block","getElementById","reader","FileReader","result","dataCopy","readAsText","multiple","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Array","isArray","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"4mPAWAA,QAAQC,IAAI,gBAAiBC,GAC7B,IAAMC,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACvC,CACIF,MAAO,OACPC,WAAY,OACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,KAEX,CACIF,MAAO,WACPC,WAAY,YACZC,MAAO,KAEX,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,MAITC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCC,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAIF,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAExBC,EAAUjB,IAEhB,OACI,sBAAKkB,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,SACI,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,uQACiD,uBADjD,sDAMZ,uBAAMT,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,gJAKJ,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SAEI,qBAAKG,MAAO,CAAC7B,MAAO,QAAS+B,OAAQ,SAArC,SACI,cAAC,IAAD,CACIC,KAAMpC,EACNC,QAASA,EACToC,SAAU,EACVC,WAAY,SAACC,GACTlB,EAAQmB,KAAR,mBAAyBD,EAAEE,MAE/BC,yBAAuB,QAKnC,cAACd,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SACI,eAACC,EAAA,EAAD,CAAYE,MAAO,CAAC7B,MAAO,SAAU4B,QAAQ,IAA7C,6GAEI,uBAAK,uBAFT,0Y,4GCiJLW,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,k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","file":"static/js/main.8adf8841.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport shipCallsData from './../config/JSON/shipCallsData.json'\r\n\r\n\r\nconsole.log('COlumn data: ', shipCallsData)\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'ship',\r\n        headerName: 'Ship',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'imo',\r\n        headerName: 'IMO',\r\n        width: 110,\r\n    },\r\n    {\r\n        field: 'portCall',\r\n        headerName: 'Port call',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'agent',\r\n        headerName: 'Agent',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'ETA',\r\n        headerName: 'ETA',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Прототип Українського Морського Єдиного Вікна<br/>Ukrainian Maritime Single Window Prototype\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '10px'}} justify={'center'}>\r\n                    <Typography variant=\"h5\">\r\n                        Перелік суднозаходів / Ship calls\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid container style={{marginTop: '30px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '905px', height: '300px'}}>\r\n                        <DataGrid\r\n                            rows={shipCallsData}\r\n                            columns={columns}\r\n                            pageSize={4}\r\n                            onRowClick={(e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid container style={{marginTop: '20px'}} justify={'center'}>\r\n                    <Typography style={{width: '900px'}} variant=\"p\">\r\n                        Prototype is aimed to help public authorities implement electronic information exchange systems.\r\n                        <br/><br/>\r\n                        Prototype implements the Annex to the Convention on the Facilitation of International Navigation\r\n                        of 1965, approved by International Maritime Organization Resolution FAL.12 (40), Standard\r\n                        1.3bis, based on UN/CEFACT MMT reference data model (RDM) and refers to the European Union’s\r\n                        Maritime Single Window Environment (of the European Maritime Safety Agency, EMSA) requirements.\r\n                    </Typography>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData, locationNumber}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                value={data.IMOnumber}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Ship state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData, locationNumber}) {\r\n    const classes = useStyles();\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\">\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                contentEditable={false}\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                <MenuItem value={'No'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '15px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: datePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: datePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: true,\r\n    addOnCloseEvent: true,\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        ETDPortOfCall: '',\r\n        ATAPortOfCall: '',\r\n        ATDPortOfCall: '',\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    waste: {\r\n        WasteDeliveryStatus:'',\r\n        LastPortDelivered:'',\r\n        LastPortDeliveredDate:'',\r\n        rows: [\r\n            {NR: 1}\r\n        ]\r\n    },\r\n}\r\n","import DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships',\r\n        icon: <DirectionsBoatIcon/>\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew',\r\n        icon: <WorkIcon/>\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage',\r\n        icon: <CompareArrowsIcon/>\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores',\r\n        icon: <StorageIcon/>\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects',\r\n        icon: <AssignmentIndIcon/>\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo',\r\n        icon: <LocalShippingIcon/>\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health',\r\n        icon: <LocalHospitalIcon/>\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods',\r\n        icon: <WarningIcon/>\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security',\r\n        icon: <SecurityIcon/>\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste',\r\n        icon: <DeleteIcon/>\r\n    }\r\n];","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    if (xml.getElementsByTagName('EntryPosition')[0]) {\r\n        port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n        port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n        port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    }\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children.find( el=> el.name === 'CallPurposeCode').value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            try {\r\n                let PassengerData = passengerList[0].children[i]\r\n                if (PassengerData) {\r\n                    let Port_of_embarkation_formatted = '';\r\n                    if (PassengerData.children[7]) {\r\n                        Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                    }\r\n                    let Port_of_disembarkation = '';\r\n                    if (PassengerData.children[8]) {\r\n                        Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                    }\r\n                    console.log(\"PassengerData \", PassengerData)\r\n                    let row = {\r\n                        NR: i + 1,\r\n                        Family_name: PassengerData.children[1].children[1].value,\r\n                        Given_name: PassengerData.children[1].children[0].value,\r\n                        Gender: PassengerData.children[2].value,\r\n                        Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                        Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                        Place_of_birth: PassengerData.children[4].value,\r\n                        date_of_birth: PassengerData.children[3].value,\r\n                        ID_type: PassengerData.children[0].children[0].value,\r\n                        ID_document_number: PassengerData.children[0].children[1].value,\r\n                        Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                        Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                        Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                        Port_of_embarkation: Port_of_embarkation_formatted,\r\n                        Port_of_disembarkation: Port_of_disembarkation,\r\n                        Transit: PassengerData.children[9].value\r\n                    }\r\n                    passengers.rows.push(row)\r\n                }\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            try {\r\n                let PortCall = PortCalls[0].children[i]\r\n                if (PortCall) {\r\n\r\n                    let port = '';\r\n                    if (PortCall.children[2]) {\r\n                        port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                    }\r\n\r\n                    // console.log(\"PortCall \", PortCall)\r\n                    let row = {\r\n                        NR: i + 1,\r\n                        Date_of_arrival: PortCall.children[0].value,\r\n                        Date_of_departure: PortCall.children[1].value,\r\n                        Port: port,\r\n                        Port_facility: PortCall.children[2].children[1].value,\r\n                        Security_level: PortCall.children[3].value,\r\n                        Security_measures: PortCall.children[4].value\r\n                    }\r\n\r\n                    voyage.rows.push(row)\r\n                }\r\n            }catch (e) {\r\n                \r\n            }\r\n\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.validISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let CargoConsignmentData = xml.getElementsByTagName('CargoConsignmentsData')[0];\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"CargoConsignmentData \", CargoConsignmentData)\r\n    if (CargoConsignmentData) {\r\n\r\n        for (let i = 0; i < CargoConsignmentData.children.length; i++) {\r\n            let Consignment = CargoConsignmentData.children[i];\r\n            let portOfLoadingFormatted = '';\r\n            let portOfDischargeFormatted = '';\r\n            let ConsignmentNumber = '';\r\n            try {\r\n                ConsignmentNumber = Consignment.children.find(el => el.name === \"ConsignmentNumber\").value\r\n            } catch (e) {\r\n                ConsignmentNumber = '';\r\n            }\r\n\r\n            try {\r\n                let portOfLoading = Consignment.children.find(el => el.name === \"PortOfLoading\")\r\n                    .children.find(el => el.name === 'Port')\r\n                portOfLoadingFormatted = portOfLoading.children.find(el => el.name === 'UNLoCode').value + ' - ' + portOfLoading.children.find(el => el.name === 'CountryCode').value + ' - ' + portOfLoading.children.find(el => el.name === 'Name').value;\r\n            } catch (e) {\r\n                portOfLoadingFormatted = '';\r\n            }\r\n            try {\r\n                let portOfDischarge = Consignment.children.find(el => el.name === \"PortOfDischarge\")\r\n                    .children.find(el => el.name === 'Port')\r\n                portOfDischargeFormatted = portOfDischarge.children.find(el => el.name === 'UNLoCode').value + ' - ' + portOfDischarge.children.find(el => el.name === 'CountryCode').value + ' - ' + portOfDischarge.children.find(el => el.name === 'Name').value;\r\n            } catch (e) {\r\n                portOfDischargeFormatted = '';\r\n            }\r\n\r\n            let CargoItemFirst = Consignment.children.find(el => el.name === \"CargoItem\");\r\n            for (let j = Consignment.children.indexOf(CargoItemFirst); j < Consignment.children.length; j++) {\r\n                let CargoItem = Consignment.children[j];\r\n                if (CargoItem) {\r\n                    try {\r\n                        let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                        let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                        let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                        let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                        let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                        let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                        let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                        let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                        let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                        let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                        let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                        let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                        let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                        let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                        let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                        let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                        let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                        let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                        let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                        let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                        let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                        let row = {\r\n                            Seq: Seq,\r\n                            BL_number: ConsignmentNumber,\r\n                            Port_of_loading: portOfLoadingFormatted,\r\n                            Port_of_discharge: portOfDischargeFormatted,\r\n                            Number_of_packages: Number_of_packages,\r\n                            Kind_of_packages: Kind_of_packages,\r\n                            Transport_unit: Transport_unit,\r\n                            Description_of_goods: Description,\r\n                            HS_code: HSCode,\r\n                            Shipping_marks: Shipping_marks,\r\n                            Gross_quantity: Gross_quantity_content,\r\n                            Gross_Unit: Gross_Unit,\r\n                            Net_quantity: Net_quantity_content,\r\n                            Net_Unit: Net_Unit,\r\n                            Measurement: Measurement_content,\r\n                            Measurement_Unit: Measurement_Unit,\r\n                            Seal_number: Seal_number,\r\n                            Custom_status: Custom_status,\r\n                            Size_and_type: Size_and_type,\r\n                        }\r\n\r\n                        cargo.rows.push(row)\r\n                        let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                        console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n                        if (DGSafetyDataSheet) {\r\n                            let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                            let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                            let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                            let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                            let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                            let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                            let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                            let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                            let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                            let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                            let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                            let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                            let dgdRow = {\r\n                                Seq: Seq,\r\n                                Container_number: Transport_unit,\r\n                                Textual_reference: Textual_reference,\r\n                                DG_Classification: DG_Classification,\r\n                                IMO_hazard_classes: IMO_hazard_classes,\r\n                                UN_number: UN_number,\r\n                                Packing_group: Packing_group,\r\n                                Subsidiary_risk: Subsidiary_risk,\r\n                                Flash_point: Flash_point,\r\n                                pollution_code: pollution_code,\r\n                                EmS: EmS,\r\n                                Additional_information: Additional_information,\r\n                                Segregation_information: Segregation_information,\r\n                                On_board_location: On_board_location,\r\n                            }\r\n                            console.log(\"dgdRow \", dgdRow)\r\n                            dpg.rows.push(dgdRow);\r\n                        }\r\n                    } catch (e) {\r\n                        console.log(e)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n};\r\n\r\nexport default readCargoXML;","const readWasteXML = (waste, xml) => {\r\n    let WasteInformation = xml.getElementsByTagName('WasteInformation');\r\n    waste.rows = [];\r\n    try {\r\n\r\n        try {\r\n            waste.LastPortDelivered = WasteInformation[0].children.find(el => el.name === \"LastPortDelivered\").children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n        } catch (e) {\r\n            waste.LastPortDelivered = '';\r\n        }\r\n\r\n        waste.WasteDeliveryStatus = WasteInformation[0].children.find(el => el.name === \"WasteDeliveryStatus\").value;\r\n        waste.LastPortDeliveredDate = WasteInformation[0].children.find(el => el.name === \"LastPortDeliveredDate\").value;\r\n\r\n        let WasteDisposalInformation = xml.getElementsByTagName('WasteDisposalInformation');\r\n        if (WasteDisposalInformation.length > 0) {\r\n            for (let i = 0; i < WasteDisposalInformation.length; i++) {\r\n                let information = WasteDisposalInformation[i];\r\n                if (information) {\r\n                    try {\r\n                        let Seq = i + 1;\r\n                        let WasteType = information.children.find(el => el.name === \"WasteType\").children[0].value + \" : \" + information.children.find(el => el.name === \"WasteType\").children[1].value;\r\n                        let WasteToBeDelivered = information.children.find(el => el.name === \"ToBeDelivered\").value;\r\n                        let MaxStorage = information.children.find(el => el.name === \"MaxStorage\").value;\r\n                        let WasteAmount = information.children.find(el => el.name === \"RetainedOnboard\").value;\r\n                        let EstimatedWaste = information.children.find(el => el.name === \"EstimateGenerated\").value;\r\n                        let PortOfDelivery = information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'UNLoCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'CountryCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'Name').value;\r\n                        ;\r\n                        let row = {\r\n                            NR: Seq,\r\n                            WasteToBeDelivered: WasteToBeDelivered,\r\n                            WasteType: WasteType,\r\n                            MaxStorage: MaxStorage,\r\n                            WasteAmount: WasteAmount,\r\n                            EstimatedWaste: EstimatedWaste,\r\n                            PortOfDelivery: PortOfDelivery,\r\n                        }\r\n\r\n                        waste.rows.push(row)\r\n                    } catch (e) {\r\n                        console.log(e)\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n};\r\n\r\nexport default readWasteXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\nimport readWasteXML from \"./readWasteXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n    readWasteXML(data.waste, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        // let issueDate =\r\n        // let issueDate = new Date();\r\n        ship.issueDate = getUIDate(rows[13][4]);\r\n        // ship.issueDate = `${issueDate.getFullYear()}-${(issueDate.getMonth() + 1)}-${(issueDate.getDate() + 1)}`\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport function getUIDate(issueDate, isDateTime) {\r\n    if (!issueDate) return undefined;\r\n    let year = issueDate.getFullYear();\r\n    let month = issueDate.getMonth();\r\n    let date = issueDate.getDate();\r\n    let hours = issueDate.getHours();\r\n    let minutes = issueDate.getMinutes();\r\n    month ++;\r\n    if (month < 10) month = `0${month}`;\r\n    if (date < 10) date = `0${date}`;\r\n    if (hours < 10) hours = `0${hours}`;\r\n    if (minutes < 10) minutes = `0${minutes}`;\r\n\r\n    if (!isDateTime){\r\n        return `${year}-${month}-${date}`;\r\n    }\r\n    if (issueDate.getUTCHours() === 0) hours = '00';\r\n\r\n    return `${year}-${month}-${date}T${hours}:${minutes}`\r\n}\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport {getUIDate} from \"./readXLSShip\";\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = getUIDate(Row5[4],true);\r\n        port.ETDPortOfCall = getUIDate(Row5[6],true);\r\n        port.ATAPortOfCall = getUIDate(Row6[4],true);\r\n        port.ATDPortOfCall = getUIDate(Row6[6],true);\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = getUIDate(Row8[4],true);\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = []\r\n        for (let i = 13; i < 16; i++) {\r\n            if (rows[i][4]) port.callPurpose.push(rows[i][4]);\r\n        }\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        if (port.callPurpose.length === 0) port.callPurpose.push('')\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n        onSave({port});\r\n        return port;\r\n    });\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        for (let i = 4; i < rows.length; i++) {\r\n            // skip the line if the field is not filled in\r\n            if (!rows[i][2]) continue;\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation_formatted = '';\r\n            if (rows[i][10] != null) {\r\n                let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][10];\r\n                });\r\n                if (Port_of_embarkation) {\r\n                    Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n                }\r\n            }\r\n\r\n\r\n            let Port_of_disembarkation_formatted = '';\r\n            if (rows[i][11] != null) {\r\n                let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][11];\r\n                });\r\n                if (Port_of_disembarkation) {\r\n                    Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n                }\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","const format = (value) => {\r\n    console.log(\"value \",value)\r\n    if (value === \"(…)\" || value === \"[Unit]\"){\r\n        return null\r\n    }else {\r\n        return value\r\n    }\r\n};\r\n\r\nexport default format;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport format from \"./formatDropdownListValue\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            if (!rows[i][2]) continue;\r\n\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: format(rows[i][7]),\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            // let date = rows[i][4];\r\n            let date = \"\";\r\n            if (rows[i][4] != null) {\r\n                date = moment(rows[i][4]).format(\"DD/MM/YYYY\")\r\n            }\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = ''\r\n            if (rows[i][8] != null) {\r\n                symptomsDate = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport format from \"./formatDropdownListValue\";\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i - 3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: format(rows[i][3]),\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        if (rows[7][7] != null) {\r\n            security.expiryDate = moment(rows[7][7]).format(\"YYYY-MM-DD\")\r\n        }\r\n        security.securityLevel = rows[11][4];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = '';\r\n            if (rows[i][2] != null) {\r\n                dateFrom = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let dateDeparture = '';\r\n            if (rows[i][3] != null) {\r\n                dateDeparture = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport format from \"./formatDropdownListValue\";\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: format(rows[i][3]),\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: format(rows[i][10]),\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: format(rows[i][12]),\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: format(rows[i][18]),\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n                BL_number: rows[i][19],\r\n                Port_of_loading: rows[i][20],\r\n                Port_of_discharge: rows[i][21],\r\n            }\r\n            for (let key of Object.keys(row)) {\r\n                if (row[key]) {\r\n                    cargo.rows.push(row)\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: format(rows[i][4]),\r\n                UN_number: format(rows[i][5]),\r\n                Packing_group: format(rows[i][6]),\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: format(rows[i][9]),\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            for (let key of Object.keys(row)) {\r\n                if (row[key]) {\r\n                    dpg.rows.push(row)\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSWaste(file, onSave) {\r\n    data.waste.rows = [];\r\n    data.waste.WasteDeliveryStatus = '';\r\n    data.waste.LastPortDelivered = '';\r\n    data.waste.LastPortDeliveredDate = '';\r\n    let waste = data.waste;\r\n    readXlsxFile(file).then((rows) => {\r\n\r\n        data.waste.WasteDeliveryStatus = rows[2][3];\r\n        data.waste.LastPortDelivered = rows[9][2];\r\n        if (rows[9][4] != null) {\r\n            data.waste.LastPortDeliveredDate = moment(rows[9][4]).format(\"YYYY-MM-DD\");\r\n        }\r\n\r\n\r\n        for (let i = 14; i < 23; i++) {\r\n            let Port = '';\r\n            if (rows[i]) {\r\n                Port = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][6];\r\n                });\r\n\r\n\r\n                let Port_formatted = ''\r\n                if (Port) {\r\n                    Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    PortOfDelivery: Port_formatted,\r\n                    WasteType: rows[i][1],\r\n                    WasteToBeDelivered: rows[i][3],\r\n                    MaxStorage: rows[i][4],\r\n                    WasteAmount: rows[i][5],\r\n                    EstimatedWaste: rows[i][7],\r\n                }\r\n                waste.rows.push(row)\r\n            }\r\n        }\r\n\r\n        onSave({waste});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSWaste;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\nimport readXLSWaste from \"./readXLSWaste\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                } else if (name === \"waste information\") {\r\n                    readXLSWaste(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    if (port.position.latitude || port.position.longitude || port.position.time) {\r\n        EPCRequestBody.push({\r\n            EntryPosition: [\r\n                {\r\n                    Position: [\r\n                        {Latitude: port.position.latitude},\r\n                        {Longitude: port.position.longitude},\r\n                        {Time: port.position.time}\r\n                    ]\r\n                }]\r\n        })\r\n    }\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            if (callPurpose) {\r\n                EPCRequestBody.push({\r\n                    CallPurpose: [\r\n                        {CallPurposeCode: callPurpose.callPurposeCode},\r\n                        {CallPurposeText: callPurpose.callPurposeText}\r\n                    ]\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport const checkRequiredPort = (errors, data) => {\r\n    errors.Port = {};\r\n\r\n    if (!data.arrivalDeparture) errors.Port['Departure/Arrival'] = true;\r\n    if (!data.portOfCall) errors.Port[\"Port of call\"] = true;\r\n    if (data.position.latitude || data.position.longitude || data.position.time) {\r\n        if (!data.position.latitude) errors.Port['Latitude'] = true;\r\n        if (!data.position.longitude) errors.Port['Longitude'] = true;\r\n        if (!data.position.time) errors.Port['Position time'] = true;\r\n    }\r\n    if (!data.nameOfMaster.givenName) errors.Port['Master`s Given name'] = true;\r\n    if (!data.nameOfMaster.familyName) errors.Port['Master`s Family name'] = true;\r\n    if (!data.agent.company) errors.Port['Company name'] = true;\r\n    if (!data.personsOnBoard.numberOfPersonsOnBoard) errors.Port['Number of persons'] = true;\r\n}\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nexport const checkRequiredCrew = (errors, data) => {\r\n    errors.Crew = {};\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Family_name) errors.Crew['Family name'] = [];\r\n            if (!el.Given_name) errors.Crew['Given name'] = [];\r\n            if (!el.Rank_of_rating) errors.Crew['Rank of rating'] = [];\r\n            if (!el.date_of_birth) errors.Crew['Date of birth'] = [];\r\n            if (!el.Country_of_birth) errors.Crew['Country of birth'] = [];\r\n            if (!el.Place_of_birth) errors.Crew['Place of birth'] = [];\r\n            if (!el.Nationality) errors.Crew['Nationality'] = [];\r\n            if (!el.ID_type) errors.Crew['ID type'] = [];\r\n            if (!el.ID_document_number) errors.Crew['ID document number'] = [];\r\n        })\r\n    }\r\n}\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (parseInt(RankOfRatingCode) === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredShip = (errors, data) => {\r\n    errors.Ships = {};\r\n    if (data.port || data.issueDate || data.certificateNumber) {\r\n        if (!data.port) errors.Ships['Port'] = true;\r\n        if (!data.issueDate) errors.Ships['Date of issue'] = true;\r\n        if (!data.certificateNumber) errors.Ships['Number'] = true;\r\n    }\r\n}\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    if (shipPort) {\r\n        EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        })\r\n    }\r\n    EPCRequestBody.push(\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredPassengers = (errors, data) => {\r\n    errors.Passengers = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Family_name) errors.Passengers['Family name'] = [];\r\n            if (!el.Given_name) errors.Passengers['Given name'] = [];\r\n            if (!el.date_of_birth) errors.Passengers['Date of birth'] = [];\r\n            if (!el.Country_of_birth) errors.Passengers['Country of birth'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of birth'] = [];\r\n            if (!el.Nationality) errors.Passengers['Nationality'] = [];\r\n            if (!el.ID_type) errors.Passengers['ID type'] = [];\r\n            if (!el.ID_document_number) errors.Passengers['ID document number'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of rating'] = [];\r\n            if (!el.Port_of_embarkation) errors.Passengers['Port of embarkation'] = [];\r\n            if (!el.Port_of_disembarkation) errors.Passengers['Port of disembarkation'] = [];\r\n            if (!el.Transit) errors.Passengers['Transit'] = [];\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredVoyage = (errors, data) => {\r\n    errors.Voyage = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Port) errors.Voyage.Port = [];\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","import _ from 'underscore'\r\n\r\nexport const checkRequiredHealth = (errors, data) => {\r\n    errors.Health = {};\r\n\r\n    data.illList.forEach(el => {\r\n        if (_.isEmpty(el)) return;\r\n        if (!el.NR) errors.Health['NR'] = [];\r\n        if (!el.crewPassenger) errors.Health['Crew or passenger'] = [];\r\n    });\r\n\r\n}\r\nconst generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({\r\n            CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]\r\n        });\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nexport const checkRequiredCrewEffects = (errors, data) => {\r\n    errors.Crew_effects = {};\r\n\r\n    console.log(\"data.rows \", data.rows)\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {}\r\n    ]) && JSON.stringify(data.rows) !== JSON.stringify([\r\n        {NR: '', Family_name: '', Given_name: '', Rank_of_rating: ''}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.NR) errors.Crew_effects['NR'] = [];\r\n            if (!el.Effects_description) errors.Crew_effects['Effects description'] = [];\r\n        });\r\n    }\r\n\r\n}\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (parseInt(RankOfRatingCode) === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredDangerous = (errors, data) => {\r\n    errors.Dangerous_goods = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Textual_reference) errors.Dangerous_goods['Textual reference'] = [];\r\n            if (!el.DG_Classification) errors.Dangerous_goods['DG Classification'] = [];\r\n        })\r\n    }\r\n}\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let CargoConsignmentsData = [];\r\n    let checkedBLNumbers = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        console.log(\"generate cargo\")\r\n        if (rows[i].BL_number) {\r\n            if (!checkedBLNumbers.includes(rows[i].BL_number)) {\r\n                console.log(\"checking \", rows[i].BL_number)\r\n                let Consignment = [];\r\n\r\n                Consignment.push({ConsignmentNumber: rows[i].BL_number})\r\n\r\n                let portOfLoading = {};\r\n                if (rows[i].Port_of_loading && rows[i].Port_of_loading !== '') {\r\n                    let PortCode = rows[i].Port_of_loading.split(' -')[0]\r\n                    portOfLoading = listOfPortsConst.find(function (element) {\r\n                        return element.code === PortCode;\r\n                    });\r\n                }\r\n                let portOfDischarge = {};\r\n                if (rows[i].Port_of_discharge && rows[i].Port_of_discharge !== '') {\r\n                    let PortCode = rows[i].Port_of_discharge.split(' -')[0]\r\n                    portOfDischarge = listOfPortsConst.find(function (element) {\r\n                        return element.code === PortCode;\r\n                    });\r\n                }\r\n\r\n                if (portOfLoading) {\r\n                    Consignment.push({\r\n                        PortOfLoading: [\r\n                            {\r\n                                Port: [\r\n                                    {Name: portOfLoading.name},\r\n                                    {CountryCode: portOfLoading.countryCode},\r\n                                    {UNLoCode: portOfLoading.code}\r\n                                ]\r\n                            }]\r\n                    });\r\n                }\r\n\r\n                if (portOfDischarge) {\r\n                    Consignment.push({\r\n                        PortOfDischarge: [\r\n                            {\r\n                                Port: [\r\n                                    {Name: portOfDischarge.name},\r\n                                    {CountryCode: portOfDischarge.countryCode},\r\n                                    {UNLoCode: portOfDischarge.code}\r\n                                ]\r\n                            }]\r\n                    });\r\n                }\r\n                let CargoItem = [];\r\n                CargoItem.push({ItemNumber: rows[i].Seq});\r\n                CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n                CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n                CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n                CargoItem.push({\r\n                    GrossQuantity: [\r\n                        {Content: rows[i].Gross_quantity},\r\n                        {UnitCode: rows[i].Gross_Unit}\r\n                    ]\r\n                });\r\n                CargoItem.push({\r\n                    NetQuantity: [\r\n                        {Content: rows[i].Net_quantity},\r\n                        {UnitCode: rows[i].Net_Unit}\r\n                    ]\r\n                });\r\n                CargoItem.push({\r\n                    GoodsType: [\r\n                        {HSCode: rows[i].HS_code},\r\n                        {Description: rows[i].Description_of_goods}\r\n                    ]\r\n                });\r\n                CargoItem.push({\r\n                    Measurement: [\r\n                        {Content: rows[i].Measurement},\r\n                        {UnitCode: rows[i].Measurement_Unit}\r\n                    ]\r\n                });\r\n                CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n                let dpgTable = dpgRows.find(function (element) {\r\n                    return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n                });\r\n\r\n                if (dpgTable) {\r\n                    CargoItem.push({\r\n                        DGSafetyDataSheet: [\r\n                            {ProperShippingName: dpgTable.Textual_reference},\r\n                            {DGClassification: dpgTable.DG_Classification},\r\n                            {UNNumber: dpgTable.UN_number},\r\n                            {UNClass: dpgTable.IMO_hazard_classes},\r\n                            {PackingGroup: dpgTable.Packing_group},\r\n                            {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                            {FlashPoint: dpgTable.Flash_point},\r\n                            {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                            {EmergencyInstruction: dpgTable.EmS},\r\n                            {SegregationInformation: dpgTable.Segregation_information},\r\n                            {OnBoardLocation: dpgTable.On_board_location},\r\n                            {Comment: dpgTable.Additional_information},\r\n                        ]\r\n                    })\r\n                }\r\n\r\n                CargoItem.push({\r\n                    Container: [\r\n                        {MarksAndNumber: rows[i].Transport_unit},\r\n                        {SizeAndType: rows[i].Size_and_type},\r\n                        {SealNumber: rows[i].Seal_number},\r\n                    ]\r\n                });\r\n                Consignment.push({CargoItem: CargoItem});\r\n                for (let j = i+1; j < rows.length; j++) {\r\n                    if (rows[j].BL_number === rows[i].BL_number) {\r\n                        let CargoItem = [];\r\n                        CargoItem.push({ItemNumber: rows[j].Seq});\r\n                        CargoItem.push({ShippingMarks: rows[j].Shipping_marks});\r\n                        CargoItem.push({NoOfPackages: rows[j].Number_of_packages});\r\n                        CargoItem.push({PackageType: rows[j].Kind_of_packages});\r\n                        CargoItem.push({\r\n                            GrossQuantity: [\r\n                                {Content: rows[j].Gross_quantity},\r\n                                {UnitCode: rows[j].Gross_Unit}\r\n                            ]\r\n                        });\r\n                        CargoItem.push({\r\n                            NetQuantity: [\r\n                                {Content: rows[j].Net_quantity},\r\n                                {UnitCode: rows[j].Net_Unit}\r\n                            ]\r\n                        });\r\n                        CargoItem.push({\r\n                            GoodsType: [\r\n                                {HSCode: rows[j].HS_code},\r\n                                {Description: rows[j].Description_of_goods}\r\n                            ]\r\n                        });\r\n                        CargoItem.push({\r\n                            Measurement: [\r\n                                {Content: rows[j].Measurement},\r\n                                {UnitCode: rows[j].Measurement_Unit}\r\n                            ]\r\n                        });\r\n                        CargoItem.push({CustomStatus: rows[j].Custom_status});\r\n                        let dpgTable = dpgRows.find(function (element) {\r\n                            return parseInt(element.Seq) === parseInt(rows[j].Seq);\r\n                        });\r\n\r\n                        if (dpgTable) {\r\n                            CargoItem.push({\r\n                                DGSafetyDataSheet: [\r\n                                    {ProperShippingName: dpgTable.Textual_reference},\r\n                                    {DGClassification: dpgTable.DG_Classification},\r\n                                    {UNNumber: dpgTable.UN_number},\r\n                                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                                    {PackingGroup: dpgTable.Packing_group},\r\n                                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                                    {FlashPoint: dpgTable.Flash_point},\r\n                                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                                    {EmergencyInstruction: dpgTable.EmS},\r\n                                    {SegregationInformation: dpgTable.Segregation_information},\r\n                                    {OnBoardLocation: dpgTable.On_board_location},\r\n                                    {Comment: dpgTable.Additional_information},\r\n                                ]\r\n                            })\r\n                        }\r\n\r\n                        CargoItem.push({\r\n                            Container: [\r\n                                {MarksAndNumber: rows[j].Transport_unit},\r\n                                {SizeAndType: rows[j].Size_and_type},\r\n                                {SealNumber: rows[j].Seal_number},\r\n                            ]\r\n                        });\r\n                        Consignment.push({CargoItem: CargoItem});\r\n                    }\r\n                }\r\n                CargoConsignmentsData.push({Consignment: Consignment})\r\n                checkedBLNumbers.push(rows[i].BL_number)\r\n                console.log(\"checkedBLNumbers \",checkedBLNumbers)\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: CargoConsignmentsData})\r\n};\r\n\r\nexport default generateCargo;\r\n\r\n// Consignment.push({CargoItemListSize: rows.length});\r\n// for (let i = 0; i < rows.length; i++) {\r\n//     let CargoItem = [];\r\n//\r\n//     CargoItem.push({ItemNumber: rows[i].Seq});\r\n//     CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n//     CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n//     CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n//     CargoItem.push({\r\n//         GrossQuantity: [\r\n//             {Content: rows[i].Gross_quantity},\r\n//             {UnitCode: rows[i].Gross_Unit}\r\n//         ]\r\n//     });\r\n//     CargoItem.push({\r\n//         NetQuantity: [\r\n//             {Content: rows[i].Net_quantity},\r\n//             {UnitCode: rows[i].Net_Unit}\r\n//         ]\r\n//     });\r\n//     CargoItem.push({\r\n//         GoodsType: [\r\n//             {HSCode: rows[i].HS_code},\r\n//             {Description: rows[i].Description_of_goods}\r\n//         ]\r\n//     });\r\n//     CargoItem.push({\r\n//         Measurement: [\r\n//             {Content: rows[i].Measurement},\r\n//             {UnitCode: rows[i].Measurement_Unit}\r\n//         ]\r\n//     });\r\n//     CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n//     let dpgTable = dpgRows.find(function (element) {\r\n//         return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n//     });\r\n//\r\n//\r\n//     if (dpgTable) {\r\n//         CargoItem.push({\r\n//             DGSafetyDataSheet: [\r\n//                 {ProperShippingName: dpgTable.Textual_reference},\r\n//                 {DGClassification: dpgTable.DG_Classification},\r\n//                 {UNNumber: dpgTable.UN_number},\r\n//                 {UNClass: dpgTable.IMO_hazard_classes},\r\n//                 {PackingGroup: dpgTable.Packing_group},\r\n//                 {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n//                 {FlashPoint: dpgTable.Flash_point},\r\n//                 {MARPOLPollutionCode: dpgTable.pollution_code},\r\n//                 {EmergencyInstruction: dpgTable.EmS},\r\n//                 {SegregationInformation: dpgTable.Segregation_information},\r\n//                 {OnBoardLocation: dpgTable.On_board_location},\r\n//                 {Comment: dpgTable.Additional_information},\r\n//             ]\r\n//         })\r\n//     }\r\n//\r\n//     CargoItem.push({\r\n//         Container: [\r\n//             {MarksAndNumber: rows[i].Transport_unit},\r\n//             {SizeAndType: rows[i].Size_and_type},\r\n//             {SealNumber: rows[i].Seal_number},\r\n//         ]\r\n//     });\r\n//     Consignment.push({CargoItem: CargoItem});\r\n// }\r\n// Consignment.push({CargoItemListSize: rows.length});","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredSecurity = (errors, data) => {\r\n    errors.Security = {};\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([{NR: 1}])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.shipActivity) errors.Security['Activity'] = [];\r\n            if (!el.dateFrom) errors.Security['Date from'] = [];\r\n            if (!el.dateDeparture) errors.Security['Date departure'] = [];\r\n            if (!el.locationName) errors.Security['Location'] = [];\r\n        })\r\n    }\r\n}\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredWaste = (errors, data) => {\r\n    errors.Waste = {};\r\n\r\n    if (!data.WasteDeliveryStatus) errors.Waste['Are you delivering all,some or none\\n' +\r\n    'of your waste into port reception facility'] = true;\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.WasteType) errors.Waste['Waste Type'] = [];\r\n            if (!el.WasteToBeDelivered) errors.Waste['Waste to be delivered(m3)'] = [];\r\n        })\r\n    }\r\n}\r\nconst generateWaste = (waste, EPCRequestBody) => {\r\n    let WasteInformation = [];\r\n    let rows = waste.rows;\r\n    let lastPortDelivered = ListOfPorts.find(function (element) {\r\n        return element.code === waste.LastPortDelivered;\r\n    });\r\n\r\n\r\n    WasteInformation.push({WasteDeliveryStatus: waste.WasteDeliveryStatus});\r\n    if (lastPortDelivered) {\r\n        WasteInformation.push({\r\n            LastPortDelivered: [\r\n                {\r\n                    Port: [\r\n                        {Name: lastPortDelivered.name},\r\n                        {CountryCode: lastPortDelivered.countryCode},\r\n                        {UNLoCode: lastPortDelivered.code}\r\n                    ]\r\n                }]\r\n        });\r\n    }\r\n\r\n    WasteInformation.push({LastPortDeliveredDate: waste.LastPortDeliveredDate});\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let WasteDisposalInformation = [];\r\n        let PortOfDelivery = {};\r\n        if (rows[i].PortOfDelivery && rows[i].PortOfDelivery !== '') {\r\n            let DeliveryPortCode = rows[i].PortOfDelivery.split(' -')[0]\r\n            PortOfDelivery = ListOfPorts.find(function (element) {\r\n                return element.code === DeliveryPortCode;\r\n            });\r\n        }\r\n        let wasteTypeCode = '';\r\n        let wasteTypeDescription = '';\r\n        if (rows[i].WasteType && rows[i].WasteType !== '' && rows[i].WasteType !== '[Waste type]') {\r\n            let wasteType = rows[i].WasteType.split(\" : \");\r\n            wasteTypeCode = wasteType[0];\r\n            wasteTypeDescription = wasteType[1];\r\n        }\r\n\r\n        WasteDisposalInformation.push({\r\n            WasteType: [\r\n                {Code: wasteTypeCode},\r\n                {Description: wasteTypeDescription},\r\n            ]\r\n        });\r\n        WasteDisposalInformation.push({ToBeDelivered: rows[i].WasteToBeDelivered});\r\n        WasteDisposalInformation.push({MaxStorage: rows[i].MaxStorage});\r\n        WasteDisposalInformation.push({RetainedOnboard: rows[i].WasteAmount});\r\n        WasteDisposalInformation.push({EstimateGenerated: rows[i].EstimatedWaste});\r\n        if (PortOfDelivery && PortOfDelivery !== {}) {\r\n            WasteDisposalInformation.push({\r\n                DisposedOfInPort: [\r\n                    {Name: PortOfDelivery.name},\r\n                    {CountryCode: PortOfDelivery.countryCode},\r\n                    {UNLoCode: PortOfDelivery.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n\r\n        WasteInformation.push({WasteDisposalInformation: WasteDisposalInformation});\r\n    }\r\n\r\n    EPCRequestBody.push({WasteInformation: WasteInformation})\r\n};\r\n\r\nexport default generateWaste;","import xml from 'xml'\r\nimport generatePort, {checkRequiredPort} from \"./generatePort\";\r\nimport generateCrew, {checkRequiredCrew} from \"./generateCrew\";\r\nimport generateShip, {checkRequiredShip} from \"./generateShip\";\r\nimport generatePassengers, {checkRequiredPassengers} from \"./generatePasssengers\";\r\nimport generateVoyage, {checkRequiredVoyage} from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth, {checkRequiredHealth} from \"./generateHealth\";\r\nimport generateCrewEffects, {checkRequiredCrewEffects} from \"./generateCrewEffects\";\r\nimport generateCargo, {checkRequiredDangerous} from \"./generateCargo\";\r\nimport generateSecurity, {checkRequiredSecurity} from \"./generateSecurity\";\r\nimport generateWaste, {checkRequiredWaste} from \"./generateWaste\";\r\nimport _ from 'underscore'\r\n\r\nfunction createXML(data, onError, checkForErrors) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    const errors = checkRequiredFields(data);\r\n    if (!_.isEmpty(errors) && checkForErrors) {\r\n        onError(errors);\r\n        return;\r\n    }\r\n\r\n    let EPCRequestBody = [];\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n    generateWaste(data.waste, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nfunction checkRequiredFields(data) {\r\n    const errors = {};\r\n    checkRequiredPort(errors, data.port);\r\n    checkRequiredShip(errors, data.ship);\r\n    checkRequiredCrew(errors, data.crew);\r\n    checkRequiredPassengers(errors, data.passengers);\r\n    checkRequiredVoyage(errors, data.voyage);\r\n    checkRequiredDangerous(errors, data.dpg);\r\n    checkRequiredSecurity(errors, data.security);\r\n    checkRequiredCrewEffects(errors, data.crewEffects);\r\n    checkRequiredHealth(errors, data.health);\r\n    checkRequiredWaste(errors, data.waste)\r\n\r\n\r\n    //deleting empty objects\r\n    Object.keys(errors).forEach(el => {\r\n        if (_.isEmpty(errors[el])) delete errors[el];\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\",\"PCS\",\"LTR\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: false},\r\n    {key: \"Given_name\", name: \"Given name\", editable: false},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: false},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor}\r\n];\r\n\r\nfunction CrewEffectsForm({data, crewData, updateData}) {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            item.NR = updated.NR;\r\n\r\n                            let crewItem = crewData.rows.find(function (element) {\r\n                                return parseInt(element.NR) === parseInt(item.NR)\r\n                            });\r\n                            console.log(\"crewItem \", crewItem)\r\n                            if (!crewItem) {\r\n                                item.NR = '';\r\n                                item.Family_name = '';\r\n                                item.Given_name = '';\r\n                                item.Rank_of_rating = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Crew member with number \" + item.NR\r\n                                        + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                item = {...item, ...updated};\r\n                                continue;\r\n                            } else {\r\n                                item.Family_name = crewItem.Family_name;\r\n                                item.Given_name = crewItem.Given_name;\r\n                                item.Rank_of_rating = crewItem.Rank_of_rating;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"BL_number\", name: \"B/L number\", editable: true, width: 100},\r\n    {key: \"Port_of_loading\", name: \"Port of loading\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_discharge\", name: \"Port of discharge\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind of packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport wasteTypes from \"../../config/consts/wasteTypes.json\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nlet wasteTypesList = [\"[Waste type]\"];\r\nfor (let i = 0; i < Object.keys(wasteTypes).length; i++) {\r\n    let wasteTypeFormatted = Object.keys(wasteTypes)[i] + ' : ' + Object.values(wasteTypes)[i];\r\n    wasteTypesList.push(wasteTypeFormatted);\r\n}\r\nconst WasteTypesEditor = <DropDownEditor options={wasteTypesList}/>;\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst columns = [\r\n    {key: \"NR\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"WasteType\", name: \"Waste Type\", editable: true, width: 150, editor: WasteTypesEditor},\r\n    {key: \"WasteDescription\", name: \"Waste Description(when relevant)\", editable: true, width: 250},\r\n    {key: \"WasteToBeDelivered\", name: \"Waste to be delivered(m3)\", editable: true, width: 250},\r\n    {key: \"MaxStorage\", name: \"Maximum dedicated storage capacity (m3)\", editable: true, width: 300},\r\n    {key: \"WasteAmount\", name: \"Amount of waste on board (m3)\", editable: true, width: 250},\r\n    {\r\n        key: \"PortOfDelivery\",\r\n        name: \"Port of delivery of remaining waste\",\r\n        editable: true,\r\n        width: 250,\r\n        editor: PortEditor\r\n    },\r\n    {key: \"EstimatedWaste\", name: \"Estimated amount of waste to be generated (m3)\", editable: true, width: 350},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction WasteForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n    function correctDateTime(date) {\r\n        date = \"\" + date;\r\n        return date.substr(0, 16);\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Waste information\r\n            </Typography>\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">Are you delivering all,some or none\r\n                        of your waste into port reception facility? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.WasteDeliveryStatus}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({WasteDeliveryStatus: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'All'}>All</MenuItem>\r\n                        <MenuItem value={'Some'}>Some</MenuItem>\r\n                        <MenuItem value={'None'}>None</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom className={classes.formControl}>\r\n                Last port and date when ship-generated waste was delivered\r\n            </Typography>\r\n            <div className={'flex-parent'}>\r\n                <Grid container justify=\"space-between\" style={{width: '80%'}}>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        margin={\"normal\"}\r\n                    >\r\n                        <InputLabel id=\"last-port-label\">Port</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"port-of-label-label\"\r\n                            value={data.LastPortDelivered}\r\n                            onChange={(e) => {\r\n                                updateData({LastPortDelivered: e.target.value})\r\n                            }}\r\n                        >\r\n                            {ListOfPorts.map((port, index) =>\r\n                                <MenuItem key={index} value={`${port.code}`}>\r\n                                    {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        style={{minWidth: '225px'}}\r\n                        variant={'outlined'}\r\n                        className={classes.formControl}\r\n                        value={correctDateTime(data.LastPortDeliveredDate)}\r\n                        onChange={(e) =>\r\n                            updateData({LastPortDeliveredDate: e.target.value})}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}} className={classes.formControl}>\r\n                Waste items\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(WasteForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                style={{marginRight:\"10%\"}}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button startIcon={<AddIcon/>} variant=\"primary\" onClick={() => {\r\n                if (data.rows.length === 0) {\r\n                    data.rows.push({NR: 1});\r\n                    updateData({rows: data.rows})\r\n                    return;\r\n                }\r\n                let NR = parseInt(data.rows[data.rows.length-1].NR);\r\n                NR++;\r\n                data.rows.push({NR: NR});\r\n                updateData({rows: data.rows})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button startIcon={<DeleteOutlineIcon/>} variant=\"primary\" onClick={() => {\r\n                data.rows.pop();\r\n                updateData({rows: data.rows});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\nimport WasteFormComponent from \"../components/blocks/WasteFormComponent\";\r\nimport _ from 'underscore'\r\nimport MainPageInfo from './../config/JSON/shipCallsData.json'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Port';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 200 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        // height: 70\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails({history}) {\r\n    const location = history.location.pathname;\r\n    let locationNumber = parseInt(location.split('/')[2]);\r\n    locationNumber--;\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(() => {\r\n        let portOfCall = MainPageInfo[locationNumber].portCall;\r\n        let eta = MainPageInfo[locationNumber].ETA;\r\n        if (eta.split('.').length !== 0) {\r\n            let dates = eta.split('.');\r\n            if (dates[0].length !== 2) {\r\n                eta = `${dates[0]}-${dates[1]}-${dates[2]}T00:00`;\r\n            } else {\r\n                eta = `${dates[2]}-${dates[1]}-${dates[0]}T00:00`;\r\n            }\r\n        }\r\n        let companyName = MainPageInfo[locationNumber].agent;\r\n        let imo = MainPageInfo[locationNumber].imo;\r\n        let ship = MainPageInfo[locationNumber].ship;\r\n\r\n        const def = defaultDataConst;\r\n        def.port.portOfCall = portOfCall;\r\n        def.port.ETAPortOfCall = eta;\r\n        def.port.agent.company = companyName;\r\n        def.ship.name = ship;\r\n        def.ship.IMOnumber = imo;\r\n        return def\r\n    });\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n    const [uploadAnchorEl, setUploadAnchorEl] = React.useState(null);\r\n    const [downloadAnchorEl, setDownloadAnchorEl] = React.useState(null);\r\n    const handleUploadClick = (event) => {\r\n        setUploadAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDownloadClick = (event) => {\r\n        setDownloadAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setUploadAnchorEl(null);\r\n        setDownloadAnchorEl(null);\r\n    };\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Прототип Українського Морського Єдиного Вікна<br/>Ukrainian Maritime Single Window Prototype\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-end'} style={{marginTop: '12px'}}>\r\n                                <Button\r\n                                    aria-controls=\"upload-menu\"\r\n                                    style={{marginRight: '30px'}}\r\n                                    variant=\"contained\"\r\n                                    startIcon={<CloudUploadIcon/>}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleUploadClick}\r\n                                >\r\n                                    Upload\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"upload-menu\"\r\n                                    anchorEl={uploadAnchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(uploadAnchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <label htmlFor=\"read-xml-file\">Upload XML document</label>\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <label htmlFor=\"excel-file\">Upload Excel document</label>\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                                <Button\r\n                                    aria-controls=\"download-menu\"\r\n                                    startIcon={<GetAppIcon/>}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleDownloadClick}\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"download-menu\"\r\n                                    anchorEl={downloadAnchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(downloadAnchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        createXML(data, () => {}, false)\r\n                                        handleClose();\r\n                                    }}>Save to XML (as draft)</MenuItem>\r\n                                    <MenuItem onClick={() => {\r\n                                        const onError = (errors) => {\r\n                                            let missingFields = [];\r\n                                            for (let block in errors) {\r\n                                                if (!errors.hasOwnProperty(block) || _.isEmpty(errors['' + block])) continue;\r\n                                                missingFields.push(`Block ${block}:`);\r\n                                                for (let field in errors['' + block]) {\r\n                                                    if (!errors['' + block].hasOwnProperty(field)) continue;\r\n                                                    if (typeof errors[block][field] === typeof true) {\r\n                                                        missingFields.push(`→  ${field} is empty`);\r\n                                                    } else {\r\n                                                        missingFields.push(`→  ${field} columns are empty`);\r\n                                                    }\r\n                                                }\r\n                                                missingFields.push(\"\");\r\n                                            }\r\n                                            setOpenErrorDialog({\r\n                                                open: true,\r\n                                                error: {\r\n                                                    title: \"Please fill in required fields first: \",\r\n                                                    text: missingFields\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                        createXML(data, onError, true);\r\n                                        handleClose();\r\n                                    }}>Generate full XML file</MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                            <input\r\n                                className={classes.uploadFile}\r\n                                onChange={() => {\r\n                                    const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = (() => {\r\n                                        try {\r\n                                            let {\r\n                                                port,\r\n                                                crew,\r\n                                                ship,\r\n                                                passengers,\r\n                                                voyage,\r\n                                                shipStores,\r\n                                                health,\r\n                                                crewEffects,\r\n                                                cargo,\r\n                                                dpg,\r\n                                                waste\r\n                                            } = readXML(reader.result);\r\n                                            let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                            setData({\r\n                                                ...dataCopy, ...{\r\n                                                    port,\r\n                                                    crew,\r\n                                                    ship,\r\n                                                    passengers,\r\n                                                    voyage,\r\n                                                    shipStores,\r\n                                                    health,\r\n                                                    crewEffects,\r\n                                                    cargo,\r\n                                                    dpg,\r\n                                                    waste\r\n                                                }\r\n                                            });\r\n                                        } catch (e) {\r\n                                            setOpenErrorDialog({\r\n                                                open: true, error: {\r\n                                                    title: 'Error while reading XML',\r\n                                                    text: [e]\r\n                                                }\r\n                                            })\r\n                                            console.error(e);\r\n                                        }\r\n                                    })\r\n                                    reader.readAsText(file);\r\n                                }}\r\n                                id=\"read-xml-file\"\r\n                                type=\"file\"\r\n                            />\r\n                            <input\r\n                                className={classes.uploadFile}\r\n                                id=\"excel-file\"\r\n                                multiple\r\n                                onChange={() => {\r\n                                    const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                    try {\r\n                                        readXLS(files, setOpenErrorDialog, (item) => {\r\n                                            let dataCopy = data;\r\n                                            dataCopy = {...dataCopy, ...{item}}\r\n                                            setData(dataCopy)\r\n                                        });\r\n                                    } catch (e) {\r\n                                        console.log(\"catch\")\r\n                                        setOpenErrorDialog({\r\n                                            open: true, error: {\r\n                                                title: 'Error while reading XLS',\r\n                                                text: e\r\n                                            }\r\n                                        })\r\n                                        console.error(e);\r\n                                    }\r\n\r\n\r\n                                }}\r\n                                type=\"file\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                color={'success'}\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {(config.showDrawerIcons && item.icon) && <ListItemIcon>{item.icon}</ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {text: []}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\r\n                            (Array.isArray(openErrorDialog.error.text))\r\n                                ?\r\n                                openErrorDialog.error.text.map((el) => <>{el}<br/></>)\r\n                                : openErrorDialog.error.text\r\n                        }\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                setData({...data, port: {...data.port, ...dataItem}});\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                setData({...data, ship: {...data.ship, ...dataItem}})\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                setData({...data, voyage: {...data.voyage, ...dataItem}})\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crew: {...data.crew, ...dataItem}})\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                setData({...data, passengers: {...data.passengers, ...dataItem}});\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                setData({...data, shipStores: {...data.shipStores, ...dataItem}});\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} crewData={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crewEffects: {...data.crewEffects, ...dataItem}})\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                setData({...data, cargo: {...data.cargo, ...dataItem}});\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    let health = JSON.parse(JSON.stringify(data.health))\r\n                    setData({...data, health: {...health, ...dataItem}});\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    let dpg = JSON.parse(JSON.stringify(data.dpg))\r\n                    setData({...data, dpg: {...dpg, ...dataItem}});\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    let security = JSON.parse(JSON.stringify(data.security));\r\n                    setData({...data, security: {...security, ...dataItem}});\r\n                }}/>\r\n        case 'waste':\r\n            return <WasteFormComponent\r\n                data={data.waste}\r\n                updateData={(dataItem) => {\r\n                    let waste = JSON.parse(JSON.stringify(data.waste));\r\n                    setData({...data, waste: {...waste, ...dataItem}});\r\n                }}/>\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nif (config.addOnCloseEvent) {\r\n    window.onload = function () {\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            const confirmationMessage = 'It looks like you have been editing something. '\r\n                + 'If you leave before saving, your changes will be lost.';\r\n\r\n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n        });\r\n    };\r\n}\r\nexport default ShipDetails;","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}