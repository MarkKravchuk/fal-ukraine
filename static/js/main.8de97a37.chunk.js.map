{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/datePicker.js","components/blocks/voyageFormComponent.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","config/consts/listOfOptionsConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readWasteXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSWaste.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateWaste.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/WasteFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","pages/404NotFound.js","router.js","index.js"],"names":["console","log","shipCallsData","columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","rows","pageSize","onRowClick","e","push","id","disableSelectionOnClick","countryList","listOfShipTypes","formControl","margin","minWidth","formControlNoMargin","button","topMargin","correctDateTime","date","substr","ShipFormComponent","data","updateData","locationNumber","miniMarginTop","emptyDIV","component","gutterBottom","TextField","label","contentEditable","value","MainPageInfo","ship","imo","otherInfo","onChange","target","callSign","mmsiNumner","FormControl","InputLabel","Select","labelId","flagState","map","item","index","country","split","MenuItem","shipType","ListOfShipTypes","code","name","grossTonnage","netTonnage","port","ListOfPorts","countryCode","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","emptyDiv","portOfCall","portCall","eta","ETA","dates","agent","arrivalDeparture","voyageNumber","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","aria-label","onClick","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","props","onSelect","setState","onCommit","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","dateFormat","React","Component","DropDownEditor","Editors","ports","editable","editor","options","withStyles","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","row","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","ETAPortOfCall","positionPortOfCall","company","iMOnumber","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","waste","WasteDeliveryStatus","LastPortDelivered","LastPortDeliveredDate","icon","readPortXML","xml","children","find","el","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readWasteXML","WasteInformation","WasteDisposalInformation","information","WasteType","WasteToBeDelivered","MaxStorage","WasteAmount","EstimatedWaste","PortOfDelivery","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","readXlsxFile","then","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLSWaste","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","generateWaste","lastPortDelivered","DeliveryPortCode","wasteTypeCode","wasteTypeDescription","wasteType","ToBeDelivered","RetainedOnboard","EstimateGenerated","DisposedOfInPort","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","onError","errors","checkRequiredPort","Ships","checkRequiredShip","forEach","checkRequiredCrew","checkRequiredPassengers","Voyage","checkRequiredVoyage","Dangerous_goods","checkRequiredDangerous","Security","checkRequiredSecurity","Crew_effects","checkRequiredCrewEffects","checkRequiredHealth","Waste","checkRequiredWaste","_","isEmpty","checkRequiredFields","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","marginRight","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","wasteTypesList","wasteTypes","wasteTypeFormatted","WasteTypesEditor","listOfOptions","listOfOptionsConst","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","selectedItem","dataItem","WasteFormComponent","onload","addEventListener","confirmationMessage","event","returnValue","ShipDetails","pathname","setActiveItem","defaultDataConst","openErrorDialog","getElementById","reader","FileReader","result","dataCopy","readAsText","htmlFor","multiple","missingFields","block","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Array","isArray","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"6qOAWAA,QAAQC,IAAI,gBAAiBC,GAC7B,IAAMC,EAAU,CACZ,CAACC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACvC,CACIF,MAAO,OACPC,WAAY,OACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,KAEX,CACIF,MAAO,WACPC,WAAY,YACZC,MAAO,KAEX,CACIF,MAAO,QACPC,WAAY,QACZC,MAAO,KAEX,CACIF,MAAO,MACPC,WAAY,MACZC,MAAO,MAITC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCC,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAIF,SAASW,EAAT,GAA8B,IAAXC,EAAU,EAAVA,QAExBC,EAAUjB,IAEhB,OACI,sBAAKkB,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8BAMZ,uBAAMT,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAO,CAACC,UAAW,QAASJ,QAAS,SAArD,SAEI,qBAAKG,MAAO,CAAC7B,MAAO,QAAS+B,OAAQ,SAArC,SACI,cAAC,IAAD,CACIC,KAAMpC,EACNC,QAASA,EACToC,SAAU,EACVC,WAAa,SAACC,GACVlB,EAAQmB,KAAR,mBAAyBD,EAAEE,MAE/BC,yBAAuB,c,4GC6JpCC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,e,QCOWC,EA1PS,CACpB,CACI,KAAQ,wBACR,KAAQ,MACT,CACC,KAAQ,gBACR,KAAQ,OACT,CACC,KAAQ,sBACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,OACT,CACC,KAAQ,yBACR,KAAQ,OACT,CACC,KAAQ,oCACR,KAAQ,OACT,CACC,KAAQ,wCACR,KAAQ,OACT,CACC,KAAQ,gBACR,KAAQ,MACT,CACC,KAAQ,uCACR,KAAQ,OACT,CACC,KAAQ,eACR,KAAQ,OACT,CACC,KAAQ,eACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,OACT,CACC,KAAQ,kCACR,KAAQ,OACT,CACC,KAAQ,oBACR,KAAQ,OACT,CACC,KAAQ,2BACR,KAAQ,OACT,CACC,KAAQ,sBACR,KAAQ,OACT,CACC,KAAQ,yBACR,KAAQ,OACT,CACC,KAAQ,gBACR,KAAQ,MACT,CACC,KAAQ,oBACR,KAAQ,OACT,CACC,KAAQ,eACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,gBACR,KAAQ,OACT,CACC,KAAQ,UACR,KAAQ,MACT,CACC,KAAQ,oBACR,KAAQ,OACT,CACC,KAAQ,4BACR,KAAQ,OACT,CACC,KAAQ,6BACR,KAAQ,OACT,CACC,KAAQ,oCACR,KAAQ,OACT,CACC,KAAQ,wBACR,KAAQ,MACT,CACC,KAAQ,cACR,KAAQ,OACT,CACC,KAAQ,cACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,wBACR,KAAQ,MACT,CACC,KAAQ,0BACR,KAAQ,OACT,CACC,KAAQ,mBACR,KAAQ,OACT,CACC,KAAQ,wBACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,MACT,CACC,KAAQ,eACR,KAAQ,OACT,CACC,KAAQ,SACR,KAAQ,OACT,CACC,KAAQ,wBACR,KAAQ,OACT,CACC,KAAQ,2BACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,MACT,CACC,KAAQ,oBACR,KAAQ,OACT,CACC,KAAQ,iBACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,iBACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,OACT,CACC,KAAQ,WACR,KAAQ,OACT,CACC,KAAQ,mBACR,KAAQ,OACT,CACC,KAAQ,0BACR,KAAQ,MACT,CACC,KAAQ,cACR,KAAQ,OACT,CACC,KAAQ,uBACR,KAAQ,OACT,CACC,KAAQ,aACR,KAAQ,MACT,CACC,KAAQ,iBACR,KAAQ,OACT,CACC,KAAQ,2BACR,KAAQ,OACT,CACC,KAAQ,WACR,KAAQ,OACT,CACC,KAAQ,wBACR,KAAQ,OACT,CACC,KAAQ,eACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,cACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,OACT,CACC,KAAQ,aACR,KAAQ,MACT,CACC,KAAQ,WACR,KAAQ,MACT,CACC,KAAQ,2BACR,KAAQ,OACT,CACC,KAAQ,+BACR,KAAQ,OACT,CACC,KAAQ,sCACR,KAAQ,OACT,CACC,KAAQ,qBACR,KAAQ,OACT,CACC,KAAQ,uBACR,KAAQ,OACT,CACC,KAAQ,eACR,KAAQ,MACT,CACC,KAAQ,uBACR,KAAQ,MACT,CACC,KAAQ,mBACR,KAAQ,OACT,CACC,KAAQ,kBACR,KAAQ,OACT,CACC,KAAQ,iBACR,KAAQ,MACT,CACC,KAAQ,aACR,KAAQ,MACT,CACC,KAAQ,qCACR,KAAQ,MACT,CACC,KAAQ,iBACR,KAAQ,MACT,CACC,KAAQ,0BACR,KAAQ,MACT,CACC,KAAQ,0CACR,KAAQ,MACT,CACC,KAAQ,8BACR,KAAQ,MACT,CACC,KAAQ,aACR,KAAQ,MACT,CACC,KAAQ,aACR,KAAQ,MACT,CACC,KAAQ,mBACR,KAAQ,OCvOVvC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtB6B,SAAU,KAEdC,oBAAqB,CACjBD,SAAU,KAEdE,OAAQ,CACJH,OAAQvC,EAAMW,QAAQ,IAE1BgC,UAAW,CACPhB,UAAW3B,EAAMW,QAAQ,QAwTjC,SAASiC,EAAgBC,GAErB,OADAA,EAAO,GAAKA,GACAC,OAAO,EAAG,IAGXC,MAzTW,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,eACpCnC,EAAUjB,IAEV6B,EAAY,CAACA,UAAW,QACxBwB,EAAgB,CAACxB,UAAW,QAC5ByB,EAAW,qBAAK1B,MAAO,CAAC7B,MAAO,WAErC,OAAO,qCAEH,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,8BAIA,cAAC9B,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,iCAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,YACNC,iBAAiB,EACjBC,MAAOC,EAAaT,GAAgBU,KACpCnC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,aACNE,MAAOC,EAAaT,GAAgBW,IACpCpC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,iCACNE,MAAOV,EAAKc,UACZC,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACa,UAAW9B,EAAEgC,OAAON,SACpCjC,QAAQ,gBAIhB,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWJ,QAAS,gBAA3C,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,YACNE,MAAOV,EAAKiB,SACZF,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACgB,SAAUjC,EAAEgC,OAAON,SACnCjC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,cACNE,MAAOV,EAAKkB,WACZH,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACiB,WAAYlC,EAAEgC,OAAON,SACrCjC,QAAQ,aAGX2B,KAGL,cAAC5B,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,8BAIA,eAACjC,EAAA,EAAD,CAAMK,MAAOC,EAAWL,WAAS,EAACC,QAAS,gBAA3C,UAEI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,mBAAf,wBACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,mBACRZ,MAAOV,EAAKuB,UACZR,SAAU,SAAC/B,GACPiB,EAAW,CAACsB,UAAWvC,EAAEgC,OAAON,SAJxC,SAOKtB,EAAYoC,KAAI,SAACC,EAAMC,GACpB,IAAIC,EAAUF,EAAKG,MAAM,KAAK,GAC9B,OAAO,cAACC,EAAA,EAAD,CAAsBnB,MAAOiB,EAA7B,SACFF,GADiBC,WAQlC,eAACP,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,kBAAf,wBACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,kBACRZ,MAAOV,EAAK8B,SACZf,SAAU,SAAC/B,GACPiB,EAAW,CAAC6B,SAAU9C,EAAEgC,OAAON,SAJvC,SAOKqB,EAAgBP,KAAI,SAACC,EAAMC,GAAP,OACjB,cAACG,EAAA,EAAD,CAAsBnB,MAAOe,EAAKO,KAAlC,mBACQP,EAAKQ,KADb,YACqBR,EAAKO,KAD1B,MAAeN,WAO1BtB,KAGL,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWJ,QAAS,gBAA3C,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,gBACNE,MAAOV,EAAKkC,aACZnB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACiC,aAAclD,EAAEgC,OAAON,SACvCjC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,cACNE,MAAOV,EAAKmC,WACZpB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACkC,WAAYnD,EAAEgC,OAAON,SACrCjC,QAAQ,aAGX2B,KAGL,cAAC5B,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,qCAIA,eAACjC,EAAA,EAAD,CAAMK,MAAOC,EAAWL,WAAS,EAACC,QAAS,gBAA3C,UACI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,aAAf,kBACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,aACRZ,MAAOV,EAAKoC,KACZrB,SAAU,SAAC/B,GACPiB,EAAW,CAACmC,KAAMpD,EAAEgC,OAAON,SAJnC,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,WAO3B,cAACnB,EAAA,EAAD,CACIC,MAAM,gBACN+B,KAAK,OACL7D,MAAO,CAACc,SAAU,SAClBf,QAAS,WACTiC,MAAOd,EAAgBI,EAAKwC,WAC5BzB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACuC,UAAWxD,EAAEgC,OAAON,SACpC+B,gBAAiB,CACbC,QAAQ,KAIhB,cAACnC,EAAA,EAAD,CACIC,MAAM,SACN/B,QAAS,WACTiC,MAAOV,EAAK2C,kBACZ5B,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC0C,kBAAmB3D,EAAEgC,OAAON,cAMpD,cAAClC,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,qBAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWJ,QAAS,gBAA3C,UACI,cAACgC,EAAA,EAAD,CACI7B,MAAO,CAAC7B,MAAO,qBACf2D,MAAM,eACNoC,WAAS,EACTC,QAAS,EACTnC,MAAOV,EAAK8C,YACZ/B,SAAU,SAAC/B,GACPiB,EAAW,CAAC6C,YAAa9D,EAAEgC,OAAON,SAEtCjC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,qBACN/B,QAAQ,WACRiC,MAAOV,EAAK+C,WACZhC,SAAU,SAAC/B,GACP,IAAI+D,EAAa/D,EAAEgC,OAAON,MAC1BT,EAAW,CAAC8C,qBAKxB,eAAC1E,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOyB,EAAe5B,QAAS,gBAA/C,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,QACNjB,OAAQ,SACRmB,MAAOV,EAAKgD,MACZjC,SAAU,SAAC/B,GACP,IAAIgE,EAAQhE,EAAEgC,OAAON,MACrBT,EAAW,CAAC+C,WAEhBvE,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,MACNjB,OAAQ,SACRmB,MAAOV,EAAKiD,IACZlC,SAAU,SAAC/B,GACP,IAAIiE,EAAMjE,EAAEgC,OAAON,MACnBT,EAAW,CAACgD,SAEhBxE,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,QACNjB,OAAQ,SACRmB,MAAOV,EAAKkD,MACZnC,SAAU,SAAC/B,GACP,IAAIkE,EAAQlE,EAAEgC,OAAON,MACrBT,EAAW,CAACiD,WAEhBzE,QAAQ,gBAIhB,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOyB,EAAe5B,QAAS,gBAA/C,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,gBACNjB,OAAQ,SACRmB,MAAOV,EAAKmD,UACZpC,SAAU,SAAC/B,GACP,IAAImE,EAAYnE,EAAEgC,OAAON,MACzBT,EAAW,CAACkD,eAEhB1E,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,cACNjB,OAAQ,SACRmB,MAAOV,EAAKoD,WACZrC,SAAU,SAAC/B,GACP,IAAIoE,EAAapE,EAAEgC,OAAON,MAC1BT,EAAW,CAACmD,gBAEhB3E,QAAQ,aAGX2B,KAGL,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOyB,EAAe5B,QAAS,gBAA/C,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,iBACNjB,OAAQ,SACRmB,MAAOV,EAAKqD,OACZtC,SAAU,SAAC/B,GACP,IAAIqE,EAASrE,EAAEgC,OAAON,MACtBT,EAAW,CAACoD,YAEhB5E,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,OACNjB,OAAQ,SACRmB,MAAOV,EAAKsD,KACZvC,SAAU,SAAC/B,GACP,IAAIsE,EAAOtE,EAAEgC,OAAON,MACpBT,EAAW,CAACqD,UAEhB7E,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,iBACNjB,OAAQ,SACRmB,MAAOV,EAAKuD,cACZxC,SAAU,SAAC/B,GACP,IAAIuE,EAAgBvE,EAAEgC,OAAON,MAC7BT,EAAW,CAACsD,mBAEhB9E,QAAQ,oB,8DC1UT,GAAC,CACZ+E,gBAAiB,mBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,qBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,iBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,gBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,iBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,kBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,SACjBC,gBAAiB,GAClB,CACCD,gBAAiB,UACjBC,gBAAiB,GAClB,CACCD,gBAAiB,kBACjBC,gBAAiB,GAClB,CACCD,gBAAiB,gBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,gBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,iCACjBC,gBAAiB,IAClB,CACCD,gBAAiB,0BACjBC,gBAAiB,IAClB,CACCD,gBAAiB,wBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,SACjBC,gBAAiB,IAClB,CACCD,gBAAiB,kBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,gBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,qBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,qBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,sBACjBC,gBAAiB,IAClB,CACCD,gBAAiB,uCACjBC,gBAAiB,IAClB,CACCD,gBAAiB,YACjBC,gBAAiB,IAClB,CACCD,gBAAiB,iBACjBC,gBAAiB,KCnDf3G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtB6B,SAAU,KAEdkE,WAAY,CACRlE,SAAU,IACV3C,MAAO,KAEX4C,oBAAqB,CACjBD,SAAU,KAEdmE,qBAAsB,CAClBnE,SAAU,KAGdoE,YAAa,CACTjF,UAAW3B,EAAMW,QAAQ,IAE7B+B,OAAQ,CACJH,OAAQvC,EAAMW,QAAQ,QAmmB9B,SAASiC,EAAgBC,GAErB,OADAA,EAAO,GAAKA,GACAC,OAAO,EAAG,IAGX+D,MAnmBf,YAAuD,IAApC7D,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,eAC3BnC,EAAUjB,IACVgH,EAAW,qBAAK9F,UAAWD,EAAQ0B,oBAAqBf,MAAO,CAACE,OAAQ,SAExEmF,EAAapD,EAAaT,GAAgB8D,SAC5CC,EAAMtD,EAAaT,GAAgBgE,IACvC,GAA8B,IAA1BD,EAAIrC,MAAM,KAAKyB,OAAc,CAC7B,IAAIc,EAAQF,EAAIrC,MAAM,KAElBqC,EADoB,IAApBE,EAAM,GAAGd,OACN,UAAMc,EAAM,GAAZ,YAAkBA,EAAM,GAAxB,YAA8BA,EAAM,GAApC,UAEA,UAAMA,EAAM,GAAZ,YAAkBA,EAAM,GAAxB,YAA8BA,EAAM,GAApC,UAGX,IAAMrB,EAAcnC,EAAaT,GAAgBkE,MAGjD,OADA7H,QAAQC,IAAI,eAAgBuH,GACrB,qCACH,cAACvF,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,8BAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,0BAAf,iCAEA,eAACmC,EAAA,EAAD,CACIC,QAAQ,0BACRZ,MAAOV,EAAKqE,iBACZtD,SAAU,SAAC/B,GACPiB,EAAW,CAACoE,iBAAkBrF,EAAEgC,OAAON,SAJ/C,UAOI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,UAAjB,qBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,YAAjB,6BAIR,cAACH,EAAA,EAAD,CACIC,MAAM,iBACNE,MAAOV,EAAKsE,aACZvD,SAAU,SAAC/B,GAAD,OAAOiB,EAAW,CAACqE,aAActF,EAAEgC,OAAON,SACpDjC,QAAQ,aAGXqF,KAGL,cAACtF,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAAC5B,MAAO,CAACC,UAAW,QAAxE,0BAKA,eAACN,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAxB,UAEI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnBF,OAAQ,SAHZ,UAKI,cAAC6B,EAAA,EAAD,CAAYlC,GAAG,qBAAf,0BAEA,cAACmC,EAAA,EAAD,CACIC,QAAQ,qBACRZ,MAAOqD,EAFX,SAOK1B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,WAQ3B,cAACnB,EAAA,EAAD,CACIC,MAAM,sBACN+B,KAAK,iBACL9D,QAAS,WACTT,UAAWD,EAAQ2F,WACnBnE,OAAQ,SACRmB,MAAOd,EAAgBqE,GACvBxB,gBAAiB,CACbC,QAAQ,GAEZ6B,WAAY,CACRC,KAAM,OAId,cAACjE,EAAA,EAAD,CACIC,MAAM,sBACN+B,KAAK,iBACL9D,QAAS,WACTT,UAAWD,EAAQ2F,WACnBnE,OAAQ,SACRmB,MAAOd,EAAgBI,EAAKyE,eAC5B1D,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACwE,cAAezF,EAAEgC,OAAON,SACxC+B,gBAAiB,CACbC,QAAQ,QAKpB,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAxB,UACI,cAACgC,EAAA,EAAD,CACI7B,MAAO,CAACC,UAAW,QACnB+B,MAAOV,EAAK0E,sBACZ3D,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACyE,sBAAuB1F,EAAEgC,OAAON,SAChDF,MAAM,2BACN/B,QAAQ,WACRc,OAAQ,WAIZ,cAACgB,EAAA,EAAD,CACIC,MAAM,sBACN+B,KAAK,iBACL9B,iBAAiB,EACjBzC,UAAWD,EAAQ2F,WACnBjF,QAAS,WACTc,OAAQ,SACRmB,MAAOd,EAAgBI,EAAK2E,eAC5B5D,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC0E,cAAe3F,EAAEgC,OAAON,SACxC+B,gBAAiB,CACbC,QAAQ,KAKhB,cAACnC,EAAA,EAAD,CACIC,MAAM,sBACN+B,KAAK,iBACLvE,UAAWD,EAAQ2F,WACnBjF,QAAS,WACTc,OAAQ,SACRmB,MAAOd,EAAgBI,EAAK4E,eAC5B7D,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC2E,cAAe5F,EAAEgC,OAAON,SACxC+B,gBAAiB,CACbC,QAAQ,QAMpB,eAACrE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBG,MAAO,CAACC,UAAW,QAA3D,UAEI,eAACwC,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,wBAAf,6BAEA,cAACmC,EAAA,EAAD,CACIC,QAAQ,wBACRZ,MAAOV,EAAK6E,cACZ9D,SAAU,SAAC/B,GACPiB,EAAW,CAAC4E,cAAe7F,EAAEgC,OAAON,SAJ5C,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,WAO3B,eAACP,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,uBAAf,+BACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,uBACRZ,MAAOV,EAAK8E,eACZ/D,SAAU,SAAC/B,GACPiB,EAAW,CAAC6E,eAAgB9F,EAAEgC,OAAON,SAJ7C,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,WAQ3B,eAACP,EAAA,EAAD,CACI1C,QAAQ,WAERT,UAAWD,EAAQ0B,oBAHvB,UAKI,cAAC2B,EAAA,EAAD,CAAYlC,GAAG,uBAAf,+BACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,uBACRZ,MAAOV,EAAK+E,eACZhE,SAAU,SAAC/B,GACPiB,EAAW,CAAC8E,eAAgB/F,EAAEgC,OAAON,SAJ7C,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,cAQ/B,eAACP,EAAA,EAAD,CACI1C,QAAQ,WACRuG,UAAQ,EACRhH,UAAWD,EAAQ0B,oBACnBf,MAAO,CAACC,UAAW,QAJvB,UAMI,cAACyC,EAAA,EAAD,CAAYlC,GAAG,uBAAf,+BACA,eAACmC,EAAA,EAAD,CACIC,QAAQ,uBACRZ,MAAOV,EAAKiF,cACZlE,SAAU,SAAC/B,GACPiB,EAAW,CAACgF,cAAejG,EAAEgC,OAAON,SAJ5C,UAOI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,sBAIR,cAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,sCAMA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBG,MAAO,CAACC,UAAW,QAA3D,UAEI,cAAC4B,EAAA,EAAD,CACIC,MAAM,WACNE,MAAOV,EAAK7B,SAAS+G,SACrBnE,SAAU,SAAC/B,GACP,IAAIkG,EAAWlG,EAAEgC,OAAON,MACpBvC,EAAW6B,EAAK7B,SACpB8B,EAAW,CAAC9B,SAAS,2BAAKA,GAAN,IAAgB+G,gBAExCzG,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,YACNE,MAAOV,EAAK7B,SAASgH,UACrBpE,SAAU,SAAC/B,GACP,IAAImG,EAAYnG,EAAEgC,OAAON,MACrBvC,EAAW6B,EAAK7B,SACpB8B,EAAW,CAAC9B,SAAS,2BAAKA,GAAN,IAAgBgH,iBAExC1G,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,OACN+B,KAAK,iBACLvE,UAAWD,EAAQ2F,WACnBjF,QAAS,WACTiC,MAAOd,EAAgBI,EAAK7B,SAASiH,MACrCrE,SAAU,SAAC/B,GACP,IAAIoG,EAAOpG,EAAEgC,OAAON,MAChBvC,EAAQ,2BAAO6B,EAAK7B,UAAZ,IAAsBiH,SAClCnF,EAAW,CAAC9B,cAEhBsE,gBAAiB,CACbC,QAAQ,GAEZ6B,WAAY,CACRC,KAAM,UAMlB,cAACjE,EAAA,EAAD,CACI7B,MAAO,CAACC,UAAW,QACnBO,GAAG,oBACHsB,MAAM,qCACNoC,WAAS,EACTyC,WAAS,EACTxC,QAAS,EACTnC,MAAOV,EAAKsF,iBACZvE,SAAU,SAAC/B,GAAD,OAAOiB,EAAW,CAACqF,iBAAkBtG,EAAEgC,OAAON,SACxDjC,QAAQ,aAGZ,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,4BAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UAEI,cAACgC,EAAA,EAAD,CACIC,MAAM,cACNE,MAAOV,EAAKuF,aAAaC,WACzBzE,SAAU,SAAC/B,GACP,IAAIwG,EAAaxG,EAAEgC,OAAON,MACtB6E,EAAY,2BAAOvF,EAAKuF,cAAZ,IAA0BC,eAC1CvF,EAAW,CAACsF,kBAEhB9G,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,aACNE,MAAOV,EAAKuF,aAAaE,UACzB1E,SAAU,SAAC/B,GACP,IAAIyG,EAAYzG,EAAEgC,OAAON,MACrB6E,EAAY,2BAAOvF,EAAKuF,cAAZ,IAA0BE,cAC1CxF,EAAW,CAACsF,kBAEhB9G,QAAQ,aAGXqF,KAIL,cAACtF,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,6BAGA,sBAAK5B,MAAO,CAACC,UAAW,QAAxB,UACKqB,EAAK0F,YAAYlE,KAAI,SAACC,EAAMC,GAAP,OAAiB,gCAEnC,eAACP,EAAA,EAAD,CAEI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAHvB,UAOI,cAAC2B,EAAA,EAAD,CAAYlC,GAAE,+BAA0BwC,GAAxC,SACe,IAAVA,EAAc,eAAd,wBAAgDA,EAAhD,OAGL,cAACL,EAAA,EAAD,CACIC,QAAO,+BAA0BI,GACjChB,MAAOV,EAAK0F,YAAYhE,GACxBX,SAAU,SAAC/B,GACP,IAAI2G,EAAa3F,EAAK0F,YACtBC,EAAWjE,GAAS1C,EAAEgC,OAAON,MAC7BT,EAAW,CAACyF,YAAaC,KANjC,SASKC,EAAsBpE,KAAI,SAACqE,EAASnE,GACjC,OAAO,cAACG,EAAA,EAAD,CAAsBnB,MAAOmF,EAAQpC,gBAArC,mBACCoC,EAAQrC,gBADT,YAC4BqC,EAAQpC,gBADpC,MAAe/B,UApBzBA,GA2BT,cAACoE,EAAA,EAAD,CACIpH,MAAO,CACHqH,WAAY,OACZC,aAAc,QAElBC,MAAO,YACPC,aAAW,SACXzH,QAAS,WACT0H,QAAS,WACL,GAAc,IAAVzE,GAA2C,IAA5B1B,EAAK0F,YAAYrC,OAChCpD,EAAW,CAACyF,YAAa,CAAC,UACvB,CACH,IAAIU,EAAaC,KAAKC,MAAMD,KAAKE,UAAUvG,EAAK0F,cAChDU,EAAWI,OAAO9E,EAAO,GACzBzB,EAAW,CAACyF,YAAaU,MAdrC,SAkBI,cAAC,IAAD,QAhDyC1E,MAqDjD,cAAC+E,EAAA,EAAD,CACI/H,MAAO,CAACC,UAAW,QACnBF,QAAQ,WACRwH,MAAM,UACNS,SAA4D,KAAlD1G,EAAK0F,YAAY1F,EAAK0F,YAAYrC,OAAS,GACrDrF,UAAWD,EAAQ2B,OACnByG,QAAS,kBAAMlG,EAAW,CAAC0G,cAAe3G,EAAK0F,YAAYzG,KAAK,OAChE2H,UAAW,cAAC,IAAD,IAPf,4BAcJ,cAACrG,EAAA,EAAD,CACI7B,MAAO,CAACC,UAAW,QACnBO,GAAG,oBACHsB,MAAM,cACNE,MAAOV,EAAK6G,WACZ9F,SAAU,SAAC/B,GAAD,OAAOiB,EAAW,CAAC4G,WAAY7H,EAAEgC,OAAON,SAClDjC,QAAQ,aAIZ,eAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,UACKN,EAAKqE,iBAAmBrE,EAAKqE,iBAAmB,YADrD,cAIA,eAAChG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,eACNE,MAAOV,EAAK8G,eAAeC,YAC3BhG,SAAU,SAAC/B,GACP,IAAI+H,EAAc/H,EAAEgC,OAAON,MACvBoG,EAAc,2BAAO9G,EAAK8G,gBAAZ,IAA4BC,gBAC9C9G,EAAW,CAAC6G,oBAEhBvH,OAAQ,SACRd,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,mBACNE,MAAOV,EAAK8G,eAAeE,eAC3BjG,SAAU,SAAC/B,GACP,IAAIgI,EAAiBhI,EAAEgC,OAAON,MAC1BoG,EAAc,2BAAO9G,EAAK8G,gBAAZ,IAA4BE,mBAC9C/G,EAAW,CAAC6G,oBAEhBvH,OAAQ,SACRd,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,cACNE,MAAOV,EAAK8G,eAAeG,WAC3BlG,SAAU,SAAC/B,GACP,IAAIiI,EAAajI,EAAEgC,OAAON,MACtBoG,EAAc,2BAAO9G,EAAK8G,gBAAZ,IAA4BG,eAC9ChH,EAAW,CAAC6G,oBAEhBvH,OAAQ,SACRd,QAAQ,gBAKhB,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,sDAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,cAACgC,EAAA,EAAD,CACI7B,MAAO,CAAC7B,MAAO,qBACf2D,MAAM,OACNoC,WAAS,EACTC,QAAS,EACTnC,MAAOoC,EACPrE,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,mBACN/B,QAAQ,WACRiC,MAAOV,EAAKoE,MAAM8C,eAAeC,gBACjCpG,SAAU,SAAC/B,GACP,IAAImI,EAAkBnI,EAAEgC,OAAON,MAC3BwG,EAAc,2BAAOlH,EAAKoE,MAAM8C,gBAAlB,IAAkCC,oBAChD/C,EAAK,2BAAOpE,EAAKoE,OAAZ,IAAmB8C,mBAC5BjH,EAAW,CAACmE,gBAKxB,eAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,qBACNjB,OAAQ,SACRmB,MAAOV,EAAKoE,MAAM8C,eAAeE,kBACjCrG,SAAU,SAAC/B,GACP,IAAIoI,EAAoBpI,EAAEgC,OAAON,MAC7BwG,EAAc,2BAAOlH,EAAKoE,MAAM8C,gBAAlB,IAAkCE,sBAChDhD,EAAK,2BAAOpE,EAAKoE,OAAZ,IAAmB8C,mBAC5BjH,EAAW,CAACmE,WAEhB3F,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,UACNjB,OAAQ,SACRmB,MAAOV,EAAKoE,MAAM8C,eAAeG,QACjCtG,SAAU,SAAC/B,GACP,IAAIqI,EAAUrI,EAAEgC,OAAON,MACnBwG,EAAc,2BAAOlH,EAAKoE,MAAM8C,gBAAlB,IAAkCG,YAChDjD,EAAK,2BAAOpE,EAAKoE,OAAZ,IAAmB8C,mBAC5BjH,EAAW,CAACmE,WAEhB3F,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,QACNjB,OAAQ,SACRmB,MAAOV,EAAKoE,MAAM8C,eAAeI,MACjCvG,SAAU,SAAC/B,GACP,IAAIsI,EAAQtI,EAAEgC,OAAON,MACjBwG,EAAc,2BAAOlH,EAAKoE,MAAM8C,gBAAlB,IAAkCI,UAChDlD,EAAK,2BAAOpE,EAAKoE,OAAZ,IAAmB8C,mBAC5BjH,EAAW,CAACmE,WAEhB3F,QAAQ,gBAIhB,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAAhF,wCAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,oBACNjB,OAAQ,SACRmB,MAAOV,EAAKuH,eAAeC,uBAC3BzG,SAAU,SAAC/B,GACP,IAAIwI,EAAyBxI,EAAEgC,OAAON,MAClC6G,EAAc,2BAAOvH,EAAKuH,gBAAZ,IAA4BC,2BAC9CvH,EAAW,CAACsH,oBAEhB9I,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,iBACNjB,OAAQ,SACRmB,MAAOV,EAAKuH,eAAeE,KAC3B1G,SAAU,SAAC/B,GACP,IAAIyI,EAAOzI,EAAEgC,OAAON,MAChB6G,EAAc,2BAAOvH,EAAKuH,gBAAZ,IAA4BE,SAC9CxH,EAAW,CAACsH,oBAEhB9I,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,uBACNjB,OAAQ,SACRmB,MAAOV,EAAKuH,eAAeG,WAC3B3G,SAAU,SAAC/B,GACP,IAAI0I,EAAa1I,EAAEgC,OAAON,MACtB6G,EAAc,2BAAOvH,EAAKuH,gBAAZ,IAA4BG,eAC9CzH,EAAW,CAACsH,oBAEhB9I,QAAQ,gBAKhB,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ4F,qBACnBpE,OAAQ,SAHZ,UAKI,cAAC6B,EAAA,EAAD,CAAYlC,GAAG,kBAAf,qDAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQ4F,qBACnBrC,QAAQ,kBACRZ,MAAOV,EAAK2H,UACZ5G,SAAU,SAAC/B,GAAD,OAAOiB,EAAW,CAAC0H,UAAW3I,EAAEgC,OAAON,SAJrD,UAMI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,sBAIR,cAACH,EAAA,EAAD,CACIC,MAAM,iBACNjB,OAAQ,SACRb,MAAO,CAACqH,WAAY,QACpBtH,QAAQ,WACRiC,MAAOV,EAAK4H,aACZ7G,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC2H,aAAc5I,EAAEgC,OAAON,WAI1CoD,S,uFC7nBT+D,I,OAAY,IAAIC,MA4CLpE,G,kDAzCX,WAAYqE,GAAQ,IAAD,8BACf,cAAMA,IAYVC,SAAW,SAAAnI,GACP,OAAO,EAAKoI,SAAS,CAAChC,MAAOpG,IAAO,kBAAM,EAAKkI,MAAMG,eAdtC,EA8BnBnH,SAAW,SAAAlB,GACPgI,GAAYhI,EACZ,EAAKsI,eA9BL,EAAKC,MAAQ,CAACnC,MAAO,IAAI6B,MAFV,E,4CAKnB,WACI,OAAO,gBAAEO,KAAKN,MAAMO,OAAOC,IAAMC,KAAOX,IAAWY,OAAO,iB,0BAG9D,WACI,OAAOC,IAASC,YAAYN,MAAMO,qBAAqB,SAAS,K,oBA0BpE,WACI,OAAO,cAAC,KAAD,CAAYC,SAAUhB,GAAW9G,SAAUsH,KAAKtH,SAAU+H,WAAW,mB,GAtC3DC,IAAMC,WCCxBC,GAAkBC,WAAlBD,eAWDE,GAAQ,CAAC,SACf9G,EAAYb,KAAI,SAACY,GAAD,OACZ+G,GAAMlK,KAAKmD,EAAKJ,KAAO,MAAQI,EAAKE,YAAc,MAAQF,EAAKH,SAEnE,IAIMvF,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CAAC0L,IAAK,kBAAmBtG,KAAM,kBAAmBmH,UAAU,EAAMC,OAAQ3F,IAC1E,CAAC6E,IAAK,oBAAqBtG,KAAM,oBAAqBmH,UAAU,EAAMC,OAAQ3F,IAC9E,CAAC6E,IAAK,OAAQtG,KAAM,eAAgBmH,UAAU,EAAMC,OARrC,cAACJ,GAAD,CAAgBK,QAASH,MASxC,CAACZ,IAAK,gBAAiBtG,KAAM,uBAAwBmH,UAAU,GAC/D,CAACb,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMC,OAR7C,cAACJ,GAAD,CAAgBK,QADhB,CAAC,QAAS,mBAAoB,mBAAoB,uBAUrE,CACIf,IAAK,oBACLtG,KAAM,4DACNmH,UAAU,EACVvM,MAAO,MAoDA0M,qBAhFA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YA4EJ0M,EA/Cf,YAAyC,IAApBvJ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAyBvB,OACI,gCACI,cAACzB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,gCAGA,cAAC,KAAD,CACI5D,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBApBZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZoB,EAAWD,IAcHgK,kBAAkB,EAClBC,gBAAgB,SAGpB,cAACxD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAtClC,WACI5J,QAAQC,IAAI,cACZ,IACI0N,EAAM,CAACC,GADEnK,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IAiCP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA/BlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA6BP,8BCpFNqK,GAAeC,EAAQ,KAwBd,QAACC,gBAtBT,WACH,OAAOC,OAAOC,KAAKJ,KAqBUK,sBAlB1B,WAEH,IADA,IAAIC,EAAqB,GAChBlB,EAAI,EAAGA,EAAIe,OAAOC,KAAKJ,IAAchH,OAAQoG,IAAK,CACvD,IAAImB,EAAkBJ,OAAOK,OAAOR,IAAcZ,GAAK,MAAQe,OAAOC,KAAKJ,IAAcZ,GACzFkB,EAAmB1L,KAAK2L,GAE5B,OAAOD,GAY6CG,yBATjD,SAAkCxI,GACrC,MAAoB,KAAhBA,GAAqC,MAAfA,EACf+H,GAAa/H,GAAe,MAAQA,EAExC,KCVJ2G,GAAkBC,WAAlBD,eAYD8B,GAAgB,cAAC,GAAD,CAAgBzB,QADtB,CAAC,QAAS,OAAQ,YAI5B0B,GAAgB,cAAC,GAAD,CAAgB1B,QADtB,CAAC,QAAS,aAAc,WAAY,qBAAsB,aAAc,YAIlF2B,GAAsB,cAAC,GAAD,CAAgB3B,QADtB,CAAC,QAAS,aAAc,QAAS,kBAAmB,aAAc,aAAc,QAAS,QAAS,UAAW,kBAAmB,cAAe,YAAa,mBAAoB,mBAAoB,gBAAiB,cAAe,YAAa,eAAgB,cAAe,eAAgB,gBAAiB,MAAO,OAAQ,gBAAiB,aAAc,iBAAkB,cAAe,iBAAkB,aAAc,cAAe,WAAY,SAAU,YAAa,qBAAsB,oBAAqB,cAAe,gBAAiB,kBAAmB,eAAgB,gBAAiB,iBAAkB,oBAAqB,oBAAqB,gBAAiB,YAAa,eAAgB,SAAU,gBAAiB,cAAe,cAAe,qBAAsB,UAAW,cAAe,gBAAiB,aAAc,oBAAqB,wBAAyB,iBAAkB,gBAAiB,cAAe,UAAW,aAAc,uBAAwB,SAAU,wBAAyB,sBAAuB,WAAY,eAAgB,UAAW,WAAY,QAAS,WAAY,iBAAkB,QAAS,UAAW,SAAU,YAAa,kBAAmB,UAAW,OAAQ,eAAgB,YAAa,YAAa,cAAe,oBAAqB,qBAAsB,aAAc,gBAAiB,MAAO,eAAgB,UAAW,iBAAkB,YAAa,oBAAqB,YAAa,eAAgB,aAAc,gBAAiB,YAAa,gBAAiB,mBAAoB,SAAU,QAAS,gBAAiB,WAGpjD4B,GAAmBb,GAAaK,wBACtCQ,GAAiBC,QAAQ,SACzB,IAAMC,GAAqB,cAAC,GAAD,CAAgB9B,QAAS4B,KAG9CxO,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMvM,MAAO,KACjE,CAAC0L,IAAK,aAActG,KAAM,aAAcmH,UAAU,EAAMvM,MAAO,KAC/D,CAAC0L,IAAK,SAAUtG,KAAM,SAAUmH,UAAU,EAAMvM,MAAO,GAAIwM,OAAQ0B,IACnE,CAACxC,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMC,OAAQ4B,GAAqBpO,MAAO,KACpG,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMC,OAAQ+B,GAAoBvO,MAAO,KAC7F,CAAC0L,IAAK,mBAAoBtG,KAAM,mBAAoBmH,UAAU,EAAMC,OAAQ+B,GAAoBvO,MAAO,KACvG,CAAC0L,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMvM,MAAO,KACvE,CAAC0L,IAAK,gBAAiBtG,KAAM,gBAAiBmH,UAAU,EAAMC,OAAQ3F,GAAY7G,MAAO,KACzF,CAAC0L,IAAK,UAAWtG,KAAM,UAAWmH,UAAU,EAAMvM,MAAO,GAAIwM,OAAQ2B,IACrE,CAACzC,IAAK,qBAAsBtG,KAAM,qBAAsBmH,UAAU,EAAMvM,MAAO,KAC/E,CACI0L,IAAK,qCACLtG,KAAM,qCACNmH,UAAU,EACVC,OAAQ+B,GACRvO,MAAO,KAEX,CACI0L,IAAK,mCACLtG,KAAM,mCACNmH,UAAU,EACVC,OAAQ3F,GACR7G,MAAO,KAEX,CAAC0L,IAAK,+BAAgCtG,KAAM,+BAAgCmH,UAAU,EAAMvM,MAAO,MAgDxF0M,qBAjGA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YA6FJ0M,EA7Cf,YAAuC,IAApBvJ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAwBrB,OACI,gCACI,cAACzB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,uBAGA,cAAC,KAAD,CACI5D,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBAnBZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZtC,QAAQC,IAAI,QAASwD,EAAKnB,MAC1BoB,EAAWD,IAYHgK,kBAAkB,IAGtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QApClC,WACI,IACI+D,EAAM,CAACC,GADEnK,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IAgCP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA9BlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA4BP,8BCrGRqL,IACiB,EADjBA,IAEiB,ECDN,IACXjJ,KAAM,CACFiC,iBAAkB,GAClBC,aAAc,GACdgH,cAAe,GACf3G,cAAe,GACfF,cAAe,GACfG,cAAe,GACfK,cAAe,GACflB,WAAY,GACZwH,mBAAoB,GACpB7G,sBAAuB,GACvBY,iBAAkB,GAClBuB,WAAY,GACZnB,YAAa,CAAC,IACdb,cAAe,GACfC,eAAgB,GAChBC,eAAgB,GAChB5G,SAAU,CACN+G,SAAU,GACVC,UAAW,GACXC,KAAM,IAEVG,aAAc,CACVE,UAAW,GACXD,WAAY,IAEhBsB,eAAgB,CACZC,YAAa,GACbC,eAAgB,GAChBC,WAAY,IAEhB7C,MAAO,CACHoH,QAAS,GACTtE,eAAgB,CACZE,kBAAmB,GACnBD,gBAAiB,GACjBE,QAAS,GACTC,MAAO,KAGfC,eAAgB,CACZC,uBAAwB,GACxBC,KAAM,GACNC,WAAY,IAEhBC,UAAW,GACXC,aAAc,IAGlBH,KAAM,CACF5I,KAAM,CACF,CAAC,GAAM,KAIf+B,KAAM,CACFqB,KAAM,GACNwJ,UAAW,GACX3K,UAAW,GACXG,SAAU,GACVC,WAAY,GACZK,UAAW,GACXO,SAAU,GACVI,aAAc,GACdC,WAAY,GACZC,KAAM,GACNI,UAAW,GACXG,kBAAmB,GACnBG,YAAa,GACbC,WAAY,GACZC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPC,UAAW,GACXC,WAAY,GACZC,OAAQ,GACRC,KAAM,GACNC,cAAe,IAEnBmE,WAAY,CACR7I,KAAM,CACF,CAAC,GAAM,KAGf6M,OAAQ,CACJ7M,KAAM,CACF,CAAC,GAAM,KAGf8M,WAAY,CACR9M,KAAM,CACF,CAAC,GAAM,KAGf+M,YAAa,CACT/M,KAAM,CACF,KAGRgN,MAAO,CACHC,cAAe,GACfC,gBAAiB,GACjBlN,KAAM,CACF,CAAC,IAAO,KAGhBmN,OAAQ,CACJC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,gBAAiB,GACjBC,iBAAkB,CAAC,IACnBC,QAAS,CAAC,KAEdC,SAAU,CACNC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,cAAe,GACfC,sBAAuB,GACvBC,YAAa,GACbC,UAAW,GACXhI,WAAY,GACZxC,MAAO,GACPC,IAAK,GACLC,MAAO,GACPrE,KAAM,CAAC,CAACsL,GAAI,KAEhBsD,IAAK,CACD5O,KAAM,CACF,KAGR6O,MAAO,CACHC,oBAAoB,GACpBC,kBAAkB,GAClBC,sBAAsB,GACtBhP,KAAM,CACF,CAACsL,GAAI,M,kNCzIF,IACX,CACI3J,MAAO,OACPE,MAAO,OACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,QACPE,MAAO,QACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,OACPE,MAAO,OACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,aACPE,MAAO,aACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,SACPE,MAAO,SACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,cACPE,MAAO,cACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,eACPE,MAAO,eACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,QACPE,MAAO,QACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,SACPE,MAAO,SACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,kBACPE,MAAO,kBACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,WACPE,MAAO,WACPoN,KAAM,cAAC,KAAD,KACP,CACCtN,MAAO,QACPE,MAAO,QACPoN,KAAM,cAAC,IAAD,M,qBCDCC,GA5DK,SAAC3L,EAAM4L,GAEvB5L,EAAKiC,iBAAmB2J,EAAIpF,qBAAqB,oBAAoB,GAAGlI,MACxE0B,EAAKkC,aAAe0J,EAAIpF,qBAAqB,gBAAgB,GAAGlI,MAChE0B,EAAK2B,WAAaiK,EAAIpF,qBAAqB,YAAY,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAClF0B,EAAKsC,sBAAwBsJ,EAAIpF,qBAAqB,YAAY,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC7F0B,EAAKkJ,cAAgB0C,EAAIpF,qBAAqB,iBAAiB,GAAGlI,MAClE0B,EAAKuC,cAAgBqJ,EAAIpF,qBAAqB,iBAAiB,GAAGlI,MAClE0B,EAAKqC,cAAgBuJ,EAAIpF,qBAAqB,iBAAiB,GAAGlI,MAClE0B,EAAKwC,cAAgBoJ,EAAIpF,qBAAqB,iBAAiB,GAAGlI,MAC9DsN,EAAIpF,qBAAqB,iBAAiB,KAC1CxG,EAAKyC,cAAgBmJ,EAAIpF,qBAAqB,iBAAiB,GAAGqF,SAAS,GAAGvN,OAE9EsN,EAAIpF,qBAAqB,kBAAkB,KAC3CxG,EAAK0C,eAAiBkJ,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,OAEhFsN,EAAIpF,qBAAqB,kBAAkB,KAC3CxG,EAAK2C,eAAiBiJ,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,OAEpF0B,EAAK6C,cAAgB+I,EAAIpF,qBAAqB,aAAa,GAAGlI,MAC9D0B,EAAKjE,SAAS+G,SAAW8I,EAAIpF,qBAAqB,iBAAiB,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC9F0B,EAAKjE,SAASgH,UAAY6I,EAAIpF,qBAAqB,iBAAiB,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC/F0B,EAAKjE,SAASiH,KAAO4I,EAAIpF,qBAAqB,iBAAiB,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC1F0B,EAAKkD,iBAAmB0I,EAAIpF,qBAAqB,iBAAiB,GAAGlI,MACrE0B,EAAKmD,aAAaE,UAAYuI,EAAIpF,qBAAqB,gBAAgB,GAAGqF,SAAS,GAAGvN,MACtF0B,EAAKmD,aAAaC,WAAawI,EAAIpF,qBAAqB,gBAAgB,GAAGqF,SAAS,GAAGvN,MAEvF0B,EAAKsD,YAAc,GACnB,IAAK,IAAI+D,EAAI,EAAGA,EAAI,EAAGA,IACnB,IACI,IAAIzH,EAAOgM,EAAIpF,qBAAqB,eAAea,GAAGwE,SAASC,MAAM,SAAAC,GAAE,MAAe,oBAAZA,EAAGlM,QAA4BvB,MAEzG0B,EAAKsD,YAAYzG,KAAK+C,GACxB,MAAOhD,IAIboD,EAAKyE,WAAamH,EAAIpF,qBAAqB,cAAc,GAAGlI,MACE,YAA1DsN,EAAIpF,qBAAqB,oBAAoB,GAAGlI,OAChD0B,EAAK0E,eAAeC,YAAciH,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,MAC5F0B,EAAK0E,eAAeE,eAAiBgH,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,MAC/F0B,EAAK0E,eAAeG,WAAa+G,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,QAE3F0B,EAAK0E,eAAeC,YAAciH,EAAIpF,qBAAqB,oBAAoB,GAAGqF,SAAS,GAAGvN,MAC9F0B,EAAK0E,eAAeE,eAAiBgH,EAAIpF,qBAAqB,oBAAoB,GAAGqF,SAAS,GAAGvN,MACjG0B,EAAK0E,eAAeG,WAAa+G,EAAIpF,qBAAqB,oBAAoB,GAAGqF,SAAS,GAAGvN,OAEjG0B,EAAKgC,MAAMoH,QAAUwC,EAAIpF,qBAAqB,SAAS,GAAGqF,SAAS,GAAGvN,MACtE0B,EAAKgC,MAAM8C,eAAeC,gBAAkB6G,EAAIpF,qBAAqB,SAAS,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MACzG0B,EAAKgC,MAAM8C,eAAeE,kBAAoB4G,EAAIpF,qBAAqB,SAAS,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC3G0B,EAAKgC,MAAM8C,eAAeG,QAAU2G,EAAIpF,qBAAqB,SAAS,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MACjG0B,EAAKgC,MAAM8C,eAAeI,MAAQ0G,EAAIpF,qBAAqB,SAAS,GAAGqF,SAAS,GAAGA,SAAS,GAAGvN,MAC/F0B,EAAKmF,eAAeC,uBAAyBwG,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,MACvG0B,EAAKmF,eAAeE,KAAOuG,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,MACrF0B,EAAKmF,eAAeG,WAAasG,EAAIpF,qBAAqB,kBAAkB,GAAGqF,SAAS,GAAGvN,MAC3F0B,EAAKuF,UAAYqG,EAAIpF,qBAAqB,aAAa,GAAGlI,MAC1D0B,EAAKwF,aAAeoG,EAAIpF,qBAAqB,gBAAgB,GAAGlI,MAChEnE,QAAQC,IAAI,QAAS4F,ICxBVgM,GA/BK,SAAC3G,EAAMuG,GACvB,IAAIK,EAAWL,EAAIpF,qBAAqB,YAExC,GADAnB,EAAK5I,KAAO,GACRwP,EAAShL,OAAS,EAAG,CACrB9G,QAAQC,IAAI,YAAa6R,EAAS,GAAGJ,UACrC,IAAK,IAAIxE,EAAI,EAAGA,EAAI4E,EAAS,GAAGJ,SAAS5K,OAAQoG,IAAK,CAClD,IAAI6E,EAAgBD,EAAS,GAAGJ,SAASxE,GACzC,GAAI6E,EAAe,CACf,IAAIpE,EAAM,CACNC,GAAIV,EAAI,EACR8E,YAAaD,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MACnD8N,WAAYF,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MAClD+N,OAAQH,EAAcL,SAAS,GAAGvN,MAClCgO,eAAgBJ,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MACtDiO,YAAatE,GAAaS,yBAAyBwD,EAAcL,SAAS,GAAGvN,OAC7EkO,iBAAkBvE,GAAaS,yBAAyBwD,EAAcL,SAAS,GAAGvN,OAClFmO,eAAgBP,EAAcL,SAAS,GAAGvN,MAC1CoO,cAAeR,EAAcL,SAAS,GAAGvN,MACzCqO,QAAST,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MAC/CsO,mBAAoBV,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MAC1DuO,mCAAoC5E,GAAaS,yBAAyBwD,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,OAChHwO,iCAAkCZ,EAAcL,SAAS,GAAGA,SAAS,GAAGvN,MACxEyO,6BAA8Bb,EAAcL,SAAS,GAAGvN,OAE5D+G,EAAK5I,KAAKI,KAAKiL,OC+ChBkF,GAzEK,SAACxO,EAAMoN,GACvB,IAAIqB,EAASrB,EAAIpF,qBAAqB,UAAU,GAE5CyG,IACAA,EAASA,EAAOpB,SAChBrN,EAAKqB,KAAOoN,EAAOnB,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MACtDE,EAAK6K,UAAY4D,EAAOnB,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBvB,MAC5DE,EAAKM,WAAamO,EAAOnB,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,MAC9DE,EAAKK,SAAWoO,EAAOnB,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC1DE,EAAKE,UAAYuO,EAAOnB,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,OAG1DsN,EAAIpF,qBAAqB,aAAa,KACtChI,EAAKW,UAAYyM,EAAIpF,qBAAqB,aAAa,GAAGlI,OAG1DsN,EAAIpF,qBAAqB,gBAAgB,KACzChI,EAAKsB,aAAe8L,EAAIpF,qBAAqB,gBAAgB,GAAGlI,OAGhEsN,EAAIpF,qBAAqB,cAAc,KACvChI,EAAKuB,WAAa6L,EAAIpF,qBAAqB,cAAc,GAAGlI,OAE5DsN,EAAIpF,qBAAqB,yBACzBhI,EAAKwB,KAAO4L,EAAIpF,qBAAqB,iBAAiB,GAClDhI,EAAKwB,OAAMxB,EAAKwB,KAAOxB,EAAKwB,KAAK6L,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,OAC7EsN,EAAIpF,qBAAqB,aAAa,KACtChI,EAAK4B,UAAYwL,EAAIpF,qBAAqB,aAAa,GAAGlI,OAE1DsN,EAAIpF,qBAAqB,UAAU,KACnChI,EAAK+B,kBAAoBqL,EAAIpF,qBAAqB,UAAU,GAAGlI,QAIpEsN,EAAIpF,qBAAqB,mBAAmB,KAC3ChI,EAAKkB,SAAWkM,EAAIpF,qBAAqB,mBAAmB,GAAGlI,OAI/DsN,EAAIpF,qBAAqB,eAAe,KACxChI,EAAKuC,UAAY6K,EAAIpF,qBAAqB,eAAe,GAAGlI,OAE5DsN,EAAIpF,qBAAqB,cAAc,KACvChI,EAAKwC,WAAa4K,EAAIpF,qBAAqB,cAAc,GAAGlI,OAE5DsN,EAAIpF,qBAAqB,QAAQ,KACjChI,EAAK0C,KAAO0K,EAAIpF,qBAAqB,QAAQ,GAAGlI,OAGhDsN,EAAIpF,qBAAqB,iBAAiB,KAC1ChI,EAAK2C,cAAgByK,EAAIpF,qBAAqB,iBAAiB,GAAGlI,OAGlEsN,EAAIpF,qBAAqB,iBAAiB,KAC1ChI,EAAKyC,OAAS2K,EAAIpF,qBAAqB,iBAAiB,GAAGlI,OAG3DsN,EAAIpF,qBAAqB,gBAAgB,KACzChI,EAAKkC,YAAckL,EAAIpF,qBAAqB,gBAAgB,GAAGqF,SAAS,GAAGvN,OAG/E,IAAI8K,EAAUwC,EAAIpF,qBAAqB,WAAW,GAC9C4C,IACA5K,EAAKoC,MAAQwI,EAAQyC,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBgM,SAC3DC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QAA2BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,sBAAZA,EAAGlM,QAA8BvB,MACnGE,EAAKqC,IAAMuI,EAAQyC,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBgM,SACzDC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QAA2BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MACzFE,EAAKsC,MAAQsI,EAAQyC,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBgM,SAC3DC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QAA2BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,UAAZA,EAAGlM,QAAkBvB,MACvFE,EAAKmC,WAAayI,EAAQyC,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,QC1BnE4O,GAzCW,SAAC5H,EAAYsG,GACnC,IAAIuB,EAAgBvB,EAAIpF,qBAAqB,iBAE7C,GADAlB,EAAW7I,KAAO,GACd0Q,EAAclM,OAAS,EACvB,IAAK,IAAIoG,EAAI,EAAGA,EAAI8F,EAAc,GAAGtB,SAAS5K,OAAQoG,IAAK,CACvD,IAAI+F,EAAgBD,EAAc,GAAGtB,SAASxE,GAC9C,GAAI+F,EAAe,CACf,IAAIC,EAAgC,GAChCD,EAAcvB,SAAS,KACvBwB,EAAgCD,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQ8O,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQ8O,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,OAEtL,IAAIgP,EAAyB,GACzBF,EAAcvB,SAAS,KACvByB,EAAyBF,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQ8O,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQ8O,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,OAE/KnE,QAAQC,IAAI,iBAAkBgT,GAC9B,IAAItF,EAAM,CACNC,GAAIV,EAAI,EACR8E,YAAaiB,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MACnD8N,WAAYgB,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAClD+N,OAAQe,EAAcvB,SAAS,GAAGvN,MAClCiO,YAAatE,GAAaS,yBAAyB0E,EAAcvB,SAAS,GAAGvN,OAC7EkO,iBAAkBvE,GAAaS,yBAAyB0E,EAAcvB,SAAS,GAAGvN,OAClFmO,eAAgBW,EAAcvB,SAAS,GAAGvN,MAC1CoO,cAAeU,EAAcvB,SAAS,GAAGvN,MACzCqO,QAASS,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAC/CsO,mBAAoBQ,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAC1DuO,mCAAoCO,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MAC1EwO,iCAAkCM,EAAcvB,SAAS,GAAGA,SAAS,GAAGvN,MACxEyO,6BAA8BK,EAAcvB,SAAS,IAAIvN,MACzDiP,oBAAqBF,EACrBC,uBAAwBA,EACxBE,QAASJ,EAAcvB,SAAS,GAAGvN,OAEvCgH,EAAW7I,KAAKI,KAAKiL,MCJtB2F,GAhCO,SAACnE,EAAQsC,GAC3B,IAAI8B,EAAY9B,EAAIpF,qBAAqB,aAGzC,GAFA8C,EAAO7M,KAAO,GACdtC,QAAQC,IAAI,aAAcsT,GACtBA,EAAUzM,OAAS,EACnB,IAAK,IAAIoG,EAAI,EAAGA,EAAIqG,EAAU,GAAG7B,SAAS5K,OAAQoG,IAAK,CACnD,IAAIsG,EAAWD,EAAU,GAAG7B,SAASxE,GACrC,GAAIsG,EAAU,CAEV,IAAI3N,EAAO,GACP2N,EAAS9B,SAAS,KAClB7L,EAAO2N,EAAS9B,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQqP,EAAS9B,SAAS,GAAGA,SAAS,GAAGvN,MAAQ,MAAQqP,EAAS9B,SAAS,GAAGA,SAAS,GAAGvN,OAI9I,IAAIwJ,EAAM,CACNC,GAAIV,EAAI,EACRuG,gBAAiBD,EAAS9B,SAAS,GAAGvN,MACtCuP,kBAAmBF,EAAS9B,SAAS,GAAGvN,MACxCwP,KAAM9N,EACN+N,cAAeJ,EAAS9B,SAAS,GAAGA,SAAS,GAAGvN,MAChD0P,eAAgBL,EAAS9B,SAAS,GAAGvN,MACrC2P,kBAAmBN,EAAS9B,SAAS,GAAGvN,OAG5CgL,EAAO7M,KAAKI,KAAKiL,MCKlBoG,GA9BW,SAAC3E,EAAYqC,GACnC,IAAIuC,EAAYvC,EAAIpF,qBAAqB,aAEzC,GADA+C,EAAW9M,KAAO,GACd0R,EAAUlN,OAAS,EACnB,IAAK,IAAIoG,EAAI,EAAGA,EAAI8G,EAAU,GAAGtC,SAAS5K,OAAQoG,IAAK,CACnD,IAAI+G,EAAYD,EAAU,GAAGtC,SAASxE,GACtC,GAAI+G,EAAW,CACX,IAAIC,EAAcD,EAAUvC,SAAS,GACjCzQ,EAAU,GACVkT,EAAW,GACXD,IACAjT,EAAUiT,EAAYxC,SAAS,GAAGvN,MAClCgQ,EAAWD,EAAYxC,SAAS,GAAGvN,OAGvC,IAAIwJ,EAAM,CACNC,GAAIV,EAAI,EACRkH,gBAAiBH,EAAUvC,SAAS,GAAGvN,MACvCkQ,kBAAmBJ,EAAUvC,SAAS,GAAGvN,MACzCmQ,SAAUrT,EACVsT,KAAMJ,GAGV/E,EAAW9M,KAAKI,KAAKiL,GACrB3N,QAAQC,IAAI,cAAcmP,MCqD3BoF,GA7EO,SAAC/E,EAAQgC,GACvBA,EAAIpF,qBAAqB,cAAc,KACvCoD,EAAOC,MAAQ+B,EAAIpF,qBAAqB,cAAc,GAAGlI,OAE1DsN,EAAIpF,qBAAqB,kBAAkB,KAC3CoD,EAAOE,MAAQ8B,EAAIpF,qBAAqB,kBAAkB,GAAGlI,OAE5DsN,EAAIpF,qBAAqB,iCAAiC,KAC1DoD,EAAOG,MAAQ6B,EAAIpF,qBAAqB,iCAAiC,GAAGlI,OAE5EsN,EAAIpF,qBAAqB,iBAAiB,KAC1CoD,EAAOI,MAAQ4B,EAAIpF,qBAAqB,iBAAiB,GAAGlI,OAE5DsN,EAAIpF,qBAAqB,oBAAoB,KAC7CoD,EAAOK,MAAQ2B,EAAIpF,qBAAqB,oBAAoB,GAAGlI,OAE/DsN,EAAIpF,qBAAqB,6BAA6B,KACtDoD,EAAOM,MAAQ0B,EAAIpF,qBAAqB,6BAA6B,GAAGlI,OAExEsN,EAAIpF,qBAAqB,0BAA0B,KACnDoD,EAAOO,MAAQyB,EAAIpF,qBAAqB,0BAA0B,GAAGlI,OAEpEsN,EAAIpF,qBAAqB,+BAA+B,KACzDoD,EAAOQ,MAAQwB,EAAIpF,qBAAqB,+BAA+B,GAAGlI,OAE1EsN,EAAIpF,qBAAqB,cAAc,KACvCoD,EAAOS,MAAQuB,EAAIpF,qBAAqB,cAAc,GAAGlI,OAEzDsN,EAAIpF,qBAAqB,kBAAkB,KAC3CoD,EAAOU,UAAYsB,EAAIpF,qBAAqB,kBAAkB,GAAGlI,OAEjEsN,EAAIpF,qBAAqB,sBAAsB,KAC/CoD,EAAOW,QAAUqB,EAAIpF,qBAAqB,sBAAsB,GAAGlI,OAEnEsN,EAAIpF,qBAAqB,+BAA+B,KACxDoD,EAAOY,gBAAkBoB,EAAIpF,qBAAqB,+BAA+B,GAAGlI,OAIxF,IAAIsQ,EAAWhD,EAAIpF,qBAAqB,mBACxCoD,EAAOa,iBAAmB,GAC1B,IAAK,IAAIpD,EAAI,EAAGA,EAAIuH,EAAS3N,OAAQoG,IAAK,CACtC,IAAIwH,EAAUD,EAASvH,GACnBlH,EAAO0O,EAAQhD,SAASC,MAAM,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBvB,MACxDb,EAAOoR,EAAQhD,SAASC,MAAM,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBvB,MACxDwQ,EAAQD,EAAQhD,SAASC,MAAM,SAAAC,GAAE,MAAgB,UAAZA,EAAGlM,QAAkBvB,MAC9DsL,EAAOa,iBAAiB5N,KAAK,CAACsD,OAAM1C,OAAMqR,UAG9C,GAAIlD,EAAIpF,qBAAqB,qBAAsB,CAC/C,IAAIuI,EAAWnD,EAAIpF,qBAAqB,2BACxCoD,EAAOc,QAAU,GACjB,IAAK,IAAIrD,EAAI,EAAGA,EAAI0H,EAAS9N,OAAQoG,IAAK,CACtC,IAAI2H,EAAQD,EAAS1H,GAAGwE,SACxB1R,QAAQC,IAAI,cAAe4U,GAE3B,IAAIC,EAAU,GACdA,EAAQlH,GAAKmH,SAASF,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAAmBvB,OAC7D2Q,EAAQE,cAAgBH,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QAA4BvB,MACxE2Q,EAAQ7L,WAAa4L,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAAmBvB,MAC5D2Q,EAAQ7D,UAAY4D,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAAmBvB,MAC3D2Q,EAAQG,IAAMJ,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MACtD2Q,EAAQI,aAAeL,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MACpE2Q,EAAQK,aAAeN,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,0BAAZA,EAAGlM,QAAkCvB,MAC7E2Q,EAAQjJ,MAAQgJ,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,UAAZA,EAAGlM,QAAkBvB,MACtD2Q,EAAQM,aAAeP,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,wCAAZA,EAAGlM,QACtCgM,SAASC,MAAM,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MACtD2Q,EAAQO,SAAWR,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,wCAAZA,EAAGlM,QAClCgM,SAASC,MAAM,SAAAC,GAAE,MAAgB,yBAAZA,EAAGlM,QAAiCvB,MAC9D2Q,EAAQQ,UAAYT,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBvB,MAC9D2Q,EAAQS,SAAWV,EAAMlD,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC5DsL,EAAOc,QAAQ7N,KAAKoS,MCxCjBU,GA/BY,SAACnG,EAAaoC,GACrC,IAAIgE,EAAqBhE,EAAIpF,qBAAqB,sBAElD,GADAgD,EAAY/M,KAAO,GACfmT,EAAmB3O,OAAS,EAC5B,IAAK,IAAIoG,EAAI,EAAGA,EAAIuI,EAAmB,GAAG/D,SAAS5K,OAAQoG,IAAK,CAC5D,IAAIwI,EAAiBD,EAAmB,GAAG/D,SAASxE,GACpDlN,QAAQC,IAAI,kBAAkByV,GAC9B,IAAIxB,EAAcwB,EAAehE,SAAS,GACtCzQ,EAAU,GACVkT,EAAW,GAKf,GAJID,IACAjT,EAAUiT,EAAYxC,SAAS,GAAGvN,MAClCgQ,EAAWD,EAAYxC,SAAS,GAAGvN,OAEnCuR,EAAgB,CAChB,IAAI/H,EAAM,CACNC,GAAI8H,EAAehE,SAAS,GAAGvN,MAC/B6N,YAAa0D,EAAehE,SAAS,GAAGA,SAAS,GAAGvN,MACpD8N,WAAYyD,EAAehE,SAAS,GAAGA,SAAS,GAAGvN,MACnDgO,eAAgBuD,EAAehE,SAAS,GAAGA,SAAS,GAAGvN,MACvDwR,oBAAqBD,EAAehE,SAAS,GAAGvN,MAChDmQ,SAAUrT,EACVsT,KAAMJ,GAEV9E,EAAY/M,KAAKI,KAAKiL,MC4EvBiI,GApGS,SAACpF,EAAUiB,GA+C/B,GA9CIA,EAAIpF,qBAAqB,aAAa,KACtCmE,EAASC,UAAYgB,EAAIpF,qBAAqB,aAAa,GAAGlI,OAE9DsN,EAAIpF,qBAAqB,iCAAiC,KAC1DmE,EAASE,QAAUe,EAAIpF,qBAAqB,iCAAiC,GAAGlI,OAEhFsN,EAAIpF,qBAAqB,UAAU,KACnCmE,EAASG,OAASc,EAAIpF,qBAAqB,UAAU,GAAGlI,OAExDsN,EAAIpF,qBAAqB,qBAAqB,KAC9CmE,EAASK,SAAWY,EAAIpF,qBAAqB,qBAAqB,GAAGlI,OAErEsN,EAAIpF,qBAAqB,cAAc,KACvCmE,EAASI,WAAaa,EAAIpF,qBAAqB,cAAc,GAAGlI,OAEhEsN,EAAIpF,qBAAqB,4BAA4B,KACrDmE,EAASM,cAAgBW,EAAIpF,qBAAqB,4BAA4B,GAAGlI,OAEjFsN,EAAIpF,qBAAqB,iCAAiC,KAC1DmE,EAASO,sBAAwBU,EAAIpF,qBAAqB,iCAAiC,GAAGlI,OAE9FsN,EAAIpF,qBAAqB,YAAY,KACrCmE,EAASQ,YAAcS,EAAIpF,qBAAqB,YAAY,GAAGlI,OAE/DsN,EAAIpF,qBAAqB,OAAO,KAChCmE,EAASS,UAAYQ,EAAIpF,qBAAqB,OAAO,GAAGqF,SAASC,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAC1EgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBvB,OAElDsN,EAAIpF,qBAAqB,OAAO,KAChCmE,EAASvH,WAAawI,EAAIpF,qBAAqB,OAAO,GAAGqF,SAASC,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAC3EgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,OAEnDsN,EAAIpF,qBAAqB,OAAO,KAChCmE,EAAS/J,MAAQgL,EAAIpF,qBAAqB,OAAO,GAAGqF,SAASC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QACtEgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QAA4BvB,OAExDsN,EAAIpF,qBAAqB,OAAO,KAChCmE,EAAS9J,IAAM+K,EAAIpF,qBAAqB,OAAO,GAAGqF,SAASC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QACpEgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,OAEhDsN,EAAIpF,qBAAqB,OAAO,KAChCmE,EAAS7J,MAAQ8K,EAAIpF,qBAAqB,OAAO,GAAGqF,SAASC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QACtEgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,UAAZA,EAAGlM,QAAkBvB,OAI9CsN,EAAIpF,qBAAqB,0BAA2B,CACpDmE,EAASlO,KAAO,GAEhB,IADA,IAAIA,EAAOmP,EAAIpF,qBAAqB,sBAC3Ba,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAIS,EAAMrL,EAAK4K,GACX2I,EAAWlI,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MAC/D2R,EAAgBnI,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MACpEyJ,EAAKV,EAAI,EACT6I,EAAepI,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC/D6R,EAAkBrI,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,+BAAZA,EAAGlM,QAAuCvB,MACpF8R,EAAetI,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QACzCgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBvB,MAC7CnE,QAAQC,IAAI,kDAAmD0N,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,SAC1F1F,QAAQC,MACRD,QAAQC,MACRD,QAAQC,MACR,IAAI0I,EAAW,GACXC,EAAY,GACZ/C,EAAO,GACX,IACI8C,EAAWgF,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QACjCgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC/F,MAAO1B,IAGT,IACImG,EAAY+E,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAClCgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBvB,MAChG,MAAO1B,IAGT,IACIoD,EAAO8H,EAAI+D,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAC7BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC3F,MAAO1B,IAKT+N,EAASlO,KAAKI,KAAK,CACfkL,KACAiI,WACAC,gBACAC,eACAC,kBACAC,eACAtN,WACAC,YACA/C,YCiBDqQ,GAhHM,SAAC5G,EAAO4B,EAAKO,GAC9B,IAAI0E,EAAc1E,EAAIpF,qBAAqB,eAC3CiD,EAAMhN,KAAO,GACb4O,EAAI5O,KAAO,GACXtC,QAAQC,IAAI,eAAgBkW,GAE5B,IACI7G,EAAMC,cAAgB4G,EAAY,GAAGzE,SAASC,MAAK,SAAAC,GAAE,MAAgB,kBAAZA,EAAGlM,QACvDgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC3F,MAAO1B,GACL6M,EAAMC,cAAgB,GAG1B,IACID,EAAME,gBAAkB2G,EAAY,GAAGzE,SAASC,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QACzDgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC3F,MAAO1B,GACL6M,EAAME,gBAAkB,GAG5B,IAAI4G,EAAa3E,EAAIpF,qBAAqB,aAC1C,GAAI+J,EAAWtP,OAAS,EACpB,IAAK,IAAIoG,EAAI,EAAGA,EAAIkJ,EAAWtP,OAAQoG,IAAK,CACxC,IAAImJ,EAAYD,EAAWlJ,GAC3B,GAAImJ,EACA,IACI,IAAIC,EAAMD,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,MAC9DoS,EAAqBF,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MAC/EqS,EAAmBH,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAAwBvB,MAC5EsS,EAAYJ,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAC7CgR,EAAiBD,EAAU/E,SAASC,MAAK,SAAAC,GAAE,MAAgB,mBAAZA,EAAGlM,QAA2BvB,MAC7EwS,EAAYN,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAC7CkR,EAAcD,EAAUjF,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAAwBvB,MACvE0S,EAASF,EAAUjF,SAASC,MAAK,SAAAC,GAAE,MAAgB,WAAZA,EAAGlM,QAAmBvB,MAC7D2S,EAAiBT,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,kBAAZA,EAAGlM,QAA0BvB,MAC5E4S,EAAiBV,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,kBAAZA,EAAGlM,QAClDsR,EAAyBD,EAAerF,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MACnF8S,EAAaF,EAAerF,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MACxE+S,EAAeb,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAChDyR,EAAuBD,EAAaxF,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MAC/EiT,EAAWF,EAAaxF,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MACpEkT,EAAchB,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAC/C4R,EAAsBD,EAAY3F,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MAC7EoT,EAAmBF,EAAY3F,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAC3EqT,EAAcf,EAAU/E,SAASC,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,MACtEsT,EAAgBhB,EAAU/E,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAAwBvB,MAEzEwJ,EAAM,CACN2I,IAAKA,EACLC,mBAAoBA,EACpBC,iBAAkBA,EAClBE,eAAgBA,EAChBgB,qBAAsBd,EACtBe,QAASd,EACTC,eAAgBA,EAChBC,eAAgBC,EAChBC,WAAYA,EACZC,aAAcC,EACdC,SAAUA,EACVC,YAAaC,EACbC,iBAAkBA,EAClBC,YAAaA,EACbI,cAhBgBvB,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MAiB1EsT,cAAeA,GAGnBnI,EAAMhN,KAAKI,KAAKiL,GAChB,IAAIkK,EAAoBxB,EAAU3E,SAASC,MAAK,SAAAC,GAAE,MAAgB,sBAAZA,EAAGlM,QACzD1F,QAAQC,IAAI,qBAAsB4X,GAGlC,IAYIC,EAAS,CACTxB,IAAKA,EACLyB,iBAAkBrB,EAClBsB,kBAfoBH,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,uBAAZA,EAAGlM,QAA+BvB,MAgB5F8T,kBAfoBJ,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,qBAAZA,EAAGlM,QAA6BvB,MAgB1F+T,mBAfqBL,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MAgBlFgU,UAfYN,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAgB1EiU,cAfgBP,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,iBAAZA,EAAGlM,QAAyBvB,MAgBlFkU,gBAfkBR,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QAA4BvB,MAgBvFmU,YAfcT,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,MAgB9EoU,eAfiBV,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,wBAAZA,EAAGlM,QAAgCvB,MAgB1FqU,IAfMX,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,yBAAZA,EAAGlM,QAAiCvB,MAgBhFsU,uBAfyBZ,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,YAAZA,EAAGlM,QAAoBvB,MAgBtFuU,wBAf0Bb,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,2BAAZA,EAAGlM,QAAmCvB,MAgBtGwU,kBAfoBd,EAAkBnG,SAASC,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QAA4BvB,OAiB7FnE,QAAQC,IAAI,UAAW6X,GACvB5G,EAAI5O,KAAKI,KAAKoV,GAGhB,MAAOrV,GACLzC,QAAQC,IAAIwC,MCpDjBmW,GApDM,SAACzH,EAAOM,GACzB,IAAIoH,EAAmBpH,EAAIpF,qBAAqB,oBAChD8E,EAAM7O,KAAO,GACb,IAEI,IACI6O,EAAME,kBAAoBwH,EAAiB,GAAGnH,SAASC,MAAK,SAAAC,GAAE,MAAgB,sBAAZA,EAAGlM,QAA8BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MACzL,MAAO1B,GACL0O,EAAME,kBAAoB,GAG9BF,EAAMC,oBAAsByH,EAAiB,GAAGnH,SAASC,MAAK,SAAAC,GAAE,MAAgB,wBAAZA,EAAGlM,QAAgCvB,MACvGgN,EAAMG,sBAAwBuH,EAAiB,GAAGnH,SAASC,MAAK,SAAAC,GAAE,MAAgB,0BAAZA,EAAGlM,QAAkCvB,MAE3G,IAAI2U,EAA2BrH,EAAIpF,qBAAqB,4BACxD,GAAIyM,EAAyBhS,OAAS,EAClC,IAAK,IAAIoG,EAAI,EAAGA,EAAI4L,EAAyBhS,OAAQoG,IAAK,CACtD,IAAI6L,EAAcD,EAAyB5L,GAC3C,GAAI6L,EACA,IACI,IAAIzC,EAAMpJ,EAAI,EACV8L,EAAYD,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBgM,SAAS,GAAGvN,MAAQ,MAAQ4U,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,cAAZA,EAAGlM,QAAsBgM,SAAS,GAAGvN,MAOtKwJ,EAAM,CACNC,GAAI0I,EACJ2C,mBARqBF,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,kBAAZA,EAAGlM,QAA0BvB,MASlF6U,UAAWA,EACXE,WATaH,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,eAAZA,EAAGlM,QAAuBvB,MAUvEgV,YATcJ,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,oBAAZA,EAAGlM,QAA4BvB,MAU7EiV,eATiBL,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,sBAAZA,EAAGlM,QAA8BvB,MAUlFkV,eATiBN,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,qBAAZA,EAAGlM,QAA6BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,aAAZA,EAAGlM,QAAqBvB,MAAQ,MAAQ4U,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,qBAAZA,EAAGlM,QAA6BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,gBAAZA,EAAGlM,QAAwBvB,MAAQ,MAAQ4U,EAAYrH,SAASC,MAAK,SAAAC,GAAE,MAAgB,qBAAZA,EAAGlM,QAA6BgM,SAASC,MAAK,SAAAC,GAAE,MAAgB,SAAZA,EAAGlM,QAAiBvB,OAYxXgN,EAAM7O,KAAKI,KAAKiL,GAClB,MAAOlL,GACLzC,QAAQC,IAAIwC,KAM9B,MAAOA,GACLzC,QAAQC,IAAIwC,KCcL6W,OA/Cf,SAAiBC,GACb,IAAI9H,GAAM,IAAI+H,MAAYC,gBAAgBF,GAE1CvZ,QAAQC,IAAI,gBACZ,IAAIwD,EAAOiW,GAgBX,OAfAlI,GAAY/N,EAAKoC,KAAM4L,GACvBoB,GAAYpP,EAAKY,KAAMoN,GACvBI,GAAYpO,EAAKyH,KAAMuG,GACvBsB,GAAkBtP,EAAK0H,WAAYsG,GACnC6B,GAAc7P,EAAK0L,OAAQsC,GAC3BsC,GAAkBtQ,EAAK2L,WAAYqC,GACnC+C,GAAc/Q,EAAKgM,OAAQgC,GAC3B+D,GAAmB/R,EAAK4L,YAAaoC,GACrCyE,GAAazS,EAAK6L,MAAO7L,EAAKyN,IAAKO,GACnCmE,GAAgBnS,EAAK+M,SAAUiB,GAC/BmH,GAAanV,EAAK0N,MAAOM,GAGzBzR,QAAQC,IAAI,uBAAwBwD,GAMxC,SAAwBA,GACpBA,EAAKgM,OAAOc,QAAQtL,KAAI,SAAA2M,GACpB,IAAKhE,EAAqBgE,EAArBhE,GAAIoH,EAAiBpD,EAAjBoD,cACT,GAAsB,SAAlBA,EAA0B,CAC1B,IAAI2E,EAAWlW,EAAKyH,KAAK5I,KAAKqP,MAAK,SAAAzM,GAAI,OAAIA,EAAK0I,KAAOA,KACvD,IAAK+L,EACD,OAAO/H,EAEXA,EAAGX,UAAY0I,EAAS1H,WACxBL,EAAG3I,WAAa0Q,EAAS3H,iBACtB,GAAsB,cAAlBgD,EAA+B,CACtC,IAAI4E,EAAgBnW,EAAK0H,WAAW7I,KAAKqP,MAAK,SAAAzM,GAAI,OAAIA,EAAK0I,KAAOA,KAClE,IAAKgM,EACD,OAAOhI,EAEXA,EAAGX,UAAY2I,EAAc3H,WAC7BL,EAAG3I,WAAa2Q,EAAc5H,YAGlC,OAAOJ,KAxBXiI,CAAepW,GACRA,G,UCuCIqW,GAtEG,SAACC,EAAMC,GACrB,IAAInU,EAAOpC,GAAKoC,KAChBoU,aAAaF,GAAMG,MAAK,SAAC5X,GAGrB,IAAI6X,EAAO7X,EAAK,GACZ8X,EAAO9X,EAAK,GACZ+X,EAAO/X,EAAK,GACZgY,EAAOhY,EAAK,GACZiY,EAAOjY,EAAK,GACZkY,EAAQlY,EAAK,IACbmY,EAAQnY,EAAK,IACboY,EAAQpY,EAAK,IACbqY,EAAQrY,EAAK,IACbsY,EAAQtY,EAAK,IACbuY,EAAQvY,EAAK,IACbwY,EAAQxY,EAAK,IACbyY,EAAQzY,EAAK,IACb0Y,EAAQ1Y,EAAK,IACb2Y,EAAQ3Y,EAAK,IACb4Y,EAAQ5Y,EAAK,IACjBuD,EAAKiC,iBAAmBqS,EAAK,GAC7BtU,EAAKkC,aAAekT,EAAM,GAC1BpV,EAAK2B,WAAa4S,EAAK,GACvBvU,EAAKsC,sBAAwBmS,EAAK,GAClCzU,EAAKkJ,cAAgBqL,EAAK,GAC1BvU,EAAKuC,cAAgBgS,EAAK,GAC1BvU,EAAKqC,cAAgBmS,EAAK,GAC1BxU,EAAKwC,cAAgBgS,EAAK,GAC1BxU,EAAKyC,cAAgB4S,EAAM,GAC3BrV,EAAK0C,eAAiB2S,EAAM,GAC5BrV,EAAK2C,eAAiB0S,EAAM,GAC5BrV,EAAK6C,cAAgB4R,EAAK,GAC1BzU,EAAKjE,SAAS+G,SAAW4R,EAAK,GAC9B1U,EAAKjE,SAASgH,UAAY2R,EAAK,GAC/B1U,EAAKjE,SAASiH,KAAOyR,EAAK,GAC1BzU,EAAKkD,iBAAmByR,EAAM,GAC9B3U,EAAKmD,aAAaC,WAAawR,EAAM,GACrC5U,EAAKmD,aAAaE,UAAYwR,EAAM,GACpC7U,EAAKsD,YAAc,GACnBtD,EAAKsD,YAAYzG,KAAK+X,EAAM,IAC5B5U,EAAKsD,YAAYzG,KAAKgY,EAAM,IAC5B7U,EAAKsD,YAAYzG,KAAKiY,EAAM,IAC5B9U,EAAKsD,YAAYgS,QAAO,SAAAvJ,GAAE,OAAIA,GAAoB,IAAdA,EAAG9K,UACvC,IAAK,IAAIoG,EAAI,EAAGA,EAAIrH,EAAKsD,YAAYrC,OAAQoG,IAAK,CAC9C,IAAI5D,EAAUzD,EAAKsD,YAAY+D,GAC/B,IACIrH,EAAKsD,YAAY+D,GAAK5D,EAAQjE,MAAM,KAAK,GAAGA,MAAM,KAAK,GACzD,MAAO5C,KAmBb,OAhBAoD,EAAKyE,WAAaqQ,EAAM,GACxB9U,EAAK0E,eAAeC,YAAcoQ,EAAM,GACxC/U,EAAK0E,eAAeE,eAAiBmQ,EAAM,GAC3C/U,EAAK0E,eAAeG,WAAakQ,EAAM,GACvC/U,EAAKgC,MAAMoH,QAAU4L,EAAM,GAC3BhV,EAAKgC,MAAM8C,eAAeC,gBAAkBiQ,EAAM,GAClDhV,EAAKgC,MAAM8C,eAAeG,QAAUgQ,EAAM,GAC1CjV,EAAKgC,MAAM8C,eAAeI,MAAQ8P,EAAM,GACxChV,EAAKmF,eAAeC,uBAAyB8P,EAAM,GACnDlV,EAAKmF,eAAeE,KAAO6P,EAAM,GACjClV,EAAKmF,eAAeG,WAAa4P,EAAM,GACvClV,EAAKuF,UAAY4P,EAAM,GACvBnV,EAAKwF,aAAe4P,EAAM,GAE1Bjb,QAAQC,IAAI,yBAA0B4F,GACtCmU,EAAO,CAACnU,SACDA,KACRqU,KAAKla,QAAQC,IAAI,YC1BTmb,OAxCf,SAAqBrB,EAAMC,GACvBvW,GAAKyH,KAAK5I,KAAO,GACjB,IAAI4I,EAAOzH,GAAKyH,KAmChB,OAlCA+O,aAAaF,GAAMG,MAAK,SAAC5X,GACrB,IAAK,IAAI4K,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAE7B,GAAK5K,EAAK4K,GAAG,GAAb,CACA,IAAImO,EAAc,GACA,MAAd/Y,EAAK4K,GAAG,KACRmO,EAAcpP,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAE5C,IAAI0E,EAAa,GACE,MAAftO,EAAK4K,GAAG,MACR0D,EAAa3E,KAAO3J,EAAK4K,GAAG,KAAKhB,OAAO,eAE5C,IAAIyB,EAAM,CACNC,GAAItL,EAAK4K,GAAG,GACZ8E,YAAa1P,EAAK4K,GAAG,GACrB+E,WAAY3P,EAAK4K,GAAG,GACpBiF,eAAgB7P,EAAK4K,GAAG,GACxBkF,YAAatE,GAAaS,yBAAyBjM,EAAK4K,GAAG,IAC3DmF,iBAAkBvE,GAAaS,yBAAyBjM,EAAK4K,GAAG,IAChEoF,eAAgBhQ,EAAK4K,GAAG,GACxBqF,cAAe8I,EACf7I,QAASlQ,EAAK4K,GAAG,GACjBuF,mBAAoBnQ,EAAK4K,GAAG,IAC5BwF,mCAAoC5E,GAAaS,yBAAyBjM,EAAK4K,GAAG,KAClFyF,iCAAkC/B,EAClCgC,6BAA8BtQ,EAAK4K,GAAG,IACtCgF,OAAQ5P,EAAK4K,GAAG,KAEpBhC,EAAK5I,KAAKI,KAAKiL,GAEnBqM,EAAO,CAAC9O,YAILA,GCuBIoQ,OA3Df,SAA2BvB,EAAMC,GAC7BvW,GAAK0H,WAAW7I,KAAO,GACvB,IAAI6I,EAAa1H,GAAK0H,WACtB8O,aAAaF,GAAMG,MAAK,SAAC5X,GACrBtC,QAAQC,IAAI,cAAeqC,GAC3B,IAF8B,eAErB4K,GACL,IAAImO,EAAc,GACA,MAAd/Y,EAAK4K,GAAG,KACRmO,EAAcpP,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAE5C,IAAI0E,EAAa,GACE,MAAftO,EAAK4K,GAAG,MACR0D,EAAa3E,KAAO3J,EAAK4K,GAAG,KAAKhB,OAAO,eAE5C,IAAIwG,EAAqC,GACtB,MAAfpQ,EAAK4K,GAAG,MACRwF,EAAqCzG,KAAO3J,EAAK4K,GAAG,KAAKhB,OAAO,eAEpE,IAAIkH,EAAsBmI,EAAiB5J,MAAK,SAAU+C,GACtD,OAAOA,EAAQjP,OAASnD,EAAK4K,GAAG,OAGhCgG,EAAgCE,EAAoB3N,KAAO,MAAQ2N,EAAoBrN,YAAc,MAAQqN,EAAoB1N,KAEjIyN,EAAyBoI,EAAiB5J,MAAK,SAAU+C,GACzD,OAAOA,EAAQjP,OAASnD,EAAK4K,GAAG,OAGhCsO,EAAmCrI,EAAuB1N,KAAO,MAAQ0N,EAAuBpN,YAAc,MAAQoN,EAAuBzN,KAG7IiI,EAAM,CACNC,GAAItL,EAAK4K,GAAG,GACZ8E,YAAa1P,EAAK4K,GAAG,GACrB+E,WAAY3P,EAAK4K,GAAG,GACpBkF,YAAatE,GAAaS,yBAAyBjM,EAAK4K,GAAG,IAC3DmF,iBAAkBvE,GAAaS,yBAAyBjM,EAAK4K,GAAG,IAChEoF,eAAgBhQ,EAAK4K,GAAG,GACxBqF,cAAe8I,EACf7I,QAASlQ,EAAK4K,GAAG,GACjBuF,mBAAoBnQ,EAAK4K,GAAG,GAC5BwF,mCAAoCA,EACpCC,iCAAkC/B,EAClCwC,oBAAqBF,EACrBC,uBAAwBqI,EACxBnI,QAAS/Q,EAAK4K,GAAG,IACjB0F,6BAA8BtQ,EAAK4K,GAAG,IACtCgF,OAAQ5P,EAAK4K,GAAG,KAEpB/B,EAAW7I,KAAKI,KAAKiL,IA5ChBT,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAM,EAA9BA,GA+CT8M,EAAO,CAAC7O,mBCvBDsQ,GAhCK,SAAC1B,EAAMC,GACvB,IAAI3V,EAAOZ,GAAKY,KAChB4V,aAAaF,GAAMG,MAAK,SAAC5X,GACrB+B,EAAKqB,KAAOpD,EAAK,GAAG,GACpB+B,EAAK6K,UAAY5M,EAAK,GAAG,GACzB+B,EAAKE,UAAYjC,EAAK,GAAG,GACzB+B,EAAKK,SAAWpC,EAAK,GAAG,GACxB+B,EAAKM,WAAarC,EAAK,GAAG,GAC1B+B,EAAKW,UAAY1C,EAAK,GAAG,GACzB+B,EAAKsB,aAAerD,EAAK,GAAG,GAC5B+B,EAAKuB,WAAatD,EAAK,GAAG,GAC1B+B,EAAKwB,KAAOvD,EAAK,IAAI,GACrB+B,EAAK4B,UAAY3D,EAAK,IAAI,GAC1B+B,EAAK+B,kBAAoB9D,EAAK,IAAI,GAClC+B,EAAKkC,YAAcjE,EAAK,IAAI,GAC5B+B,EAAKmC,WAAalE,EAAK,IAAI,GAC3B+B,EAAKoC,MAAQnE,EAAK,IAAI,GACtB+B,EAAKqC,IAAMpE,EAAK,IAAI,GACpB+B,EAAKsC,MAAQrE,EAAK,IAAI,GACtB+B,EAAKuC,UAAYtE,EAAK,IAAI,GAC1B+B,EAAKwC,WAAavE,EAAK,IAAI,GAC3B+B,EAAKyC,OAASxE,EAAK,IAAI,GACvB+B,EAAK0C,KAAOzE,EAAK,IAAI,GACrB+B,EAAK2C,cAAgB1E,EAAK,IAAI,GAC9B,IAAIiD,EAAWjD,EAAK,GAAG,GACnBiD,IAAUlB,EAAKkB,SAAWA,EAASF,MAAM,KAAK,GAAGA,MAAM,KAAK,IAEhErF,QAAQC,IAAI,yBAA0BoE,GACtC2V,EAAO,CAAC3V,aCmBDqX,OA7Cf,SAAuB3B,EAAMC,GACzBvW,GAAK0L,OAAO7M,KAAO,GACnB,IAAI6M,EAAS1L,GAAK0L,OAClB8K,aAAaF,GAAMG,MAAK,SAAC5X,GACrBtC,QAAQC,IAAI,UAAWqC,GACvB,IAF8B,eAErB4K,GACL,IAAK5K,EAAK4K,GAAG,GAAI,iBAEjB,IAAIuG,EAAkB,GACJ,MAAdnR,EAAK4K,GAAG,KACRuG,EAAkBxH,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAGhD,IAAIwH,EAAoB,GACN,MAAdpR,EAAK4K,GAAG,KACRwG,EAAoBzH,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAGlD,IAAIyH,EAAO4H,EAAiB5J,MAAK,SAAU+C,GACvC,OAAOA,EAAQjP,OAASnD,EAAK4K,GAAG,MAGhCyO,EAAiB,GACjBhI,IACAgI,EAAiBhI,EAAKlO,KAAO,MAAQkO,EAAK5N,YAAc,MAAQ4N,EAAKjO,MAIzE,IAAIiI,EAAM,CACNC,GAAItL,EAAK4K,GAAG,GACZuG,gBAAiBA,EACjBC,kBAAmBA,EACnBC,KAAMgI,EACN/H,cAAetR,EAAK4K,GAAG,GACvB2G,eAAgBvR,EAAK4K,GAAG,GACxB4G,kBAAmBxR,EAAK4K,GAAG,IAE/BiC,EAAO7M,KAAKI,KAAKiL,IAhCZT,EAAI,EAAGA,EAAI,GAAIA,IAAK,EAApBA,GAmCT8M,EAAO,CAAC7K,eCyBDyM,GAlEO,SAAC7B,EAAMC,GACzB,IAAIvK,EAAShM,GAAKgM,OAClBwK,aAAaF,GAAMG,MAAK,SAAC5X,GACrBtC,QAAQC,IAAI,OAAQqC,GACpBmN,EAAOC,MAAQpN,EAAK,IAAI,GACxBmN,EAAOU,UAAY7N,EAAK,IAAI,GAC5BmN,EAAOE,MAAQrN,EAAK,IAAI,GACxBmN,EAAOG,MAAQtN,EAAK,IAAI,GACxBmN,EAAOW,QAAU9N,EAAK,IAAI,GAC1BmN,EAAOI,MAAQvN,EAAK,IAAI,GACxBmN,EAAOK,MAAQxN,EAAK,IAAI,GACxBmN,EAAOM,MAAQzN,EAAK,IAAI,GACxBmN,EAAOO,MAAQ1N,EAAK,IAAI,GACxBmN,EAAOQ,MAAQ3N,EAAK,IAAI,GACxBmN,EAAOY,gBAAkB/N,EAAK,IAAI,GAClCmN,EAAOS,MAAQ5N,EAAK,IAAI,GACxBmN,EAAOa,iBAAmB,GAC1B,IAAK,IAAIpD,EAAI,GAAIA,GAAK,GAAIA,IACtB,GAAK5K,EAAK4K,GAAG,GAAb,CACA,IAAIlH,EAAO1D,EAAK4K,GAAG,GACfyH,EAAQrS,EAAK4K,GAAG,GAEhB5J,EAAO,GACO,MAAdhB,EAAK4K,GAAG,KACR5J,EAAO2I,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAErCuD,EAAOa,iBAAiB5N,KAAK,CAACsD,OAAM2O,QAAOrR,SAE/CmM,EAAOc,QAAU,GACjB,IAAK,IAAIrD,EAAI,GAAIA,EAAI5K,EAAKwE,OAAQoG,IAC9B,GAAK5K,EAAK4K,GAAG,GAAb,CACA,IAAIU,EAAKtL,EAAK4K,GAAG,GACb8H,EAAgB1S,EAAK4K,GAAG,GACxBjE,EAAa3G,EAAK4K,GAAG,GACrB+D,EAAY3O,EAAK4K,GAAG,GACpB+H,EAAM3S,EAAK4K,GAAG,GACdgI,EAAe,GACD,MAAd5S,EAAK4K,GAAG,KACRgI,EAAejJ,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAE7C,IAAIiJ,EAAe7S,EAAK4K,GAAG,GACvBrB,EAAQvJ,EAAK4K,GAAG,IAChBkI,EAAe9S,EAAK4K,GAAG,IACvBmI,EAAW/S,EAAK4K,GAAG,IACnBoI,EAAYhT,EAAK4K,GAAG,IACpBqI,EAAWjT,EAAK4K,GAAG,IACvBuC,EAAOc,QAAQ7N,KAAK,CAChBkL,KACAoH,gBACA/L,aACAgI,YACAgE,MACAC,eACAC,eACAtJ,QACAuJ,eACAC,WACAC,YACAC,aAIRyE,EAAO,CAACvK,eCzCDoM,OArBf,SAA2B9B,EAAMC,GAC7BvW,GAAK2L,WAAW9M,KAAO,GACvB,IAAI8M,EAAa3L,GAAK2L,WACtB6K,aAAaF,GAAMG,MAAK,SAAC5X,GACrBtC,QAAQC,IAAI,cAAeqC,GAC3B,IAAK,IAAI4K,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAIS,EAAM,CACNC,GAAIV,EAAE,EACNkH,gBAAiB9R,EAAK4K,GAAG,GACzBoH,SAAUhS,EAAK4K,GAAG,GAClBqH,KAAMjS,EAAK4K,GAAG,GACdmH,kBAAmB/R,EAAK4K,GAAG,IAE/BkC,EAAW9M,KAAKI,KAAKiL,GAGzBqM,EAAO,CAAC5K,mBCwCD0M,GAxDS,SAAC/B,EAAMC,GAC3BC,aAAaF,GAAMG,MAAK,SAAC5X,GACrB,IAAIkO,EAAW/M,GAAK+M,SAEpBA,EAASC,UAAYnO,EAAK,GAAG,GAC7BkO,EAASE,QAAUpO,EAAK,GAAG,GAC3BkO,EAASG,OAASrO,EAAK,GAAG,GAC1BkO,EAASK,SAAWvO,EAAK,GAAG,GACV,MAAdA,EAAK,GAAG,KACRkO,EAASI,WAAa3E,KAAO3J,EAAK,GAAG,IAAI4J,OAAO,eAEpDsE,EAASM,cAAgBxO,EAAK,IAAI,GAClCkO,EAASO,sBAAwBzO,EAAK,IAAI,GAC1CkO,EAASS,UAAY3O,EAAK,IAAI,GAC9BkO,EAASvH,WAAa3G,EAAK,IAAI,GAC/BkO,EAAS/J,MAAQnE,EAAK,IAAI,GAC1BkO,EAAS9J,IAAMpE,EAAK,IAAI,GACxBkO,EAAS7J,MAAQrE,EAAK,IAAI,GAC1BkO,EAASQ,YAAc1O,EAAK,GAAG,GAE/BkO,EAASlO,KAAO,GAChB,IAAK,IAAI4K,EAAI,GAAIA,GAAK,GAAIA,IACtB,GAAK5K,EAAK4K,GAAG,GAAb,CACA,IAAIU,EAAKtL,EAAK4K,GAAG,GACb2I,EAAW,GACG,MAAdvT,EAAK4K,GAAG,KACR2I,EAAW5J,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAEzC,IAAI4J,EAAgB,GACF,MAAdxT,EAAK4K,GAAG,KACR4I,EAAgB7J,KAAO3J,EAAK4K,GAAG,IAAIhB,OAAO,eAE9C,IAAI+J,EAAe3T,EAAK4K,GAAG,GACvBvE,EAAWrG,EAAK4K,GAAG,GACnBtE,EAAYtG,EAAK4K,GAAG,GACpB6I,EAAezT,EAAK4K,GAAG,GACvB8I,EAAkB1T,EAAK4K,GAAG,GAC1BrH,EAAOvD,EAAK4K,GAAG,GACnBsD,EAASlO,KAAKI,KAAK,CACfkL,KACAiI,WACAC,gBACAG,eACAtN,WACAC,YACAmN,eACAC,kBACAnQ,SAIRmU,EAAO,CAACxJ,iBCODuL,OA3Df,SAAsBhC,EAAMC,GACxBvW,GAAK6L,MAAMhN,KAAO,GAClBmB,GAAK6L,MAAMC,cAAgB,GAC3B9L,GAAK6L,MAAME,gBAAkB,GAC7B/L,GAAKyN,IAAI5O,KAAO,GAChB,IAAIgN,EAAQ7L,GAAK6L,MACb4B,EAAMzN,GAAKyN,IACf+I,aAAaF,GAAMG,MAAK,SAAC5X,GACrBtC,QAAQC,IAAI,SAAUqC,GACtBtC,QAAQC,IAAI,iBAAkBqC,EAAK,IAAI,IACvCgN,EAAMC,cAAgBjN,EAAK,IAAI,GAC/BgN,EAAME,gBAAkBlN,EAAK,IAAI,GACjC,IAAK,IAAI4K,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,IAAIS,EAAM,CACN2I,IAAKhU,EAAK4K,GAAG,GACbqJ,mBAAoBjU,EAAK4K,GAAG,GAC5BsJ,iBAAkBlU,EAAK4K,GAAG,GAC1BwJ,eAAgBpU,EAAK4K,GAAG,GACxBwK,qBAAsBpV,EAAK4K,GAAG,GAC9ByK,QAASrV,EAAK4K,GAAG,GACjB4J,eAAgBxU,EAAK4K,GAAG,GACxB6J,eAAgBzU,EAAK4K,GAAG,GACxB+J,WAAY3U,EAAK4K,GAAG,IACpBgK,aAAc5U,EAAK4K,GAAG,IACtBkK,SAAU9U,EAAK4K,GAAG,IAClBmK,YAAa/U,EAAK4K,GAAG,IACrBqK,iBAAkBjV,EAAK4K,GAAG,IAC1BsK,YAAalV,EAAK4K,GAAG,IACrB0K,cAAetV,EAAK4K,GAAG,IACvBuK,cAAenV,EAAK4K,GAAG,KAE3BoC,EAAMhN,KAAKI,KAAKiL,GAEpB,IAAK,IAAIT,EAAI,GAAIA,EAAI,GAAIA,IAAK,CAC1B,IAAIS,EAAM,CACN2I,IAAKhU,EAAK4K,GAAG,GACb8K,kBAAmB1V,EAAK4K,GAAG,GAC3B+K,kBAAmB3V,EAAK4K,GAAG,GAC3BgL,mBAAoB5V,EAAK4K,GAAG,GAC5BiL,UAAW7V,EAAK4K,GAAG,GACnBkL,cAAe9V,EAAK4K,GAAG,GACvBmL,gBAAiB/V,EAAK4K,GAAG,GACzBoL,YAAahW,EAAK4K,GAAG,GACrBqL,eAAgBjW,EAAK4K,GAAG,GACxBsL,IAAKlW,EAAK4K,GAAG,IACbuL,uBAAwBnW,EAAK4K,GAAG,IAChCwL,wBAAyBpW,EAAK4K,GAAG,IACjCyL,kBAAmBrW,EAAK4K,GAAG,KAE/BlN,QAAQC,IAAI0N,GACZuD,EAAI5O,KAAKI,KAAKiL,GAIlBqM,EAAO,CAAC1K,cCND0M,OA9Cf,SAAsBjC,EAAMC,GACxBvW,GAAK0N,MAAM7O,KAAO,GAClBmB,GAAK0N,MAAMC,oBAAsB,GACjC3N,GAAK0N,MAAME,kBAAoB,GAC/B5N,GAAK0N,MAAMG,sBAAwB,GACnC,IAAIH,EAAQ1N,GAAK0N,MACjB8I,aAAaF,GAAMG,MAAK,SAAC5X,GAErBmB,GAAK0N,MAAMC,oBAAsB9O,EAAK,GAAG,GACzCmB,GAAK0N,MAAME,kBAAoB/O,EAAK,GAAG,GACrB,MAAdA,EAAK,GAAG,KACRmB,GAAK0N,MAAMG,sBAAwBrF,KAAO3J,EAAK,GAAG,IAAI4J,OAAO,eAIjE,IAT8B,eASrBgB,GACL,IAAIyG,EAAO,GACX,GAAIrR,EAAK4K,GAAI,CAMT,IAAIyO,EAAiB,IALrBhI,EAAO4H,EAAiB5J,MAAK,SAAU+C,GACnC,OAAOA,EAAQjP,OAASnD,EAAK4K,GAAG,SAMhCyO,EAAiBhI,EAAKlO,KAAO,MAAQkO,EAAK5N,YAAc,MAAQ4N,EAAKjO,MAGzE,IAAIiI,EAAM,CACNC,GAAIV,EAAI,EACRmM,eAAgBsC,EAChB3C,UAAW1W,EAAK4K,GAAG,GACnB+L,mBAAoB3W,EAAK4K,GAAG,GAC5BgM,WAAY5W,EAAK4K,GAAG,GACpBiM,YAAa7W,EAAK4K,GAAG,GACrBkM,eAAgB9W,EAAK4K,GAAG,IAE5BiE,EAAM7O,KAAKI,KAAKiL,KAtBfT,EAAI,GAAIA,EAAI,GAAIA,IAAM,EAAtBA,GA0BT8M,EAAO,CAAC7I,cCaD8K,OA/Cf,SAAiBC,EAAOC,EAAoBnC,GAExC,IAAKkC,GAA0B,IAAjBA,EAAMpV,OAAc,MAAO,GAEzC,IAJgD,eAIvCoG,GAGL+M,aAAaiC,EAAMhP,IAAIgN,MAAK,SAAC5X,GACzB,IACI,IAAIoD,EAAOpD,EAAK,GAAG,GAAG8Z,cAEtBpc,QAAQC,IAAI,QAASqC,GAER,qBAAToD,EACAoU,GAAYoC,EAAMhP,GAAI8M,GACN,cAATtU,EACP0V,GAAYc,EAAMhP,GAAI8M,GACN,qBAATtU,EACP+V,GAAYS,EAAMhP,GAAI8M,GACN,mBAATtU,EACP4V,GAAkBY,EAAMhP,GAAI8M,GACZ,uBAATtU,EACPgW,GAAcQ,EAAMhP,GAAI8M,GACR,mCAATtU,EACPkW,GAAcM,EAAMhP,GAAI8M,GACR,gBAATtU,EACPmW,GAAkBK,EAAMhP,GAAI8M,GACZ,yBAATtU,EACPoW,GAAgBI,EAAMhP,GAAI8M,GACV,sBAATtU,EACPqW,GAAaG,EAAMhP,GAAI8M,GACP,sBAATtU,GACPsW,GAAaE,EAAMhP,GAAI8M,GAE7B,MAAOvX,GACL0Z,EAAmB,CACfE,MAAM,EAAMC,MAAO,CACfC,MAAO,iCACPC,KAAM,2GAlCjBtP,EAAI,EAAGA,EAAIgP,EAAMpV,OAAQoG,IAAM,EAA/BA,I,0CCNNR,GAAkBC,WAAlBD,eAYD8B,GAAgB,cAAC,GAAD,CAAgBzB,QADtB,CAAC,QAAS,OAAQ,YAI5B0B,GAAgB,cAAC,GAAD,CAAgB1B,QADtB,CAAC,QAAS,aAAc,WAAY,qBAAsB,aAAc,YAGlF4B,GAAmBb,GAAaK,wBACtCQ,GAAiBC,QAAQ,SACzB,IAAMC,GAAqB,cAAC,GAAD,CAAgB9B,QAAS4B,KAG9C8N,GAAgB,cAAC,GAAD,CAAgB1P,QADxB,CAAC,QAAS,MAAO,QAGzBH,GAAQ,CAAC,SACf9G,EAAYb,KAAI,SAACY,GAAD,OACZ+G,GAAMlK,KAAKmD,EAAKJ,KAAO,MAAQI,EAAKE,YAAc,MAAQF,EAAKH,SAEnE,IAAMgX,GAAa,cAAC,GAAD,CAAgB3P,QAASH,KAGtCzM,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMvM,MAAO,KACjE,CAAC0L,IAAK,aAActG,KAAM,aAAcmH,UAAU,EAAMvM,MAAO,KAC/D,CAAC0L,IAAK,SAAUtG,KAAM,SAAUmH,UAAU,EAAMvM,MAAO,GAAIwM,OAAQ0B,IACnE,CAACxC,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMC,OAAQ+B,GAAoBvO,MAAO,KAC7F,CAAC0L,IAAK,mBAAoBtG,KAAM,mBAAoBmH,UAAU,EAAMC,OAAQ+B,GAAoBvO,MAAO,KACvG,CAAC0L,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMvM,MAAO,KACvE,CAAC0L,IAAK,gBAAiBtG,KAAM,gBAAiBmH,UAAU,EAAMC,OAAQ3F,GAAY7G,MAAO,KACzF,CAAC0L,IAAK,UAAWtG,KAAM,UAAWmH,UAAU,EAAMvM,MAAO,GAAIwM,OAAQ2B,IACrE,CAACzC,IAAK,qBAAsBtG,KAAM,qBAAsBmH,UAAU,EAAMvM,MAAO,KAC/E,CACI0L,IAAK,qCACLtG,KAAM,qCACNmH,UAAU,EACVC,OAAQ3F,GACR7G,MAAO,KAEX,CACI0L,IAAK,mCACLtG,KAAM,mCACNmH,UAAU,EACVC,OAAQ3F,GACR7G,MAAO,KAEX,CAAC0L,IAAK,sBAAuBtG,KAAM,sBAAuBmH,UAAU,EAAMvM,MAAO,IAAKwM,OAAQ4P,IAC9F,CAAC1Q,IAAK,yBAA0BtG,KAAM,yBAA0BmH,UAAU,EAAMvM,MAAO,IAAKwM,OAAQ4P,IACpG,CAAC1Q,IAAK,UAAWtG,KAAM,UAAWmH,UAAU,EAAMvM,MAAO,GAAIwM,OAAQ2P,IACrE,CAACzQ,IAAK,+BAAgCtG,KAAM,+BAAgCmH,UAAU,EAAMvM,MAAO,MAgDxF0M,qBAzGA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YAqGJ0M,EA7Cf,YAA6C,IAApBvJ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAyB3B,OACI,gCACI,cAACzB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,4BAGA,cAAC,KAAD,CACI5D,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBApBZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZoB,EAAWD,IAcHgK,kBAAkB,IAEtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QApClC,WACI,IACI+D,EAAM,CAACC,GADEnK,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IAgCP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA9BlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA4BP,8B,qBC8DGkZ,GAzKM,SAAC9W,EAAM+W,GAExB,IAeIC,EAfArV,EAAa+T,EAAiB5J,MAAK,SAAU+C,GAC7C,OAAOA,EAAQjP,OAASI,EAAK2B,cAG7Bc,EAAgBiT,EAAiB5J,MAAK,SAAU+C,GAChD,OAAOA,EAAQjP,OAASI,EAAKyC,iBAG7BC,EAAiBgT,EAAiB5J,MAAK,SAAU+C,GACjD,OAAOA,EAAQjP,OAASI,EAAK0C,kBAE7BC,EAAiB+S,EAAiB5J,MAAK,SAAU+C,GACjD,OAAOA,EAAQjP,OAASI,EAAK2C,kBAM7BqU,EAD0B,YAA1BhX,EAAKiC,iBACqB,CACtBgV,eAAgB,CACZ,CAACC,YAAalX,EAAK0E,eAAeC,aAClC,CAACwS,eAAgBnX,EAAK0E,eAAeE,gBACrC,CAACwS,KAAMpX,EAAK0E,eAAeG,cAKT,CACtBwS,iBAAkB,CACd,CAACH,YAAalX,EAAK0E,eAAeC,aAClC,CAACwS,eAAgBnX,EAAK0E,eAAeE,gBACrC,CAACwS,KAAMpX,EAAK0E,eAAeG,cAKvCkS,EAAela,KAAK,CAACya,aAActX,EAAKkC,eACpCP,GACAoV,EAAela,KAAK,CAChB0a,kBAAmB,CACf,CACI5J,SAAU,CACN,CACIG,KAAM,CACF,CAAC0J,KAAM7V,EAAW9B,MAClB,CAAC4X,SAAUzX,EAAKsC,uBAChB,CAACoV,YAAa/V,EAAWzB,aACzB,CAACyX,SAAUhW,EAAW/B,aASlDmX,EAAela,KAAK,CAACqM,cAAelJ,EAAKkJ,gBACzC6N,EAAela,KAAK,CAAC0F,cAAevC,EAAKuC,gBACzCwU,EAAela,KAAK,CAACwF,cAAerC,EAAKqC,gBACzC0U,EAAela,KAAK,CAAC2F,cAAexC,EAAKwC,gBACrCC,GACAsU,EAAela,KAAK,CAChB+a,cAAe,CACX,CAACJ,KAAM/U,EAAc5C,MACrB,CAAC6X,YAAajV,EAAcvC,aAC5B,CAACyX,SAAUlV,EAAc7C,SAKjC8C,GACAqU,EAAela,KAAK,CAChBgb,eAAgB,CACZ,CAACL,KAAM9U,EAAe7C,MACtB,CAAC6X,YAAahV,EAAexC,aAC7B,CAACyX,SAAUjV,EAAe9C,SAKlC+C,GACAoU,EAAela,KAAK,CAChBib,eAAgB,CACZ,CAACN,KAAM7U,EAAe9C,MACtB,CAAC6X,YAAa/U,EAAezC,aAC7B,CAACyX,SAAUhV,EAAe/C,SAKtCmX,EAAela,KAAK,CAACkb,UAAW/X,EAAK6C,iBACjC7C,EAAKjE,SAAS+G,UAAY9C,EAAKjE,SAASgH,WAAa/C,EAAKjE,SAASiH,OACnE+T,EAAela,KAAK,CAChBmb,cAAe,CACX,CACIC,SAAU,CACN,CAACC,SAAUlY,EAAKjE,SAAS+G,UACzB,CAACqV,UAAWnY,EAAKjE,SAASgH,WAC1B,CAACqU,KAAMpX,EAAKjE,SAASiH,WAKzC+T,EAAela,KAAK,CAACub,cAAepY,EAAKkD,mBACzC6T,EAAela,KAAK,CAChBwb,aAAc,CACV,CAACC,UAAWtY,EAAKmD,aAAaE,WAC9B,CAACkV,WAAYvY,EAAKmD,aAAaC,eAGvC,IAhH2C,eAgHlCiE,GACL,GAA4B,KAAxBrH,EAAKsD,YAAY+D,GAAW,CAC5B,IAAI/D,EAAckV,EAA2B1M,MAAK,SAAU+C,GACxD,OAAOA,EAAQxN,gBAAkBrB,EAAKsD,YAAY+D,MAEtDlN,QAAQC,IAAI,iBAAkB4F,EAAKsD,YAAY+D,IAC/C0P,EAAela,KAAK,CAChB4b,YAAa,CACT,CAACC,gBAAiBpV,EAAYjC,iBAC9B,CAACsX,gBAAiBrV,EAAYlC,sBATrCiG,EAAI,EAAGA,EAAIrH,EAAKsD,YAAYrC,OAAQoG,IAAM,EAA1CA,GAeT0P,EAAela,KAAK,CAAC+b,WAAY5Y,EAAKyE,aACtCsS,EAAela,KAAKma,GACpBD,EAAela,KAAK,CAChBgc,MAAO,CACH,CAACC,QAAS9Y,EAAKgC,MAAMoH,SACrB,CACI2P,eAAgB,CACZ,CAACC,kBAAmBhZ,EAAKgC,MAAM8C,eAAeE,mBAC9C,CAACiU,gBAAiBjZ,EAAKgC,MAAM8C,eAAeC,iBAC5C,CAACmU,QAASlZ,EAAKgC,MAAM8C,eAAeG,SACpC,CAACkU,MAAOnZ,EAAKgC,MAAM8C,eAAeI,YAKlD6R,EAAela,KAAK,CAChBuc,eAAgB,CACZ,CAACC,uBAAwBrZ,EAAKmF,eAAeC,wBAC7C,CAACkU,WAAYtZ,EAAKmF,eAAeG,YACjC,CAACiU,KAAMvZ,EAAKmF,eAAeE,SAGnC0R,EAAela,KAAK,CAAC2c,UAAWxZ,EAAKuF,YACrCwR,EAAela,KAAK,CAAC4c,aAAczZ,EAAKwF,gBCzJtCkU,GAAgB,CAAC,aAAc,QAAS,kBAAmB,aAAc,aAAc,QAAS,QAAS,UAAW,kBAAmB,cAAe,YAAa,mBAAoB,mBAAoB,gBAAiB,cAAe,YAAa,eAAgB,cAAe,eAAgB,gBAAiB,MAAO,OAAQ,gBAAiB,aAAc,iBAAkB,cAAe,iBAAkB,aAAc,cAAe,WAAY,SAAU,YAAa,qBAAsB,oBAAqB,cAAe,gBAAiB,kBAAmB,eAAgB,gBAAiB,iBAAkB,oBAAqB,oBAAqB,gBAAiB,YAAa,eAAgB,SAAU,gBAAiB,cAAe,cAAe,qBAAsB,UAAW,cAAe,gBAAiB,aAAc,oBAAqB,wBAAyB,iBAAkB,gBAAiB,cAAe,UAAW,aAAc,uBAAwB,SAAU,wBAAyB,sBAAuB,WAAY,eAAgB,UAAW,WAAY,QAAS,WAAY,iBAAkB,QAAS,UAAW,SAAU,YAAa,kBAAmB,UAAW,OAAQ,eAAgB,YAAa,YAAa,cAAe,oBAAqB,qBAAsB,aAAc,gBAAiB,MAAO,eAAgB,UAAW,iBAAkB,YAAa,oBAAqB,YAAa,eAAgB,aAAc,gBAAiB,YAAa,gBAAiB,mBAAoB,SAAU,QAAS,gBAAiB,SAoFliDC,GA/DM,SAACtU,EAAM0R,GAIxB,IAFA,IAAIta,EAAO4I,EAAK5I,KACZmd,EAAW,GACNvS,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAIwS,EAAiB,GACjBC,EAAmB,GACnBrd,EAAK4K,GAAGiF,gBAA6C,KAA3B7P,EAAK4K,GAAGiF,iBAClCwN,EAAmBJ,GAAcK,QAAQtd,EAAK4K,GAAGiF,gBAAkB,GAEpC,IAA/B4C,SAAS4K,KACTA,EAAmB,IAEvB,IAAIE,EAAkB,GAClBC,EAAqB,GACrBC,EAAc,GAClB,GAAIzd,EAAK4K,GAAGkF,aAAuC,KAAxB9P,EAAK4K,GAAGkF,YAE/ByN,EADkBvd,EAAK4K,GAAGkF,YAAY/M,MAAM,MACd,GAElC,GAAI/C,EAAK4K,GAAGmF,kBAAiD,KAA7B/P,EAAK4K,GAAGmF,iBAEpCyN,EADqBxd,EAAK4K,GAAGmF,iBAAiBhN,MAAM,MAChB,GAGxC,GAAI/C,EAAK4K,GAAGwF,oCAAqF,KAA/CpQ,EAAK4K,GAAGwF,mCAEtDqN,EADyCzd,EAAK4K,GAAGwF,mCAAmCrN,MAAM,MACzC,GAIrDqa,EAAehd,KAAK,CAChBsd,eAAgB,CACZ,CAACC,WAAY3d,EAAK4K,GAAGsF,SACrB,CAAC0N,SAAU5d,EAAK4K,GAAGuF,oBACnB,CAAC0N,eAAgBJ,GACjB,CAACK,eAAgB9d,EAAK4K,GAAGyF,qCAGjC+M,EAAehd,KAAK,CAChB2a,KAAM,CACF,CAACc,UAAW7b,EAAK4K,GAAG+E,YACpB,CAACmM,WAAY9b,EAAK4K,GAAG8E,gBAG7B0N,EAAehd,KAAK,CAACwP,OAAQ5P,EAAK4K,GAAGgF,SACrCwN,EAAehd,KAAK,CAChB2d,KAAM,CACF,CAACC,KAAMX,GACP,CAACY,KAAMje,EAAK4K,GAAGiF,mBAGvBuN,EAAehd,KAAK,CAAC8d,YAAale,EAAK4K,GAAGqF,gBAC1CmN,EAAehd,KAAK,CAAC+d,aAAcne,EAAK4K,GAAGoF,iBAC3CoN,EAAehd,KAAK,CAACge,eAAgBZ,IACrCJ,EAAehd,KAAK,CAAC0P,YAAayN,IAClCH,EAAehd,KAAK,CAACie,WAAYre,EAAK4K,GAAG0F,+BACzC6M,EAAS/c,KAAK,CAACgd,mBAGnB9C,EAAela,KAAK,CAAC+c,SAAUA,KCVpBmB,GA5DM,SAACvc,EAAMuY,GACxB,IAAIiE,EAAWtF,EAAiB5J,MAAK,SAAAC,GAAE,OAAIA,EAAGnM,OAASpB,EAAKwB,QAE5D+W,EAAela,KAAK,CAChBoe,OAAQ,CACJ,CAACC,SAAU1c,EAAKqB,MAChB,CAACsb,UAAW3c,EAAK6K,WACjB,CAAC+R,WAAY5c,EAAKM,YAClB,CAACuc,SAAU7c,EAAKK,UAChB,CAACyc,QAAS9c,EAAKE,cAGvBqY,EAAela,KAAK,CAAC0e,UAAW/c,EAAKW,YAErC4X,EAAela,KAAK,CAAC2e,KAAMhd,EAAK0C,OAChC6V,EAAela,KAAK,CAAC4e,YAAajd,EAAKuC,YACvCgW,EAAela,KAAK,CAAC6e,WAAYld,EAAKwC,aACtC+V,EAAela,KAAK,CAAC8e,cAAend,EAAKyC,SACzC8V,EAAela,KAAK,CAAC+e,aAAcpd,EAAKsB,eACxCiX,EAAela,KAAK,CAACgf,WAAYrd,EAAKuB,aACtCgX,EAAela,KAAK,CAACif,gBAAiBtd,EAAKkB,WAC3CqX,EAAela,KAAK,CAACkf,cAAevd,EAAK2C,gBACrC6Z,GACAjE,EAAela,KAAK,CAChBmf,oBAAqB,CACjB,CACIC,cAAe,CACX,CAACzE,KAAMwD,EAASnb,MAChB,CAAC6X,YAAasD,EAAS9a,aACvB,CAACyX,SAAUqD,EAASpb,QAG5B,CAACsc,UAAW1d,EAAK4B,WACjB,CAAC+b,OAAQ3d,EAAK+B,sBAI1BwW,EAAela,KACX,CACIic,QAAS,CACL,CACIsD,aAAc,CACV,CAAC5E,KAAMhZ,EAAKkC,eAGpB,CACI2b,QAAS,CACL,CACItD,eAAgB,CACZ,CAACC,kBAAmBxa,EAAKoC,OACzB,CAACsY,QAAS1a,EAAKqC,KACf,CAACqE,MAAO1G,EAAKsC,WAI7B,CAACwb,aAAc9d,EAAKmC,gBCuCrB4b,GA/EY,SAACjX,EAAYyR,GAKpC,IAHA,IAAIta,EAAO6I,EAAW7I,KAElB+f,EAAgB,GACXnV,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAI+F,EAAgB,GAChBqP,EAAkB,GAClBhgB,EAAK4K,GAAGkG,qBAAuD,KAAhC9Q,EAAK4K,GAAGkG,qBAA6B,WACpE,IAAImP,EAAsBjgB,EAAK4K,GAAGkG,oBAAoB/N,MAAM,MAAM,GAClEid,EAAkB/G,EAAiB5J,MAAK,SAAU+C,GAC9C,OAAOA,EAAQjP,OAAS8c,KAHwC,GAOxE,IAAIC,EAAqB,GACrBlgB,EAAK4K,GAAGiG,wBAA6D,KAAnC7Q,EAAK4K,GAAGiG,wBAAgC,WAC1E,IAAIsP,EAAyBngB,EAAK4K,GAAGiG,uBAAuB9N,MAAM,MAAM,GACxEmd,EAAqBjH,EAAiB5J,MAAK,SAAU+C,GACjD,OAAOA,EAAQjP,OAASgd,KAH8C,GAM9E,IAAI5C,EAAkB,GAClBC,EAAqB,GACzB,GAAIxd,EAAK4K,GAAGkF,aAAuC,KAAxB9P,EAAK4K,GAAGkF,YAE/ByN,EADkBvd,EAAK4K,GAAGkF,YAAY/M,MAAM,MACd,GAElC,GAAI/C,EAAK4K,GAAGmF,kBAAiD,KAA7B/P,EAAK4K,GAAGmF,iBAEpCyN,EADqBxd,EAAK4K,GAAGmF,iBAAiBhN,MAAM,MAChB,GAGxC4N,EAAcvQ,KAAK,CACfggB,oBAAqB,CACjB,CAACzC,WAAY3d,EAAK4K,GAAGsF,SACrB,CAAC0N,SAAU5d,EAAK4K,GAAGuF,oBACnB,CAACsP,UAAWzf,EAAK4K,GAAGwF,oCACpB,CAAC0N,eAAgB9d,EAAK4K,GAAGyF,qCAGjCM,EAAcvQ,KAAK,CACf2a,KAAM,CACF,CAACc,UAAW7b,EAAK4K,GAAG+E,YACpB,CAACmM,WAAY9b,EAAK4K,GAAG8E,gBAG7BiB,EAAcvQ,KAAK,CAACwP,OAAQ5P,EAAK4K,GAAGgF,SACpCe,EAAcvQ,KAAK,CAAC8d,YAAale,EAAK4K,GAAGqF,gBACzCU,EAAcvQ,KAAK,CAAC+d,aAAcne,EAAK4K,GAAGoF,iBAC1CW,EAAcvQ,KAAK,CAACge,eAAgBZ,IACpC7M,EAAcvQ,KAAK,CAAC0P,YAAayN,IAC7ByC,GAAmBA,IAAoB,IACvCrP,EAAcvQ,KAAK,CACfigB,gBAAiB,CACb,CAACtF,KAAMiF,EAAgB5c,MACvB,CAAC6X,YAAa+E,EAAgBvc,aAC9B,CAACyX,SAAU8E,EAAgB7c,SAKnC6c,GAAmBA,IAAoB,IACvCrP,EAAcvQ,KAAK,CACfkgB,gBAAiB,CACb,CAACvF,KAAMmF,EAAmB9c,MAC1B,CAAC6X,YAAaiF,EAAmBzc,aACjC,CAACyX,SAAUgF,EAAmB/c,SAI1CwN,EAAcvQ,KAAK,CAAC2Q,QAAS/Q,EAAK4K,GAAGmG,UACrCJ,EAAcvQ,KAAK,CAACie,WAAYre,EAAK4K,GAAG0F,+BACxCyP,EAAc3f,KAAK,CAACuQ,kBAGxB2J,EAAela,KAAK,CAAC2f,cAAeA,KCnDzBQ,GApCQ,SAAC1T,EAAQyN,GAI5B,IAFA,IAAIta,EAAO6M,EAAO7M,KACdiR,EAAY,GACPrG,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAIsG,EAAW,GACX3N,EAAO,GACPvD,EAAK4K,GAAGyG,MAAyB,KAAjBrR,EAAK4K,GAAGyG,MAAc,WACtC,IAAImP,EAAWxgB,EAAK4K,GAAGyG,KAAKtO,MAAM,MAAM,GACxCQ,EAAO0V,EAAiB5J,MAAK,SAAU+C,GACnC,OAAOA,EAAQjP,OAASqd,KAHU,GAO1CtP,EAAS9Q,KAAK,CAACqgB,aAAczgB,EAAK4K,GAAGuG,kBACrCD,EAAS9Q,KAAK,CAACsgB,WAAY1gB,EAAK4K,GAAGwG,oBAC/B7N,GACA2N,EAAS9Q,KAAK,CACViR,KAAM,CACF,CAAC0J,KAAMxX,EAAKH,MACZ,CAAC4X,SAAUhb,EAAK4K,GAAG0G,eACnB,CAAC2J,YAAa1X,EAAKE,aACnB,CAACyX,SAAU3X,EAAKJ,SAK5B+N,EAAS9Q,KAAK,CAACugB,kBAAmB3gB,EAAK4K,GAAG2G,iBAC1CL,EAAS9Q,KAAK,CAACwgB,2BAA4B5gB,EAAK4K,GAAG4G,oBAEnDP,EAAU7Q,KAAK,CAAC8Q,aAGpBoJ,EAAela,KAAK,CAAC6Q,UAAWA,KC1BrB4P,GAtBY,SAAC/T,EAAYwN,GAIpC,IAFA,IAAIta,EAAO8M,EAAW9M,KAClB0R,EAAY,GACP9G,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAI+G,EAAY,GAEhBA,EAAUvR,KAAK,CAACkU,YAAatU,EAAK4K,GAAGkH,kBACrCH,EAAUvR,KAAK,CAAC0gB,kBAAmB9gB,EAAK4K,GAAGmH,oBAC3CJ,EAAUvR,KAAK,CACX2U,YAAa,CACT,CAACgM,QAAS/gB,EAAK4K,GAAGoH,UAClB,CAACgP,SAAUhhB,EAAK4K,GAAGqH,SAK3BP,EAAUtR,KAAK,CAACuR,UAAWA,IAG/B2I,EAAela,KAAK,CAACsR,UAAWA,KC8CrBuP,GAzDQ,SAAC9f,EAAMmZ,GAE1B,IAAI4G,EAAS,GACbA,EAAO9gB,KAAK,CAAC+gB,WAAYhgB,EAAKiM,QAC9B8T,EAAO9gB,KAAK,CAACghB,eAAgBjgB,EAAK0M,YAClCqT,EAAO9gB,KAAK,CAACihB,eAAgBlgB,EAAKkM,QAClC6T,EAAO9gB,KAAK,CAACkhB,8BAA+BngB,EAAKmM,QACjD4T,EAAO9gB,KAAK,CAACmhB,mBAAoBpgB,EAAK2M,UACtCoT,EAAO9gB,KAAK,CAACohB,cAAergB,EAAKoM,QACjC2T,EAAO9gB,KAAK,CAACqhB,iBAAkBtgB,EAAKqM,QACpC0T,EAAO9gB,KAAK,CAACshB,0BAA2BvgB,EAAKsM,QAC7CyT,EAAO9gB,KAAK,CAACuhB,uBAAwBxgB,EAAKuM,QAC1CwT,EAAO9gB,KAAK,CAACwhB,4BAA6BzgB,EAAKwM,QAC/CuT,EAAO9gB,KAAK,CAACwhB,4BAA6BzgB,EAAK4M,kBAC/CmT,EAAO9gB,KAAK,CAACyhB,WAAY1gB,EAAKyM,QAI9B,IADA,IAAIkU,EAAmB,GACdlX,EAAI,EAAGA,EAAIzJ,EAAK6M,iBAAiBxJ,OAAQoG,IAAK,CACnD,IAAImX,EAAkB,GACtBA,EAAgB3hB,KAAK,CAAC4hB,KAAM7gB,EAAK6M,iBAAiBpD,GAAGlH,OACrDqe,EAAgB3hB,KAAK,CAAC6hB,MAAO9gB,EAAK6M,iBAAiBpD,GAAGyH,QACtD0P,EAAgB3hB,KAAK,CAAC6I,KAAM9H,EAAK6M,iBAAiBpD,GAAG5J,OACrD8gB,EAAiB1hB,KAAK,CAAC2hB,oBAG3Bb,EAAO9gB,KAAK,CAAC0hB,qBAGb,IADA,IAAII,EAAoB,GACftX,EAAI,EAAGA,EAAIzJ,EAAK8M,QAAQzJ,OAAQoG,IAAK,CAC1C,IAAI+H,EAAMxR,EAAK8M,QAAQrD,GAEnBuX,EAA0B,GAE9BA,EAAwB/hB,KAAK,CAACsf,OAAQ/M,EAAIrH,KAC1C6W,EAAwB/hB,KAAK,CAACgiB,gBAAiBzP,EAAID,gBACnDyP,EAAwB/hB,KAAK,CAACiiB,QAAS1P,EAAIA,MAC3CwP,EAAwB/hB,KAAK,CAACsf,OAAQ/M,EAAIrH,KAC1C6W,EAAwB/hB,KAAK,CAACkiB,aAAc3P,EAAIC,eAChDuP,EAAwB/hB,KAAK,CAACmiB,sBAAuB5P,EAAIE,eACzDsP,EAAwB/hB,KAAK,CAACoiB,MAAO7P,EAAIpJ,QACzC4Y,EAAwB/hB,KAAK,CACzBqiB,oCAAqC,CACjC,CAACC,aAAc/P,EAAIG,cACnB,CAAC6P,qBAAsBhQ,EAAII,aAGnCoP,EAAwB/hB,KAAK,CAACwiB,UAAWjQ,EAAIK,YAC7CmP,EAAwB/hB,KAAK,CAACyiB,SAAUlQ,EAAIM,WAC5CiP,EAAkB9hB,KAAK,CAAC+hB,4BAI5B7H,EAAela,KAAK,CAAC8gB,WACrB5G,EAAela,KAAK,CAAC8hB,uBC/DnBjF,GAAgB,CAAC,aAAc,QAAS,kBAAmB,aAAc,aAAc,QAAS,QAAS,UAAW,kBAAmB,cAAe,YAAa,mBAAoB,mBAAoB,gBAAiB,cAAe,YAAa,eAAgB,cAAe,eAAgB,gBAAiB,MAAO,OAAQ,gBAAiB,aAAc,iBAAkB,cAAe,iBAAkB,aAAc,cAAe,WAAY,SAAU,YAAa,qBAAsB,oBAAqB,cAAe,gBAAiB,kBAAmB,eAAgB,gBAAiB,iBAAkB,oBAAqB,oBAAqB,gBAAiB,YAAa,eAAgB,SAAU,gBAAiB,cAAe,cAAe,qBAAsB,UAAW,cAAe,gBAAiB,aAAc,oBAAqB,wBAAyB,iBAAkB,gBAAiB,cAAe,UAAW,aAAc,uBAAwB,SAAU,wBAAyB,sBAAuB,WAAY,eAAgB,UAAW,WAAY,QAAS,WAAY,iBAAkB,QAAS,UAAW,SAAU,YAAa,kBAAmB,UAAW,OAAQ,eAAgB,YAAa,YAAa,cAAe,oBAAqB,qBAAsB,aAAc,gBAAiB,MAAO,eAAgB,UAAW,iBAAkB,YAAa,oBAAqB,YAAa,eAAgB,aAAc,gBAAiB,YAAa,gBAAiB,mBAAoB,SAAU,QAAS,gBAAiB,SAyDliD6F,GAxCa,SAAC/V,EAAauN,GAItC,IAFA,IAAIta,EAAO+M,EAAY/M,KACnBmT,EAAqB,GAChBvI,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAIwI,EAAiB,GACjBiK,EAAmB,GACnBrd,EAAK4K,GAAGiF,gBAA6C,KAA3B7P,EAAK4K,GAAGiF,iBAClCwN,EAAmBJ,GAAcK,QAAQtd,EAAK4K,GAAGiF,gBAAkB,GAEpC,IAA/B4C,SAAS4K,KACTA,EAAmB,IAGvBjK,EAAehT,KAAK,CAAC2iB,cAAe/iB,EAAK4K,GAAGU,KAC5C8H,EAAehT,KAAK,CAChB2a,KAAM,CACF,CAACc,UAAW7b,EAAK4K,GAAG+E,YACpB,CAACmM,WAAY9b,EAAK4K,GAAG8E,gBAG7B0D,EAAehT,KAAK,CAChB2d,KAAM,CACF,CAACC,KAAMX,GACP,CAACY,KAAMje,EAAK4K,GAAGiF,mBAGvBuD,EAAehT,KAAK,CAAC4iB,kBAAmBhjB,EAAK4K,GAAGyI,sBAChDD,EAAehT,KAAK,CAChB2U,YAAa,CACT,CAACgM,QAAS/gB,EAAK4K,GAAGoH,UAClB,CAACgP,SAAUhhB,EAAK4K,GAAGqH,SAG3BkB,EAAmB/S,KAAK,CAACgd,eAAgBhK,IAG7CkH,EAAela,KAAK,CAAC+S,mBAAoBA,KCoE9B8P,GA3GO,SAACjW,EAAO4B,EAAK0L,GAC/B,IAAIzG,EAAc,GACd7T,EAAOgN,EAAMhN,KACbkjB,EAAUtU,EAAI5O,KACdiN,EAAgBgM,EAAiB5J,MAAK,SAAU+C,GAChD,OAAOA,EAAQjP,OAAS6J,EAAMC,iBAE9BC,EAAkB+L,EAAiB5J,MAAK,SAAU+C,GAClD,OAAOA,EAAQjP,OAAS6J,EAAME,mBAG9BD,GACA4G,EAAYzT,KAAK,CACb+iB,cAAe,CACX,CACI9R,KAAM,CACF,CAAC0J,KAAM9N,EAAc7J,MACrB,CAAC6X,YAAahO,EAAcxJ,aAC5B,CAACyX,SAAUjO,EAAc9J,WAMzC+J,GACA2G,EAAYzT,KAAK,CACbgjB,gBAAiB,CACb,CACI/R,KAAM,CACF,CAAC0J,KAAM7N,EAAgB9J,MACvB,CAAC6X,YAAa/N,EAAgBzJ,aAC9B,CAACyX,SAAUhO,EAAgB/J,WAM/C,IArCkD,eAqCzCyH,GACL,IAAImJ,EAAY,GAEhBA,EAAU3T,KAAK,CAACijB,WAAYrjB,EAAK4K,GAAGoJ,MACpCD,EAAU3T,KAAK,CAACkjB,cAAetjB,EAAK4K,GAAG4J,iBACvCT,EAAU3T,KAAK,CAACmjB,aAAcvjB,EAAK4K,GAAGqJ,qBACtCF,EAAU3T,KAAK,CAACojB,YAAaxjB,EAAK4K,GAAGsJ,mBACrCH,EAAU3T,KAAK,CACXqjB,cAAe,CACX,CAAC1C,QAAS/gB,EAAK4K,GAAG6J,gBAClB,CAACuM,SAAUhhB,EAAK4K,GAAG+J,eAG3BZ,EAAU3T,KAAK,CACXsjB,YAAa,CACT,CAAC3C,QAAS/gB,EAAK4K,GAAGgK,cAClB,CAACoM,SAAUhhB,EAAK4K,GAAGkK,aAG3Bf,EAAU3T,KAAK,CACXiU,UAAW,CACP,CAACE,OAAQvU,EAAK4K,GAAGyK,SACjB,CAACf,YAAatU,EAAK4K,GAAGwK,yBAG9BrB,EAAU3T,KAAK,CACX2U,YAAa,CACT,CAACgM,QAAS/gB,EAAK4K,GAAGmK,aAClB,CAACiM,SAAUhhB,EAAK4K,GAAGqK,qBAG3BlB,EAAU3T,KAAK,CAACujB,aAAc3jB,EAAK4K,GAAG0K,gBACtC,IAAIsO,EAAWV,EAAQ7T,MAAK,SAAU+C,GAClC,OAAOK,SAASL,EAAQ4B,OAASvB,SAASzS,EAAK4K,GAAGoJ,QAIlD4P,GACA7P,EAAU3T,KAAK,CACXmV,kBAAmB,CACf,CAACsO,mBAAoBD,EAASlO,mBAC9B,CAACoO,iBAAkBF,EAASjO,mBAC5B,CAACoO,SAAUH,EAAS/N,WACpB,CAACmO,QAASJ,EAAShO,oBACnB,CAACqO,aAAcL,EAAS9N,eACxB,CAACoO,gBAAiBN,EAAS7N,iBAC3B,CAACoO,WAAYP,EAAS5N,aACtB,CAACoO,oBAAqBR,EAAS3N,gBAC/B,CAACoO,qBAAsBT,EAAS1N,KAChC,CAACoO,uBAAwBV,EAASxN,yBAClC,CAACmO,gBAAiBX,EAASvN,mBAC3B,CAACwI,QAAS+E,EAASzN,2BAK/BpC,EAAU3T,KAAK,CACX+T,UAAW,CACP,CAACqQ,eAAgBxkB,EAAK4K,GAAGwJ,gBACzB,CAACqQ,YAAazkB,EAAK4K,GAAGuK,eACtB,CAACuP,WAAY1kB,EAAK4K,GAAGsK,gBAG7BrB,EAAYzT,KAAK,CAAC2T,UAAWA,KA/DxBnJ,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAM,EAA9BA,GAiETiJ,EAAYzT,KAAK,CAACukB,kBAAmB3kB,EAAKwE,SAE1C8V,EAAela,KAAK,CAACwkB,sBAAuB,CAAC,CAAC/Q,YAAaA,OCtChDgR,GApEU,SAAC3W,EAAUoM,GAChCA,EAAela,KAAK,CAAC0kB,UAAW5W,EAASC,YACzCmM,EAAela,KAAK,CAAC2kB,8BAA+B7W,EAASE,UAC7DkM,EAAela,KAAK,CAChB4kB,eAAgB,CACZ,CAACC,kBAAmB/W,EAASK,UAC7B,CAAC2W,OAAQhX,EAASG,QAClB,CAAC8W,WAAYjX,EAASI,eAG9BgM,EAAela,KAAK,CAACglB,yBAA0BlX,EAASM,gBACxD8L,EAAela,KAAK,CAACilB,8BAA+BnX,EAASO,wBAC7D6L,EAAela,KAAK,CAACklB,SAAUpX,EAASQ,cACxC4L,EAAela,KAAK,CAChBmlB,IAAK,CAAC,CACFjJ,eAAgB,CACZ,CAACE,gBAAiBtO,EAAS/J,OAC3B,CAACsY,QAASvO,EAAS9J,KACnB,CAACqE,MAAOyF,EAAS7J,SAEtB,CACCmhB,OAAQ,CACJ,CAAC3J,UAAW3N,EAASS,WACrB,CAACmN,WAAY5N,EAASvH,iBAQlC,IAFA,IAAI8e,EAAyB,GA7BsB,WA+B1C7a,GACL,IAAIS,EAAM6C,EAASlO,KAAK4K,GACpB8a,EAAqB,GACzBA,EAAmBtlB,KAAK,CAACqgB,aAAcpV,EAAIkI,WAC3CmS,EAAmBtlB,KAAK,CAACsgB,WAAYrV,EAAImI,gBACzCkS,EAAmBtlB,KAAK,CAACulB,SAAUta,EAAIoI,eACvCiS,EAAmBtlB,KAAK,CAACwgB,2BAA4BvV,EAAIqI,kBACzD,IAAInQ,EAAO0V,EAAiB5J,MAAK,SAAAC,GAAE,OAAIA,EAAGnM,OAASkI,EAAI9H,QAEvDmiB,EAAmBtlB,KAAK,CACpBwlB,SAAU,CACN,CAAC7K,KAAM1P,EAAIsI,cACX,CACI6H,SAAU,CACN,CAACC,SAAUpQ,EAAIhF,UACf,CAACqV,UAAWrQ,EAAI/E,gBAK5B/C,GACAmiB,EAAmBtlB,KAAK,CACpBiR,KAAM,CACF,CAAC0J,KAAMxX,EAAKH,MACZ,CAAC4X,SAAUzX,EAAKsiB,UAChB,CAAC5K,YAAa1X,EAAKE,aACnB,CAACyX,SAAU3X,EAAKJ,SAK5BsiB,EAAuBrlB,KAAK,CAACslB,wBA/BxB9a,EAAI,EAAGA,EAAIsD,EAASlO,KAAKwE,OAAQoG,IAAM,EAAvCA,GAiCT0P,EAAela,KAAK,CAACqlB,4BCMVK,GAnEO,SAACjX,EAAOyL,GAC1B,IAAI/D,EAAmB,GACnBvW,EAAO6O,EAAM7O,KACb+lB,EAAoBviB,EAAY6L,MAAK,SAAU+C,GAC/C,OAAOA,EAAQjP,OAAS0L,EAAME,qBAIlCwH,EAAiBnW,KAAK,CAAC0O,oBAAqBD,EAAMC,sBAC9CiX,GACAxP,EAAiBnW,KAAK,CAClB2O,kBAAmB,CACf,CACIsC,KAAM,CACF,CAAC0J,KAAMgL,EAAkB3iB,MACzB,CAAC6X,YAAa8K,EAAkBtiB,aAChC,CAACyX,SAAU6K,EAAkB5iB,WAMjDoT,EAAiBnW,KAAK,CAAC4O,sBAAuBH,EAAMG,wBACpD,IAAK,IAAIpE,EAAI,EAAGA,EAAI5K,EAAKwE,OAAQoG,IAAK,CAClC,IAAI4L,EAA2B,GAC3BO,EAAiB,GACjB/W,EAAK4K,GAAGmM,gBAA6C,KAA3B/W,EAAK4K,GAAGmM,gBAAwB,WAC1D,IAAIiP,EAAmBhmB,EAAK4K,GAAGmM,eAAehU,MAAM,MAAM,GAC1DgU,EAAiBvT,EAAY6L,MAAK,SAAU+C,GACxC,OAAOA,EAAQjP,OAAS6iB,KAH8B,GAM9D,IAAIC,EAAgB,GAChBC,EAAuB,GAC3B,GAAIlmB,EAAK4K,GAAG8L,WAAmC,KAAtB1W,EAAK4K,GAAG8L,WAA0C,iBAAtB1W,EAAK4K,GAAG8L,UAA8B,CACvF,IAAIyP,EAAYnmB,EAAK4K,GAAG8L,UAAU3T,MAAM,OACxCkjB,EAAgBE,EAAU,GAC1BD,EAAuBC,EAAU,GAGrC3P,EAAyBpW,KAAK,CAC1BsW,UAAW,CACP,CAACsH,KAAMiI,GACP,CAAC3R,YAAa4R,MAGtB1P,EAAyBpW,KAAK,CAACgmB,cAAepmB,EAAK4K,GAAG+L,qBACtDH,EAAyBpW,KAAK,CAACwW,WAAY5W,EAAK4K,GAAGgM,aACnDJ,EAAyBpW,KAAK,CAACimB,gBAAiBrmB,EAAK4K,GAAGiM,cACxDL,EAAyBpW,KAAK,CAACkmB,kBAAmBtmB,EAAK4K,GAAGkM,iBACtDC,GAAkBA,IAAmB,IACrCP,EAAyBpW,KAAK,CAC1BmmB,iBAAkB,CACd,CAACxL,KAAMhE,EAAe3T,MACtB,CAAC6X,YAAalE,EAAetT,aAC7B,CAACyX,SAAUnE,EAAe5T,SAMtCoT,EAAiBnW,KAAK,CAACoW,yBAA0BA,IAGrD8D,EAAela,KAAK,CAACmW,iBAAkBA,K,UCP3C,IAAIiQ,GAAkB,SAACC,GACnB,IAAItlB,EAAOslB,EACPC,EAAQ,qBAAiB,IAAIzd,KAArB,QACRwO,EAAO,IAAIkP,KAAK,CAACxlB,IAEjBylB,EAAIC,SAASC,cAAc,KAC3BC,EAAMC,IAAIC,gBAAgBxP,GAC9BmP,EAAEM,KAAOH,EACTH,EAAEO,SAAWT,EACbG,SAASO,KAAKC,YAAYT,GAC1BA,EAAEU,QACFC,YAAW,WACPV,SAASO,KAAKI,YAAYZ,GAC1Ba,OAAOT,IAAIU,gBAAgBX,KAC5B,MAGQY,GA5Ef,SAAmBxmB,EAAMymB,GAErB,IAAMC,EAmCV,SAA6B1mB,GACzB,IAAM0mB,EAAS,GAkBf,OXsF6B,SAACA,EAAQ1mB,GACtC0mB,EAAOxW,KAAO,GAETlQ,EAAKqE,mBAAkBqiB,EAAOxW,KAAK,sBAAuB,GAC1DlQ,EAAK+D,aAAY2iB,EAAOxW,KAAK,iBAAkB,IAChDlQ,EAAK7B,SAAS+G,UAAYlF,EAAK7B,SAASgH,WAAanF,EAAK7B,SAASiH,QAC9DpF,EAAK7B,SAAS+G,WAAUwhB,EAAOxW,KAAP,UAA0B,GAClDlQ,EAAK7B,SAASgH,YAAWuhB,EAAOxW,KAAP,WAA2B,GACpDlQ,EAAK7B,SAASiH,OAAMshB,EAAOxW,KAAK,kBAAmB,IAEvDlQ,EAAKuF,aAAaE,YAAWihB,EAAOxW,KAAK,wBAAyB,GAClElQ,EAAKuF,aAAaC,aAAYkhB,EAAOxW,KAAK,yBAA0B,GACpElQ,EAAKoE,MAAMoH,UAASkb,EAAOxW,KAAK,iBAAkB,GAClDlQ,EAAKuH,eAAeC,yBAAwBkf,EAAOxW,KAAK,sBAAuB,GWpHpFyW,CAAkBD,EAAQ1mB,EAAKoC,MTnDF,SAACskB,EAAQ1mB,GACtC0mB,EAAOE,MAAQ,IACX5mB,EAAKoC,MAAQpC,EAAKwC,WAAaxC,EAAK2C,qBAC/B3C,EAAKoC,OAAMskB,EAAOE,MAAP,MAAuB,GAClC5mB,EAAKwC,YAAWkkB,EAAOE,MAAM,kBAAmB,GAChD5mB,EAAK2C,oBAAmB+jB,EAAOE,MAAP,QAAyB,IS+C1DC,CAAkBH,EAAQ1mB,EAAKY,MVpDF,SAAC8lB,EAAQ1mB,GACtC0mB,EAAO/K,KAAO,GACVtV,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,CAAC,GAAM,MAEPvG,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGI,cAAamY,EAAO/K,KAAK,eAAiB,IAC7CxN,EAAGK,aAAYkY,EAAO/K,KAAK,cAAgB,IAC3CxN,EAAGO,iBAAgBgY,EAAO/K,KAAK,kBAAoB,IACnDxN,EAAGW,gBAAe4X,EAAO/K,KAAK,iBAAmB,IACjDxN,EAAGS,mBAAkB8X,EAAO/K,KAAK,oBAAsB,IACvDxN,EAAGU,iBAAgB6X,EAAO/K,KAAK,kBAAoB,IACnDxN,EAAGQ,cAAa+X,EAAO/K,KAAP,YAA6B,IAC7CxN,EAAGY,UAAS2X,EAAO/K,KAAK,WAAa,IACrCxN,EAAGa,qBAAoB0X,EAAO/K,KAAK,sBAAwB,OUuCxEoL,CAAkBL,EAAQ1mB,EAAKyH,MRrDI,SAACif,EAAQ1mB,GAC5C0mB,EAAOhL,WAAa,GAEhBrV,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,CAAC,GAAM,MAEPvG,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGI,cAAamY,EAAOhL,WAAW,eAAiB,IACnDvN,EAAGK,aAAYkY,EAAOhL,WAAW,cAAgB,IACjDvN,EAAGW,gBAAe4X,EAAOhL,WAAW,iBAAmB,IACvDvN,EAAGS,mBAAkB8X,EAAOhL,WAAW,oBAAsB,IAC7DvN,EAAGU,iBAAgB6X,EAAOhL,WAAW,kBAAoB,IACzDvN,EAAGQ,cAAa+X,EAAOhL,WAAP,YAAmC,IACnDvN,EAAGY,UAAS2X,EAAOhL,WAAW,WAAa,IAC3CvN,EAAGa,qBAAoB0X,EAAOhL,WAAW,sBAAwB,IACjEvN,EAAGU,iBAAgB6X,EAAOhL,WAAW,mBAAqB,IAC1DvN,EAAGwB,sBAAqB+W,EAAOhL,WAAW,uBAAyB,IACnEvN,EAAGuB,yBAAwBgX,EAAOhL,WAAW,0BAA4B,IACzEvN,EAAGyB,UAAS8W,EAAOhL,WAAP,QAA+B,OQoCxDsL,CAAwBN,EAAQ1mB,EAAK0H,YPtDN,SAACgf,EAAQ1mB,GACxC0mB,EAAOO,OAAS,GAEZ5gB,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,CAAC,GAAM,MAEPvG,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAG+B,OAAMwW,EAAOO,OAAO/W,KAAO,OOgD3CgX,CAAoBR,EAAQ1mB,EAAK0L,QHvDC,SAACgb,EAAQ1mB,GAC3C0mB,EAAOS,gBAAkB,GAErB9gB,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,MAEAvG,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGoG,oBAAmBmS,EAAOS,gBAAgB,qBAAuB,IACpEhZ,EAAGqG,oBAAmBkS,EAAOS,gBAAgB,qBAAuB,OGgDjFC,CAAuBV,EAAQ1mB,EAAKyN,KFxDH,SAACiZ,EAAQ1mB,GAC1C0mB,EAAOW,SAAW,GACdhhB,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAAC,CAAC4D,GAAI,MACnDnK,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGmE,eAAcoU,EAAOW,SAAP,SAA8B,IAC/ClZ,EAAGiE,WAAUsU,EAAOW,SAAS,aAAe,IAC5ClZ,EAAGkE,gBAAeqU,EAAOW,SAAS,kBAAoB,IACtDlZ,EAAGqE,eAAckU,EAAOW,SAAP,SAA8B,OEkD5DC,CAAsBZ,EAAQ1mB,EAAK+M,UJ1DC,SAAC2Z,EAAQ1mB,GAC7C0mB,EAAOa,aAAe,GAEtBhrB,QAAQC,IAAI,aAAcwD,EAAKnB,MAC3BwH,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,MACEF,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC/C,CAAC4D,GAAI,GAAIoE,YAAa,GAAIC,WAAY,GAAIE,eAAgB,OAE1D1O,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGhE,KAAIuc,EAAOa,aAAP,GAA4B,IACnCpZ,EAAG+D,sBAAqBwU,EAAOa,aAAa,uBAAyB,OIgDlFC,CAAyBd,EAAQ1mB,EAAK4L,aL5DP,SAAC8a,EAAQ1mB,GACxC0mB,EAAO3G,OAAS,GAEhB/f,EAAK8M,QAAQga,SAAQ,SAAA3Y,GACZA,EAAGhE,KAAIuc,EAAO3G,OAAP,GAAsB,IAC7B5R,EAAGoD,gBAAemV,EAAO3G,OAAO,qBAAuB,OKwDhE0H,CAAoBf,EAAQ1mB,EAAKgM,QD3DH,SAAC0a,EAAQ1mB,GACvC0mB,EAAOgB,MAAQ,GAEV1nB,EAAK2N,sBAAqB+Y,EAAOgB,MAAM,oFACI,GAC5CrhB,KAAKE,UAAUvG,EAAKnB,QAAUwH,KAAKE,UAAU,CAC7C,CAAC,GAAM,MAEPvG,EAAKnB,KAAKioB,SAAQ,SAAA3Y,GACTA,EAAGoH,YAAWmR,EAAOgB,MAAM,cAAgB,IAC3CvZ,EAAGqH,qBAAoBkR,EAAOgB,MAAM,6BAA+B,OCkDhFC,CAAmBjB,EAAQ1mB,EAAK0N,OAIhClD,OAAOC,KAAKic,GAAQI,SAAQ,SAAA3Y,GACpByZ,KAAEC,QAAQnB,EAAOvY,YAAauY,EAAOvY,MAGtCuY,EAtDQoB,CAAoB9nB,GACnC,GAAK4nB,KAAEC,QAAQnB,GAAf,CAKA,IAAIvN,EAAiB,GACrB5c,QAAQC,IAAI,iCAAkCwD,GAE9CkZ,GAAalZ,EAAKoC,KAAM+W,GACxB4C,GAAa/b,EAAKyH,KAAM0R,GACxBgE,GAAand,EAAKY,KAAMuY,GACxBwF,GAAmB3e,EAAK0H,WAAYyR,GACpCiG,GAAepf,EAAK0L,OAAQyN,GAC5BuG,GAAmB1f,EAAK2L,WAAYwN,GACpC2G,GAAe9f,EAAKgM,OAAQmN,GAC5BwI,GAAoB3hB,EAAK4L,YAAauN,GACtC2I,GAAc9hB,EAAK6L,MAAO7L,EAAKyN,IAAK0L,GACpCuK,GAAiB1jB,EAAK+M,SAAUoM,GAChCwL,GAAc3kB,EAAK0N,MAAOyL,GAE1B,IAAImM,EAAWtX,KAAI,CAAC,CAChB+Z,WAAY,CAAC,CACTC,iBAAkB,CACd,CAACC,iBAAkBjoB,EAAKoC,KAAKiC,oBAGjC,CACI8U,eAAgBA,MAGxB,CAAC+O,aAAa,IAClB7C,GAAgBC,QA9BZmB,EAAQC,I,2FCATzd,GAAkBC,WAAlBD,eAEDkf,GAAapf,IAAMqf,YACnBtrB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtB6B,SAAU,KAEdC,oBAAqB,CACjBD,SAAU,IACVZ,OAAQ,IAEZypB,cAAe,CACXzpB,OAAQ,IAEZ0pB,aAAc,CACVzrB,MAAO,OAEX6C,OAAQ,CACJH,OAAQvC,EAAMW,QAAQ,IAE1BgC,UAAW,CACPhB,UAAW3B,EAAMW,QAAQ,QA+blB4qB,GA3ba,SAAC,GAAiD,IAAhDvoB,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,WAAYuoB,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,cAEhD1qB,EAAUjB,KAChB,EAAkC4rB,mBAAS,CAAC9P,MAAM,EAAOC,MAAO,GAAI8P,SAAU,UAA9E,mBAAOC,EAAP,KAAkBC,EAAlB,KACMlqB,EAAY,CAACA,UAAW,QACxBmqB,EAAsB,CAACjsB,MAAO,OAEpC,OAAO,qCACH,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,4CAIA,cAAC9B,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,8BAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,yGAGA,eAACmC,EAAA,EAAD,CACIC,QAAQ,eACRZ,MAAOV,EAAKiM,MACZjO,UAAWD,EAAQsqB,cACnBtnB,SAAU,SAAC/B,GACPiB,EAAW,CAACgM,MAAOjN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,wBAIZ,cAACH,EAAA,EAAD,CACIC,MAAM,qBACNE,MAAOV,EAAK0M,UACZhO,MAAO,CAACqqB,YAAa,QACrBhoB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACyM,UAAW1N,EAAEgC,OAAON,SACpCjC,QAAQ,gBAIhB,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACIzC,MAAO,CAACE,OAAQ,QAChBH,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAJb,UAMI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,0JAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKkM,MACZnL,SAAU,SAAC/B,GACPiB,EAAW,CAACiM,MAAOlN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,eAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,6GAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKmM,MACZpL,SAAU,SAAC/B,GACPiB,EAAW,CAACkM,MAAOnN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,wBAIZ,cAACH,EAAA,EAAD,CACIC,MAAM,wBACNE,MAAOV,EAAK2M,QACZjO,MAAO,CAACqqB,YAAa,QACrBhoB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC0M,QAAS3N,EAAEgC,OAAON,SAClCjC,QAAQ,gBAIhB,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,uDAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKoM,MACZrL,SAAU,SAAC/B,GACPiB,EAAW,CAACmM,MAAOpN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,uDAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKqM,MACZtL,SAAU,SAAC/B,GACPiB,EAAW,CAACoM,MAAOrN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,2GAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKsM,MACZvL,SAAU,SAAC/B,GACPiB,EAAW,CAACqM,MAAOtN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,+HAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKuM,MACZxL,SAAU,SAAC/B,GACPiB,EAAW,CAACsM,MAAOvN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,sBAAKhC,MAAO,CAAC7B,MAAO,QAASsB,SAAU,WAAYQ,UAAW,QAA9D,UACI,cAAC,KAAD,CACIjC,QAAS,CACL,CAAC6L,IAAK,OAAQtG,KAAM,OAAQmH,UAAU,EAAMvM,MAAO,KACnD,CAAC0L,IAAK,QAAStG,KAAM,QAASmH,UAAU,EAAMvM,MAAO,KACrD,CAAC0L,IAAK,OAAQtG,KAAM,OAAQmH,UAAU,EAAMC,OAAQ3F,GAAY7G,MAAO,MAE3E2M,UAAW,SAAAC,GAAC,OAAIzJ,EAAK6M,iBAAiBpD,IACtCC,UAAW1J,EAAK6M,iBAAiBxJ,OACjCsG,kBAAmB,YAEf,IAF+C,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC3B+C,EAAmB7M,EAAK6M,iBAAiB9C,QACtCN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9BoD,EAAiBpD,GAAjB,2BAA0BoD,EAAiBpD,IAAOK,GAEtD7J,EAAW,CAAC4M,sBAEhB7C,kBAAkB,IAEtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/B,IAAI0G,EAAmB7M,EAAK6M,iBAC5BA,EAAiB5N,KAAK,IACtBgB,EAAW,CAAC4M,sBAHhB,qBAOA,cAACpG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/B,IAAI0G,EAAmB7M,EAAK6M,iBAC5BA,EAAiBzC,MACjBnK,EAAW,CAAC4M,sBAHhB,2BAOJ,eAACxO,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,yDAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKwM,MACZzL,SAAU,SAAC/B,GACPiB,EAAW,CAACuM,MAAOxN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,wBAKZ,cAACH,EAAA,EAAD,CACIC,MAAM,mDACNjB,OAAQ,SACRmB,MAAOV,EAAK4M,gBACZlO,MAAO,CAACqqB,YAAa,QACrBhoB,SAAU,SAAC/B,GACP,IAAI4N,EAAkB5N,EAAEgC,OAAON,MAC/BT,EAAW,CAAC2M,qBAEhBnO,QAAQ,gBAIhB,cAACJ,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,yDAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKyM,MACZ1L,SAAU,SAAC/B,GACPiB,EAAW,CAACwM,MAAOzN,EAAEgC,OAAON,SALpC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,eAAClC,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,IAAIV,QAASA,EAAQ4B,UAAWU,UAAU,IAAIC,cAAY,EAAhG,6KAEuD,uBAFvD,gOAKc,uBALd,2KAWA,cAAC0oB,GAAA,EAAD,CAAUC,GAAIL,EAAUhQ,KAAMla,MAAO,CAACC,UAAW,QAAjD,SACI,cAACuqB,GAAA,EAAD,CACIP,SAAUC,EAAUD,SACpBQ,OACI,cAACrjB,EAAA,EAAD,CACII,aAAW,QACXD,MAAM,UACNmjB,KAAK,QACLjjB,QAAS,WACL0iB,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,WALxD,SAQI,cAAC,KAAD,CAAWU,SAAS,cAXhC,SAeKT,EAAU/P,UAInB,sBAAKna,MAAO,CAACC,UAAW,QAAxB,UACI,cAAC,KAAD,CAEI2qB,IAAKnB,GACLzrB,QAAS,CACL,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CACI0L,IAAK,gBACLtG,KAAM,oBACNmH,UAAU,EACVvM,MAAO,IACPwM,OAAQ,cAAC,GAAD,CAAgBC,QAAS,CAAC,QAAS,OAAQ,gBAEvD,CAACf,IAAK,aAActG,KAAM,cAAemH,UAAU,EAAOvM,MAAO,KACjE,CAAC0L,IAAK,YAAatG,KAAM,aAAcmH,UAAU,EAAOvM,MAAO,IAC/D,CAAC0L,IAAK,MAAOtG,KAAM,UAAWmH,UAAU,EAAMvM,MAAO,KACrD,CAAC0L,IAAK,eAAgBtG,KAAM,gBAAiBmH,UAAU,EAAMvM,MAAO,IAAKwM,OAAQ3F,IACjF,CACI6E,IAAK,eACLtG,KAAM,2BACNmH,UAAU,EACVC,OAAQ,cAAC,GAAD,CAAgBC,QAAS,CAAC,QAAS,MAAO,QAClDzM,MAAO,KAEX,CAAC0L,IAAK,QAAStG,KAAM,QAASmH,UAAU,EAAMvM,MAAO,KACrD,CAAC0L,IAAK,eAAgBtG,KAAM,gBAAiBmH,UAAU,EAAMvM,MAAO,KACpE,CAAC0L,IAAK,WAAYtG,KAAM,yBAA0BmH,UAAU,EAAMvM,MAAO,KACzE,CAAC0L,IAAK,YAAatG,KAAM,YAAamH,UAAU,EAAMvM,MAAO,KAC7D,CAAC0L,IAAK,WAAYtG,KAAM,WAAYmH,UAAU,EAAMvM,MAAO,MAG/D2M,UAAW,SAAAC,GAAC,OAAIzJ,EAAK8M,QAAQrD,IAC7BC,UAAW1J,EAAK8M,QAAQzJ,OACxBsG,kBAAmB,YAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACjCvN,QAAQC,IAAI,YAAaoN,EAAS,WAAYC,EAAO,gBAAiBC,GAGtE,IAFA,IAAMgD,EAAU9M,EAAK8M,QAFyB,WAIrCrD,GACL,IAAIhI,EAAOqL,EAAQrD,GAEnB,GAAIK,EAAQyf,eAAe,MAAO,CAC9B,IAAK9nB,EAAK8nB,eAAe,iBAOrB,OANAV,EAAa,CACTjQ,MAAM,EACNC,MAAO,iDACP8P,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,KAC5E,WAGJ,GADAlnB,EAAK0I,GAAKmH,SAASxH,EAAQK,IACA,SAAvB1I,EAAK8P,cAA0B,CAC/B,IAAI2E,EAAWsS,EAAS3pB,KAAKqP,MAAK,SAAAC,GAAE,OAAIA,EAAGhE,KAAO1I,EAAK0I,MACvD,IAAK+L,EAOD,OANA2S,EAAa,CACTjQ,MAAM,EAAMC,MAAO,oBAAsBpX,EAAK0I,GACxC,kFACNwe,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,KAC5E,WAEJlnB,EAAK+L,UAAY0I,EAAS1H,WAC1B/M,EAAK+D,WAAa0Q,EAAS3H,YAC3BzB,EAAQrD,GAAKhI,OACV,GAA2B,cAAvBA,EAAK8P,cAA+B,CAC3C,IAAI4E,EAAgBsS,EAAc5pB,KAAKqP,MAAK,SAAAC,GAAE,OAAIA,EAAGhE,KAAO1I,EAAK0I,MACjE,IAAKgM,EAOD,OANA0S,EAAa,CACTjQ,MAAM,EAAMC,MAAO,yBAA2BpX,EAAK0I,GAC7C,uFACNwe,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,KAC5E,WAEJlnB,EAAK+L,UAAY2I,EAAc3H,WAC/B/M,EAAK+D,WAAa2Q,EAAc5H,YAChCzB,EAAQrD,GAAKhI,OAEbonB,EAAa,CACTjQ,MAAM,EACNC,MAAO,iDACP8P,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,UAGhFlnB,EAAI,2BAAOA,GAASqI,GAExBgD,EAAQrD,GAAKhI,GArDRgI,EAAIG,EAASH,GAAKI,EAAOJ,IAAK,EAA9BA,GAwDTxJ,EAAW,CAAC6M,QAASA,KAEzB9C,kBAAkB,GA7Fbwf,KAAKC,UA+Fd,cAAChjB,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/B,IAAI2G,EAAU9M,EAAK8M,QACnBA,EAAQ7N,KAAK,IACbgB,EAAW,CAAC6M,aAHhB,qBAOA,cAACrG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/B,IAAI2G,EAAU9M,EAAK8M,QACnBA,EAAQ1C,MACRnK,EAAW,CAAC6M,aAHhB,+BC5dG4c,GADH,CAAC,SAAU,MAAO,MAAM,KAAK,MAAM,OCQxCzgB,GAAkBC,WAAlBD,eAaDvM,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CAAC0L,IAAK,kBAAmBtG,KAAM,kBAAmBmH,UAAU,GAC5D,CAACb,IAAK,WAAYtG,KAAM,WAAYmH,UAAU,GAC9C,CAACb,IAAK,OAAQtG,KAAM,OAAQmH,UAAU,EAAMC,OAN7B,cAAC,GAAD,CAAgBC,QAASqgB,MAOxC,CAACphB,IAAK,oBAAqBtG,KAAM,oBAAqBmH,UAAU,IAmDrDG,qBAnEA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YA+DJ0M,EA/Cf,YAA6C,IAApBvJ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAyB3B,OACI,gCACI,cAACzB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,yBAGA,cAAC,KAAD,CACI5D,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBApBZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZoB,EAAWD,IAcHgK,kBAAkB,EAClBC,gBAAgB,SAGpB,cAACxD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAtClC,WACI5J,QAAQC,IAAI,cACZ,IACI0N,EAAM,CAACC,GADEnK,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IAiCP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA/BlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA6BP,8BC1DLiJ,GAAkBC,WAAlBD,eAcDvM,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,GAClC,CAACb,IAAK,cAAetG,KAAM,cAAemH,UAAU,GACpD,CAACb,IAAK,aAActG,KAAM,aAAcmH,UAAU,GAClD,CAACb,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,GAC1D,CAACb,IAAK,sBAAuBtG,KAAM,sBAAuBmH,UAAU,GACpE,CAACb,IAAK,WAAYtG,KAAM,WAAYmH,UAAU,GAC9C,CAACb,IAAK,OAAQtG,KAAM,OAAQmH,UAAU,EAAMC,OAV7B,cAAC,GAAD,CAAgBC,QAASqgB,OAgH7BpgB,qBAzHA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YAqHJ0M,EAnGf,YAAwD,IAA9BvJ,EAA6B,EAA7BA,KAAMwoB,EAAuB,EAAvBA,SAAUvoB,EAAa,EAAbA,WACtC,EAAkCyoB,mBAAS,CAAC9P,MAAM,EAAOC,MAAO,GAAI8P,SAAU,UAA9E,mBAAOC,EAAP,KAAkBC,EAAlB,KAcA,OACI,gCACI,cAACrqB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,0BAIA,cAAC0oB,GAAA,EAAD,CAAUC,GAAIL,EAAUhQ,KAAMla,MAAO,CAACC,UAAW,QAAjD,SACI,cAACuqB,GAAA,EAAD,CACIP,SAAUC,EAAUD,SACpBQ,OACI,cAACrjB,EAAA,EAAD,CACII,aAAW,QACXD,MAAM,UACNmjB,KAAK,QACLjjB,QAAS,WACL0iB,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,WALxD,SAQI,cAAC,KAAD,CAAWU,SAAS,cAXhC,SAeKT,EAAU/P,UAGnB,cAAC,KAAD,CACInc,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBAAmB,YAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACjCvN,QAAQC,IAAI,YAAaoN,EAAS,WAAYC,EAAO,gBAAiBC,GAGtE,IAFA,IAAMjL,EAAOmB,EAAKnB,KAF4B,WAIrC4K,GACL,IAAIhI,EAAO5C,EAAK4K,GAChB,GAAIK,EAAQyf,eAAe,MAAO,CAC9B9nB,EAAK0I,GAAKL,EAAQK,GAElB,IAAI+L,EAAWsS,EAAS3pB,KAAKqP,MAAK,SAAU+C,GACxC,OAAOK,SAASL,EAAQ9G,MAAQmH,SAAS7P,EAAK0I,OAGlD,GADA5N,QAAQC,IAAI,YAAa0Z,IACpBA,EAaD,OAZAzU,EAAK0I,GAAK,GACV1I,EAAK8M,YAAc,GACnB9M,EAAK+M,WAAa,GAClB/M,EAAKiN,eAAiB,GACtBma,EAAa,CACTjQ,MAAM,EACNC,MAAO,2BAA6BpX,EAAK0I,GACnC,kFACNwe,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,KAC5ElnB,EAAI,2BAAOA,GAASqI,GACpB,WAEArI,EAAK8M,YAAc2H,EAAS3H,YAC5B9M,EAAK+M,WAAa0H,EAAS1H,WAC3B/M,EAAKiN,eAAiBwH,EAASxH,eAC/BnS,QAAQC,IAAI,iBAAkBiF,GAC9BA,EAAI,2BAAOA,GAASqI,QAIxBrI,EAAI,2BAAOA,GAASqI,GAExBjL,EAAK4K,GAAKhI,GAlCLgI,EAAIG,EAASH,GAAKI,EAAOJ,IAAK,EAA9BA,GAoCTxJ,EAAW,CAACpB,KAAMA,KAGtBmL,kBAAkB,EAClBC,gBAAgB,SAGpB,cAACxD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAxFlC,WACI5J,QAAQC,IAAI,cAEZwD,EAAKnB,KAAKI,KADA,IAEVgB,EAAWD,IAoFP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAlFlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IAgFP,8BC/HG4pB,GADM,CAAC,QAAQ,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MCepE3gB,GAAkBC,WAAlBD,eAYD4gB,GAAuB,cAAC,GAAD,CAAgBvgB,QAASwgB,KAChDC,GAAa,cAAC,GAAD,CAAgBzgB,QAASqgB,KAEtCjtB,GAAU,CACZ,CAAC6L,IAAK,MAAOtG,KAAM,MAAOmH,UAAU,EAAMvM,MAAO,IACjD,CAAC0L,IAAK,qBAAsBtG,KAAM,qBAAsBmH,UAAU,EAAMvM,MAAO,KAC/E,CAAC0L,IAAK,mBAAoBtG,KAAM,mBAAoBmH,UAAU,EAAMC,OAAQwgB,GAAsBhtB,MAAO,KACzG,CAAC0L,IAAK,iBAAkBtG,KAAM,mCAAoCmH,UAAU,EAAMvM,MAAO,KACzF,CAAC0L,IAAK,uBAAwBtG,KAAM,uBAAwBmH,UAAU,EAAMvM,MAAO,KACnF,CAAC0L,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMvM,MAAO,KACvE,CAAC0L,IAAK,UAAWtG,KAAM,UAAWmH,UAAU,EAAMvM,MAAO,KACzD,CAAC0L,IAAK,iBAAkBtG,KAAM,iBAAkBmH,UAAU,EAAMvM,MAAO,KACvE,CAAC0L,IAAK,aAActG,KAAM,OAAQmH,UAAU,EAAMC,OAAQ0gB,GAAYltB,MAAO,IAC7E,CAAC0L,IAAK,eAAgBtG,KAAM,eAAgBmH,UAAU,EAAMvM,MAAO,KACnE,CAAC0L,IAAK,WAAYtG,KAAM,OAAQmH,UAAU,EAAMC,OAAQ0gB,GAAYltB,MAAO,IAC3E,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMvM,MAAO,KACjE,CAAC0L,IAAK,mBAAoBtG,KAAM,OAAQmH,UAAU,EAAMC,OAAQ0gB,GAAYltB,MAAO,IACnF,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMvM,MAAO,KACjE,CAAC0L,IAAK,gBAAiBtG,KAAM,gBAAiBmH,UAAU,EAAMvM,MAAO,KACrE,CAAC0L,IAAK,gBAAiBtG,KAAM,gBAAiBmH,UAAU,EAAMvM,MAAO,MAEnEC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtBoI,WAAY/I,EAAMW,QAAQ,GAC1B6B,SAAU,SCxBlB,ID0He+J,qBArIA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YAiIJ0M,EA7Ff,YAAwC,IAApBvJ,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAChBlC,EAAUjB,KAyBhB,OAAO,mCACH,gCACI,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,mBAIA,cAACjC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBG,MAAO,CAACC,UAAW,QAA3D,SACI,eAACwC,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQuB,YAFvB,UAII,cAAC8B,EAAA,EAAD,CAAYlC,GAAG,wBAAf,6BAEA,cAACmC,EAAA,EAAD,CACIC,QAAQ,wBACRZ,MAAOV,EAAK8L,cACZ/K,SAAU,SAAC/B,GACPiB,EAAW,CAAC6L,cAAe9M,EAAEgC,OAAON,SAJ5C,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,aAS/B,cAACrD,EAAA,EAAD,UACI,eAAC8C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQuB,YAFvB,UAII,cAAC8B,EAAA,EAAD,CAAYlC,GAAG,wBAAf,+BACA,cAACmC,EAAA,EAAD,CACIC,QAAQ,wBACRZ,MAAOV,EAAK+L,gBACZhL,SAAU,SAAC/B,GACPiB,EAAW,CAAC8L,gBAAiB/M,EAAEgC,OAAON,SAJ9C,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,aAO/B,cAAC,KAAD,CACIhF,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBAlEZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZoB,EAAWD,IA4DHgK,kBAAkB,IAGtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAnFlC,WACI5J,QAAQC,IAAI,cACZ,IACI0N,EAAM,CAAC2I,IADE7S,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IA8EP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA5ElC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA0EP,gCEhILiJ,GAAkBC,WAAlBD,eAEDnM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtB6B,SAAU,KAEdC,oBAAqB,CACjBD,SAAU,KAEd6oB,cAAe,GACfC,aAAc,CACVzrB,MAAO,OAEX6C,OAAQ,CACJH,OAAQvC,EAAMW,QAAQ,IAE1BgC,UAAW,CACPhB,UAAW3B,EAAMW,QAAQ,QA0TlBqsB,GArTe,SAAC,GAAwB,IAAvBhqB,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAE5BlC,EAAUjB,KACV6B,EAAY,CAACA,UAAW,QACxBmqB,EAAsB,CAACjsB,MAAO,OAC9BuD,EAAW,qBAAK1B,MAAO,CAAC7B,MAAO,WAC/BotB,EAAanS,EAAiBtW,KAAI,SAAA2M,GAAE,OAAIA,EAAGnM,QAAM0V,QAAO,SAAAvJ,GAAE,OAAkB,IAAdA,EAAG9K,UAEvE,OAAO,qCACH,cAAC7E,EAAA,EAAD,CAAYC,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAhF,kCAGA,cAAC9B,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,kCAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,aAAhD,wFAEA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,aACRZ,MAAOV,EAAKgN,UACZjM,SAAU,SAAC/B,GACPiB,EAAW,CAAC+M,UAAWhO,EAAEgC,OAAON,SALxC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,wBAKZ,cAACH,EAAA,EAAD,CACIC,MAAM,kBACNE,MAAOV,EAAKiN,QACZvO,MAAO,CAACqqB,YAAY,OACpBhoB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACgN,QAASjO,EAAEgC,OAAON,SAClCjC,QAAQ,gBAIhB,eAAC0C,EAAA,EAAD,CACIzC,MAAOC,EACPF,QAAQ,WACRT,UAAWD,EAAQ0B,oBAHvB,UAKI,cAAC2B,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,uBACA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,eACRZ,MAAOV,EAAKkN,OACZnM,SAAU,SAAC/B,GACPiB,EAAW,CAACiN,OAAQlO,EAAEgC,OAAON,SALrC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,uBAIR,eAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,eAAC4C,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBAFvB,UAII,cAAC2B,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,kBAAhD,uBAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,kBACRZ,MAAOV,EAAKoN,SACZrM,SAAU,SAAC/B,GACPiB,EAAW,CAACmN,SAAUpO,EAAEgC,OAAON,SALvC,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,kBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,UAAjB,2BAIR,cAACH,EAAA,EAAD,CACIC,MAAM,cACN+B,KAAK,OACL9D,QAAS,WACTiC,MAAOV,EAAKmN,WACZpM,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACkN,WAAYnO,EAAEgC,OAAON,SACrC+B,gBAAiB,CACbC,QAAQ,KAIftC,KAGL,cAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,uBAAhD,qEAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,uBACRZ,MAAOV,EAAKqN,cACZtM,SAAU,SAAC/B,GACPiB,EAAW,CAACoN,cAAerO,EAAEgC,OAAON,SAL5C,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,mBAAjB,8BACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,mBAAjB,8BACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,mBAAjB,wCAMhB,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,uBAAhD,qEAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,uBACRZ,MAAOV,EAAKsN,sBACZvM,SAAU,SAAC/B,GACPiB,EAAW,CAACqN,sBAAuBtO,EAAEgC,OAAON,SALpD,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,cAACrC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,SACI,qBAAKG,MAAOoqB,EAAZ,SACI,eAAC3nB,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQ0B,oBACnB4F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,iBAAhD,0DAGA,eAACmC,EAAA,EAAD,CACIrD,UAAWD,EAAQsqB,cACnB/mB,QAAQ,iBACRZ,MAAOV,EAAKuN,YACZxM,SAAU,SAAC/B,GACPiB,EAAW,CAACsN,YAAavO,EAAEgC,OAAON,SAL1C,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,KAAjB,0BAMhB,oBAAIhC,MAAOC,IAEX,cAACH,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,oDAIA,eAACjC,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,aACNE,MAAOV,EAAKwN,UACZzM,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACuN,UAAWxO,EAAEgC,OAAON,SACpCjC,QAAQ,aAEZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,cACNE,MAAOV,EAAKwF,WACZzE,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACuF,WAAYxG,EAAEgC,OAAON,SACrCjC,QAAQ,aAEX2B,KAGL,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAOC,EAAWZ,QAASA,EAAQ4B,UAAWpB,QAAQ,gBAAtE,UACI,cAACgC,EAAA,EAAD,CACIC,MAAM,QACNE,MAAOV,EAAKwN,UACZzM,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACuN,UAAWxO,EAAEgC,OAAON,SACpCjC,QAAQ,aAEZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,MACNE,MAAOV,EAAKiD,IACZlC,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACgD,IAAKjE,EAAEgC,OAAON,SAC9BjC,QAAQ,aAGZ,cAAC8B,EAAA,EAAD,CACIC,MAAM,QACNE,MAAOV,EAAKkD,MACZnC,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAACiD,MAAOlE,EAAEgC,OAAON,SAChCjC,QAAQ,gBAIhB,oBAAIC,MAAOC,IAEX,eAACH,EAAA,EAAD,CAAYE,MAAOC,EAAWF,QAAQ,KAAKV,QAASA,EAAQ4B,UAAWU,UAAU,KAAKC,cAAY,EAAlG,gFACuE,uBADvE,qFAKA,sBAAK5B,MAAO,CAACC,UAAW,QAAxB,UACI,cAAC,KAAD,CACIjC,QAAS,CACL,CAAC6L,IAAK,KAAMtG,KAAM,KAAMmH,UAAU,EAAMvM,MAAO,IAC/C,CACI0L,IAAK,WACLtG,KAAM,YACNmH,UAAU,EACVvM,MAAO,IACPwM,OAAQ3F,IAEZ,CACI6E,IAAK,gBACLtG,KAAM,iBACNmH,UAAU,EACVvM,MAAO,IACPwM,OAAQ3F,IAEZ,CAAC6E,IAAK,eAAgBtG,KAAM,WAAYmH,UAAU,EAAMvM,MAAO,KAC/D,CAAC0L,IAAK,WAAYtG,KAAM,WAAYmH,UAAU,EAAMvM,MAAO,KAC3D,CAAC0L,IAAK,YAAatG,KAAM,YAAamH,UAAU,EAAMvM,MAAO,KAC7D,CACI0L,IAAK,eACLtG,KAAM,WACNmH,UAAU,EACVvM,MAAO,IACPwM,OAAQ,cAAC,GAAD,CAAgBC,QA/PrB,CAAC,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,SAiQ5F,CACIf,IAAK,kBACLtG,KAAM,oBACNmH,UAAU,EACVvM,MAAO,KAEX,CACI0L,IAAK,OACLtG,KAAM,OACNmH,UAAU,EACVC,OAAQ,cAAC,GAAD,CAAgBC,QAAS2gB,IACjCptB,MAAO,MAGf2M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBAAmB,YAAyB,IAAvBC,EAAsB,EAAtBA,QAASE,EAAa,EAAbA,QACtBjL,EAAOmB,EAAKnB,KAChBA,EAAK+K,GAAL,2BAAoB/K,EAAK+K,IAAaE,GACtC7J,EAAW,CAACpB,UAEhBmL,kBAAkB,IAEtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/B,GAAyB,IAArBnG,EAAKnB,KAAKwE,OAGV,OAFArD,EAAKnB,KAAKI,KAAK,CAACkL,GAAI,SACpBlK,EAAW,CAACpB,KAAMmB,EAAKnB,OAG3B,IAAIsL,EAAKmH,SAAStR,EAAKnB,KAAKmB,EAAKnB,KAAKwE,OAAO,GAAG8G,IAChDA,IACAnK,EAAKnB,KAAKI,KAAK,CAACkL,GAAIA,IACpBlK,EAAW,CAACpB,KAAMmB,EAAKnB,QAT3B,qBAaA,cAAC4H,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAAS,WAC/BnG,EAAKnB,KAAKuL,MACVnK,EAAW,CAACpB,KAAMmB,EAAKnB,QAF3B,+BCjVGqrB,GADS,CAAC,QAAS,OAAQ,MAAM,MAAM,gBAAgB,SCCvDnsB,GADD,CAAC,QAAS,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,MAAO,IAAK,IAAK,MAAO,MAAO,MAAO,IAAK,MAAO,MAAO,IAAK,MAAO,MAAO,IAAK,IAAK,KCCjKosB,GADF,CAAC,QAAS,IAAK,KAAK,MAAM,QCCxBC,GADH,CAAC,QAAQ,IAAI,IAAI,IAAI,MCe1BnhB,GAAkBC,WAAlBD,eAeDvM,GAAU,CACZ,CAAC6L,IAAK,MAAOtG,KAAM,MAAOmH,UAAU,EAAMvM,MAAO,IACjD,CAAC0L,IAAK,mBAAoBtG,KAAM,mBAAoBmH,UAAU,EAAOvM,MAAO,KAC5E,CAAC0L,IAAK,oBAAqBtG,KAAM,oBAAqBmH,UAAU,EAAMvM,MAAO,KAC7E,CAAC0L,IAAK,oBAAqBtG,KAAM,oBAAqBmH,UAAU,EAAMvM,MAAO,IAAKwM,OARvD,cAAC,GAAD,CAAgBC,QAAS4gB,MASpD,CAAC3hB,IAAK,qBAAsBtG,KAAM,qBAAsBmH,UAAU,EAAMvM,MAAO,IAAKwM,OARhE,cAAC,GAAD,CAAgBC,QAAS+gB,MAS7C,CAAC9hB,IAAK,YAAatG,KAAM,YAAamH,UAAU,EAAMvM,MAAO,KAC7D,CAAC0L,IAAK,gBAAiBtG,KAAM,gBAAiBmH,UAAU,EAAMvM,MAAO,IAAKwM,OATlD,cAAC,GAAD,CAAgBC,QAASghB,MAUjD,CAAC/hB,IAAK,kBAAmBtG,KAAM,kBAAmBmH,UAAU,EAAMvM,MAAO,KACzE,CAAC0L,IAAK,cAAetG,KAAM,cAAemH,UAAU,EAAMvM,MAAO,KACjE,CAAC0L,IAAK,iBAAkBtG,KAAM,wBAAyBmH,UAAU,EAAMvM,MAAO,IAAKwM,OAX1D,cAAC,GAAD,CAAgBC,QAASihB,MAYlD,CAAChiB,IAAK,MAAOtG,KAAM,MAAOmH,UAAU,EAAMvM,MAAO,KACjD,CAAC0L,IAAK,yBAA0BtG,KAAM,yBAA0BmH,UAAU,EAAMvM,MAAO,KACvF,CAAC0L,IAAK,0BAA2BtG,KAAM,0BAA2BmH,UAAU,EAAMvM,MAAO,KACzF,CAAC0L,IAAK,oBAAqBtG,KAAM,oBAAqBmH,UAAU,EAAMvM,MAAO,MAmGlE0M,iBA9HA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YA0HJ0M,EA9FC,SAAC,GAAmC,IAAlCvJ,EAAiC,EAAjCA,KAAMwqB,EAA2B,EAA3BA,UAAWvqB,EAAgB,EAAhBA,WAC/B,EAAkCyoB,mBAAS,CAAC9P,MAAM,EAAOC,MAAO,GAAI8P,SAAU,UAA9E,mBAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAAO,mCACH,gCACI,cAACrqB,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,6BAIA,cAAC0oB,GAAA,EAAD,CAAUC,GAAIL,EAAUhQ,KAAMla,MAAO,CAACC,UAAW,QAAjD,SACI,cAACuqB,GAAA,EAAD,CACIP,SAAUC,EAAUD,SACpBQ,OACI,cAACrjB,EAAA,EAAD,CACII,aAAW,QACXD,MAAM,UACNmjB,KAAK,QACLjjB,QAAS,WACL0iB,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,WALxD,SAQI,cAAC,KAAD,CAAWU,SAAS,cAXhC,SAeKT,EAAU/P,UAGnB,cAAC,KAAD,CACInc,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBAAmB,YAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACjCvN,QAAQC,IAAI,YAAaoN,EAAS,WAAYC,EAAO,gBAAiBC,GAGtE,IAFA,IAAMjL,EAAOmB,EAAKnB,KAF4B,WAIrC4K,GACL,IAAIhI,EAAO5C,EAAK4K,GAChB,GAAIK,EAAQyf,eAAe,OAAQ,CAC/B9nB,EAAKoR,IAAM/I,EAAQ+I,IAEnB,IAAI4X,EAAYD,EAAU3rB,KAAKqP,MAAK,SAAU+C,GAE1C,OADA1U,QAAQC,IAAI,cAAe8U,SAASL,EAAQ4B,KAAM,QAASvB,SAAS7P,EAAKoR,MAClEvB,SAASL,EAAQ4B,OAASvB,SAAS7P,EAAKoR,QAGnD,GADAtW,QAAQC,IAAI,aAAciuB,IACrBA,EASD,OARAhpB,EAAKoR,IAAM,GACXgW,EAAa,CACTjQ,MAAM,EACNC,MAAO,qBAAuBpX,EAAKoR,IAC7B,kFACN8V,SAAU,UAEdvC,YAAW,kBAAMyC,EAAa,CAACjQ,MAAM,EAAOC,MAAO,GAAI8P,SAAU,YAAW,KAC5E,WAEAlnB,EAAK6S,iBAAmBmW,EAAUxX,eAClC1W,QAAQC,IAAI,iBAAkBiF,GAC9BA,EAAI,2BAAOA,GAASqI,QAIxBrI,EAAI,2BAAOA,GAASqI,GAExBjL,EAAK4K,GAAKhI,GA7BLgI,EAAIG,EAASH,GAAKI,EAAOJ,IAAK,EAA9BA,GA+BTxJ,EAAW,CAACpB,KAAMA,KAGtBmL,kBAAkB,IAGtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAnFlC,WACI5J,QAAQC,IAAI,cAEZwD,EAAKnB,KAAKI,KADA,IAEVgB,EAAWD,IA+EP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA7ElC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IA2EP,gC,UNxHLiJ,GAAkBC,WAAlBD,eAWHyhB,GAAiB,CAAC,gBACbjhB,GAAI,EAAGA,GAAIe,OAAOC,KAAKkgB,IAAYtnB,OAAQoG,KAAK,CACrD,IAAImhB,GAAqBpgB,OAAOC,KAAKkgB,IAAYlhB,IAAK,MAAQe,OAAOK,OAAO8f,IAAYlhB,IACxFihB,GAAezrB,KAAK2rB,IAExB,IAAMC,GAAmB,cAAC,GAAD,CAAgBvhB,QAASohB,KAC5CvhB,GAAQ,CAAC,SACf9G,EAAYb,KAAI,SAACY,GAAD,OACZ+G,GAAMlK,KAAKmD,EAAKJ,KAAO,MAAQI,EAAKE,YAAc,MAAQF,EAAKH,SAEnE,IACMvF,GAAU,CACZ,CAAC6L,IAAK,KAAMtG,KAAM,MAAOmH,UAAU,EAAMvM,MAAO,IAChD,CAAC0L,IAAK,YAAatG,KAAM,aAAcmH,UAAU,EAAMvM,MAAO,IAAKwM,OAAQwhB,IAC3E,CAACtiB,IAAK,mBAAoBtG,KAAM,mCAAoCmH,UAAU,EAAMvM,MAAO,KAC3F,CAAC0L,IAAK,qBAAsBtG,KAAM,4BAA6BmH,UAAU,EAAMvM,MAAO,KACtF,CAAC0L,IAAK,aAActG,KAAM,0CAA2CmH,UAAU,EAAMvM,MAAO,KAC5F,CAAC0L,IAAK,cAAetG,KAAM,gCAAiCmH,UAAU,EAAMvM,MAAO,KACnF,CACI0L,IAAK,iBACLtG,KAAM,sCACNmH,UAAU,EACVvM,MAAO,IACPwM,OAbW,cAAC,GAAD,CAAgBC,QAASH,MAexC,CAACZ,IAAK,iBAAkBtG,KAAM,iDAAkDmH,UAAU,EAAMvM,MAAO,MAErGC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCsC,YAAa,CACTC,OAAQvC,EAAMW,QAAQ,GACtBoI,WAAY/I,EAAMW,QAAQ,GAC1B6B,SAAU,SA8HH+J,qBAtKA,SAACvM,GAAD,MAAY,CACvBC,KAAM,CACF,QAAS,CACLsC,OAAQvC,EAAMW,QAAQ,GACtBd,MAAO,YAkKJ0M,EAzHf,YAAwC,IA2BX1J,EA3BTG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAChBlC,EAAUjB,KA+BhB,OAAO,mCACH,gCACI,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAApD,+BAGA,qBAAK5B,MAnCe,CAAC7B,MAAO,OAmC5B,SACI,eAACsE,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQuB,YACnB+F,WAAS,EAHb,UAKI,cAACjE,EAAA,EAAD,CAAYpD,UAAWD,EAAQuqB,aAAcppB,GAAG,eAAhD,8FAEA,eAACmC,EAAA,EAAD,CACIC,QAAQ,eACRZ,MAAOV,EAAK2N,oBACZ3P,UAAWD,EAAQsqB,cACnBtnB,SAAU,SAAC/B,GACPiB,EAAW,CAAC0N,oBAAqB3O,EAAEgC,OAAON,SALlD,UAQI,cAACmB,EAAA,EAAD,CAAUnB,MAAO,MAAjB,iBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,kBACA,cAACmB,EAAA,EAAD,CAAUnB,MAAO,OAAjB,0BAIZ,cAAClC,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAK3B,MAAO,CAACC,UAAW,QAAS2B,cAAY,EAACtC,UAAWD,EAAQuB,YAApG,wEAGA,qBAAKtB,UAAW,cAAhB,SACI,eAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgBG,MAAO,CAAC7B,MAAO,OAAvD,UACI,eAACsE,EAAA,EAAD,CACI1C,QAAQ,WACRT,UAAWD,EAAQuB,YACnBC,OAAQ,SAHZ,UAKI,cAAC6B,EAAA,EAAD,CAAYlC,GAAG,kBAAf,kBAEA,cAACmC,EAAA,EAAD,CACIC,QAAQ,sBACRZ,MAAOV,EAAK4N,kBACZ7M,SAAU,SAAC/B,GACPiB,EAAW,CAAC2N,kBAAmB5O,EAAEgC,OAAON,SAJhD,SAOK2B,EAAYb,KAAI,SAACY,EAAMV,GAAP,OACb,cAACG,EAAA,EAAD,CAAsBnB,MAAK,UAAK0B,EAAKJ,MAArC,mBACQI,EAAKJ,KADb,cACuBI,EAAKE,YAD5B,cAC6CF,EAAKH,OADnCP,WAO3B,cAACnB,EAAA,EAAD,CACIC,MAAM,OACN+B,KAAK,OACL7D,MAAO,CAACc,SAAU,SAClBf,QAAS,WACTT,UAAWD,EAAQuB,YACnBoB,OAjEKb,EAiEkBG,EAAK6N,uBAhE5ChO,EAAO,GAAKA,GACAC,OAAO,EAAG,KAgENiB,SAAU,SAAC/B,GAAD,OACNiB,EAAW,CAAC4N,sBAAuB7O,EAAEgC,OAAON,SAChD+B,gBAAiB,CACbC,QAAQ,UAMxB,cAAClE,EAAA,EAAD,CAAYC,QAAQ,KAAK4B,UAAU,KAAKC,cAAY,EAAC5B,MAAO,CAACC,UAAW,QAASX,UAAWD,EAAQuB,YAApG,yBAGA,cAAC,KAAD,CACI5C,QAASA,GACT8M,UAAW,SAAAC,GAAC,OAAIzJ,EAAKnB,KAAK4K,IAC1BC,UAAW1J,EAAKnB,KAAKwE,OACrBsG,kBA5FZ,YAGI,IAHmD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAElCjL,EAAOmB,EAAKnB,KAAKkL,QACdN,EAAIG,EAASH,GAAKI,EAAOJ,IAC9B5K,EAAK4K,GAAL,2BAAc5K,EAAK4K,IAAOK,GAE9B9J,EAAKnB,KAAOA,EACZoB,EAAWD,IAsFHgK,kBAAkB,IAGtB,cAACvD,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QA7GlC,WACI5J,QAAQC,IAAI,cACZ,IACI0N,EAAM,CAACC,GADEnK,EAAKnB,KAAKwE,OAAS,GAEhCrD,EAAKnB,KAAKI,KAAKiL,GACfjK,EAAWD,IAwGP,qBACA,cAACyG,EAAA,EAAD,CAAQhI,QAAQ,UAAU0H,QAtGlC,WACInG,EAAKnB,KAAKuL,MACVnK,EAAWD,IAoGP,gCOzIN8qB,GAAgBC,GAKhBC,GAAc3f,GAAyB,IAAM,IAE7CvO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQJ,EAAMI,OAAOC,OAAS,GAElCA,OAAQ,CACJR,MAAOmuB,GACPC,WAAY,GAEhBC,YAAa,CACTruB,MAAOmuB,IAEX1tB,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASV,EAAMW,QAAQ,IAE3BC,WAAY,CACRV,QAAS,YAoOjB,SAASiuB,GAAkBC,EAA3B,EAAwDxZ,GAAW,IAAD,mBAA1B5R,EAA0B,KAApBqrB,EAAoB,KAC1DC,EAAeR,GAAcM,GAAY1qB,MACzCR,EAAiBoR,SAASM,EAAShQ,MAAM,KAAK,IAGlD,OAFA1B,IAEQorB,GACJ,IAAK,OAED,OAAO,cAAC,EAAD,CAAUprB,eAAgBA,EAAgBF,KAAMA,EAAKoC,KAAMnC,WAAY,SAACsrB,GAC3EF,EAAQ,2BAAIrrB,GAAL,IAAWoC,KAAK,2BAAKpC,EAAKoC,MAASmpB,SAElD,IAAK,QACD,OAAO,cAAC,EAAD,CAAmBrrB,eAAgBA,EAAgBF,KAAMA,EAAKY,KAAMX,WAAY,SAACsrB,GACpFF,EAAQ,2BAAIrrB,GAAL,IAAWY,KAAK,2BAAKZ,EAAKY,MAAS2qB,SAElD,IAAK,SACD,OAAO,cAAC,GAAD,CAAYvrB,KAAMA,EAAK0L,OAAQzL,WAAY,SAACsrB,GAC/CF,EAAQ,2BAAIrrB,GAAL,IAAW0L,OAAO,2BAAK1L,EAAK0L,QAAW6f,SAEtD,IAAK,OACD,OAAO,cAAC,GAAD,CAAUvrB,KAAMA,EAAKyH,KAAMxH,WAAY,SAACsrB,GAC3CF,EAAQ,2BAAIrrB,GAAL,IAAWyH,KAAK,2BAAKzH,EAAKyH,MAAS8jB,SAElD,IAAK,aACD,OAAO,cAAC,GAAD,CAAgBvrB,KAAMA,EAAK0H,WAAYzH,WAAY,SAACsrB,GACvDF,EAAQ,2BAAIrrB,GAAL,IAAW0H,WAAW,2BAAK1H,EAAK0H,YAAe6jB,SAE9D,IAAK,cACD,OAAO,cAAC,GAAD,CAAgBvrB,KAAMA,EAAK2L,WAAY1L,WAAY,SAACsrB,GACvDF,EAAQ,2BAAIrrB,GAAL,IAAW2L,WAAW,2BAAK3L,EAAK2L,YAAe4f,SAE9D,IAAK,eACD,OAAO,cAAC,GAAD,CAAiBvrB,KAAMA,EAAK4L,YAAa4c,SAAUxoB,EAAKyH,KAAMxH,WAAY,SAACsrB,GAC9EF,EAAQ,2BAAIrrB,GAAL,IAAW4L,YAAY,2BAAK5L,EAAK4L,aAAgB2f,SAEhE,IAAK,QACD,OAAO,cAAC,GAAD,CAAWvrB,KAAMA,EAAK6L,MAAO5L,WAAY,SAACsrB,GAC7CF,EAAQ,2BAAIrrB,GAAL,IAAW6L,MAAM,2BAAK7L,EAAK6L,OAAU0f,SAEpD,IAAK,SACD,OAAO,cAAC,GAAD,CACHvrB,KAAMA,EAAKgM,OACXwc,SAAUxoB,EAAKyH,KACfghB,cAAezoB,EAAK0H,WACpBzH,WAAY,SAACsrB,GACT,IAAIvf,EAAS3F,KAAKC,MAAMD,KAAKE,UAAUvG,EAAKgM,SAC5Cqf,EAAQ,2BAAIrrB,GAAL,IAAWgM,OAAO,2BAAKA,GAAWuf,SAErD,IAAK,kBACD,OAAO,cAAC,GAAD,CACHvrB,KAAMA,EAAKyN,IACX+c,UAAWxqB,EAAK6L,MAChB5L,WAAY,SAACsrB,GACT,IAAI9d,EAAMpH,KAAKC,MAAMD,KAAKE,UAAUvG,EAAKyN,MACzC4d,EAAQ,2BAAIrrB,GAAL,IAAWyN,IAAI,2BAAKA,GAAQ8d,SAE/C,IAAK,WACD,OAAO,cAAC,GAAD,CACHvrB,KAAMA,EAAK+M,SACX9M,WAAY,SAACsrB,GACT,IAAIxe,EAAW1G,KAAKC,MAAMD,KAAKE,UAAUvG,EAAK+M,WAC9Cse,EAAQ,2BAAIrrB,GAAL,IAAW+M,SAAS,2BAAKA,GAAawe,SAEzD,IAAK,QACD,OAAO,cAACC,GAAD,CACHxrB,KAAMA,EAAK0N,MACXzN,WAAY,SAACsrB,GACT,IAAI7d,EAAQrH,KAAKC,MAAMD,KAAKE,UAAUvG,EAAK0N,QAC3C2d,EAAQ,2BAAIrrB,GAAL,IAAW0N,MAAM,2BAAKA,GAAU6d,SAEnD,QACI,OAAO,oDAIflgB,KACAib,OAAOmF,OAAS,WACZnF,OAAOoF,iBAAiB,gBAAgB,SAAU1sB,GAC9C,IAAM2sB,EAAsB,wGAI5B,OADC3sB,GAAKsnB,OAAOsF,OAAOC,YAAcF,EAC3BA,OAIJG,OAtTf,YAAiC,IACvBla,EADsB,EAAV9T,QACO8T,SAASma,SAC5BhuB,EAAUjB,KAChB,EAAoC4rB,mBAASoC,GAAc3O,QAAQ2O,GAAc5c,MAAK,SAAAC,GAAE,MAjCtE,SAiC0EA,EAAG3N,WAA/F,mBAAO4qB,EAAP,KAAmBY,EAAnB,KAEA,EAAwBtD,mBAASuD,IAAjC,mBAAOjsB,EAAP,KAAaqrB,EAAb,KACA,EAA8C3C,mBAAS,CAAC9P,MAAM,EAAOC,MAAO,KAA5E,mBAAOqT,EAAP,KAAwBxT,EAAxB,KAGA,OADAnc,QAAQC,IAAI,6BAA8BwD,GAEtC,sBAAKhC,UAAWD,EAAQd,KAAxB,UACI,cAACgB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWD,EAAQZ,OAA5C,SACI,cAACiB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,gBAAzB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0BAGA,8BACI,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,aAAzB,UACI,sBAAKG,MAAO,CAACqqB,YAAa,QAA1B,UACI,uBACI/qB,UAAWD,EAAQH,WACnBmD,SAAU,WACN,IAAMuV,EAAOoP,SAASyG,eAAe,iBAAiB1T,MAAM,GACtD2T,EAAS,IAAIC,WACnBD,EAAOX,OAAU,WACb,IACI,MAYI5V,GAAQuW,EAAOE,QAXflqB,EADJ,EACIA,KACAqF,EAFJ,EAEIA,KACA7G,EAHJ,EAGIA,KACA8G,EAJJ,EAIIA,WACAgE,EALJ,EAKIA,OACAC,EANJ,EAMIA,WACAK,EAPJ,EAOIA,OACAJ,EARJ,EAQIA,YACAC,EATJ,EASIA,MACA4B,EAVJ,EAUIA,IACAC,EAXJ,EAWIA,MAEA6e,EAAWlmB,KAAKC,MAAMD,KAAKE,UAAUvG,IAEzCqrB,EAAQ,2BACDkB,GAAa,CACZnqB,OACAqF,OACA7G,OACA8G,aACAgE,SACAC,aACAK,SACAJ,cACAC,QACA4B,MACAC,WAGV,MAAO1O,GACL0Z,EAAmB,CACfE,MAAM,EAAMC,MAAO,CACfC,MAAO,0BACPC,KAAM/Z,KAGdzC,QAAQsc,MAAM7Z,KAGtBotB,EAAOI,WAAWlW,IAEtBpX,GAAG,gBACHqD,KAAK,SAET,uBAAOkqB,QAAQ,gBAAf,SACI,cAAChmB,EAAA,EAAD,CACIhI,QAAQ,YACRwH,MAAM,UACN5F,UAAU,OACVuG,UAAW,cAAC,KAAD,IAJf,6BAUR,sBAAKlI,MAAO,CAACqqB,YAAa,QAA1B,UACI,uBACI/qB,UAAWD,EAAQH,WACnBsB,GAAG,aACHwtB,UAAQ,EACR3rB,SAAU,WACN,IAAM0X,EAAQiN,SAASyG,eAAe,cAAc1T,MAEpDD,GAAQC,EAAOC,GAAoB,SAACjX,GAChC,IAAI8qB,EAAWvsB,EACfusB,EAAQ,2BAAOA,GAAa,CAAC9qB,SAC7BlF,QAAQC,IAAI,uBAAwB+vB,GAEpClB,EAAQkB,OAIhBhqB,KAAK,SAET,uBAAOkqB,QAAQ,aAAf,SACI,cAAChmB,EAAA,EAAD,CACIhI,QAAQ,YACRwH,MAAM,UACN5F,UAAU,OACVuG,UAAW,cAAC,KAAD,IAJf,+BAUR,cAACH,EAAA,EAAD,CACIhI,QAAQ,YACRwH,MAAM,UACN5F,UAAU,OACV8F,QAAS,WAyBLqgB,GAAUxmB,GAxBM,SAAC0mB,GACbnqB,QAAQC,IAAI,eAAgBkqB,GAC5B,IAAIiG,EAAgB,GACpB,IAAK,IAAIC,KAASlG,EACd,GAAKA,EAAO6C,eAAeqD,KAAUhF,KAAEC,QAAQnB,EAAO,GAAKkG,IAA3D,CAEA,IAAK,IAAIjwB,KADTgwB,EAAc1tB,KAAd,gBAA4B2tB,EAA5B,MACkBlG,EAAO,GAAKkG,GACrBlG,EAAO,GAAKkG,GAAOrD,eAAe5sB,KACH,mBAAzB+pB,EAAOkG,GAAOjwB,GACrBgwB,EAAc1tB,KAAd,kBAAyBtC,EAAzB,cAEAgwB,EAAc1tB,KAAd,kBAAyBtC,EAAzB,wBAGRgwB,EAAc1tB,KAAK,IAEvByZ,EAAmB,CACfE,MAAM,EACNC,MAAO,CACHC,MAAO,yCACPC,KAAM4T,SAMtB/lB,UAAW,cAAC,KAAD,IA/Bf,2CAyCpB,eAACimB,EAAA,EAAD,CACI7uB,UAAWD,EAAQV,OACnBoB,QAAQ,YACRV,QAAS,CACL+uB,MAAO/uB,EAAQmtB,aAJvB,UAOI,cAAC9sB,EAAA,EAAD,IACA,qBAAKJ,UAAWD,EAAQT,gBAAxB,SACI,cAACyvB,EAAA,EAAD,UACKjC,GAActpB,KAAI,SAACC,EAAMC,GAAP,OACf,eAACsrB,EAAA,EAAD,CAEIttB,QAAM,EACNuG,MAAO,UACP4C,SAAUuiB,IAAe1pB,EACzByE,QAAS,WACL6lB,EAActqB,IANtB,UASM2J,IAA0B5J,EAAKqM,MAAS,cAACmf,EAAA,EAAD,UAAexrB,EAAKqM,OAC9D,cAACof,EAAA,EAAD,CAAcC,QAAS1rB,EAAKjB,UATvBkB,aAgBzB,uBAAM1D,UAAWD,EAAQP,QAAzB,UACI,cAACY,EAAA,EAAD,IACC+sB,GAAkBC,EAAY,CAACprB,EAAMqrB,GAAUzZ,MAGpD,eAACwb,GAAA,EAAD,CACIxU,KAAMsT,EAAgBtT,KACtByU,QAAS,kBAAM3U,EAAmB,CAC9BE,MAAM,EACNC,MAAO,CAACE,KAAM,OAElBuU,kBAAgB,qBAChBC,mBAAiB,2BAPrB,UASI,cAACC,GAAA,EAAD,CAAatuB,GAAG,qBAAhB,SAAsCgtB,EAAgBrT,MAAMC,QAC5D,cAAC2U,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAmBxuB,GAAG,2BAAtB,SAESyuB,MAAMC,QAAQ1B,EAAgBrT,MAAME,MAEjCmT,EAAgBrT,MAAME,KAAKvX,KAAI,SAAC2M,GAAD,OAAQ,qCAAGA,EAAG,6BAC3C+d,EAAgBrT,MAAME,SAKxC,cAAC8U,GAAA,EAAD,UACI,cAACpnB,EAAA,EAAD,CACIN,QAAS,kBAAMuS,EAAmB,CAC9BE,MAAM,EACNC,MAAO,MAEX5S,MAAM,UAAU6nB,WAAS,EAL7B,iCCzRCC,G,4JAEjB,WACI,OAAO,iE,GAHuBhlB,IAAMC,WCUtClL,GAAUkwB,cAEKC,G,4JAEjB,WACI,OACI,cAAC,IAAD,CAAQnwB,QAASA,GAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOowB,KAAM,IAAKC,OAAK,EAAC9tB,UAAWxC,IACnC,cAAC,IAAD,CAAOqwB,KAAM,eAAgB7tB,UAAWyrB,KACxC,cAAC,IAAD,CAAOoC,KAAM,gBAAiBC,OAAK,EAAC9tB,UAAWxC,IAC/C,cAAC,IAAD,CAAOqwB,KAAM,2BAA4BC,OAAK,EAAC9tB,UAAWxC,IAC1D,cAAC,IAAD,CAAOwC,UAAW0tB,c,GAVChlB,IAAMC,WCV7CN,IAAS0lB,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ3I,SAASyG,eAAe,U","file":"static/js/main.8de97a37.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport shipCallsData from './../config/JSON/shipCallsData.json'\r\n\r\n\r\nconsole.log('COlumn data: ', shipCallsData)\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'ship',\r\n        headerName: 'Ship',\r\n        width: 130,\r\n    },\r\n    {\r\n        field: 'imo',\r\n        headerName: 'IMO',\r\n        width: 110,\r\n    },\r\n    {\r\n        field: 'portCall',\r\n        headerName: 'Port call',\r\n        width: 160,\r\n    },\r\n    {\r\n        field: 'agent',\r\n        headerName: 'Agent',\r\n        width: 150,\r\n    },\r\n    {\r\n        field: 'ETA',\r\n        headerName: 'ETA',\r\n        width: 150,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship calls\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '50px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '805px', height: '500px'}}>\r\n                        <DataGrid\r\n                            rows={shipCallsData}\r\n                            columns={columns}\r\n                            pageSize={7}\r\n                            onRowClick={ (e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MainPageInfo from './../../config/JSON/shipCallsData.json'\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData, locationNumber}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={MainPageInfo[locationNumber].ship}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                value={MainPageInfo[locationNumber].imo}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Ship state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\nimport MainPageInfo from './../../config/JSON/shipCallsData.json'\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData, locationNumber}) {\r\n    const classes = useStyles();\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    const portOfCall = MainPageInfo[locationNumber].portCall;\r\n    let eta = MainPageInfo[locationNumber].ETA;\r\n    if (eta.split('.').length !== 0) {\r\n        let dates = eta.split('.');\r\n        if (dates[0].length !== 2) {\r\n            eta = `${dates[0]}-${dates[1]}-${dates[2]}T00:00`;\r\n        } else {\r\n            eta = `${dates[2]}-${dates[1]}-${dates[0]}T00:00`;\r\n        }\r\n    }\r\n    const companyName = MainPageInfo[locationNumber].agent;\r\n\r\n    console.log('port of call', portOfCall)\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\">\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={portOfCall}\r\n                    // onChange={(e) => {\r\n                    //     updateData({portOfCall: e.target.value})\r\n                    // }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(eta)}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                contentEditable={false}\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                <MenuItem value={'No'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '15px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={companyName}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: datePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: datePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    }\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: true,\r\n    addOnCloseEvent: false,\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        ETDPortOfCall: '',\r\n        ATAPortOfCall: '',\r\n        ATDPortOfCall: '',\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n    waste: {\r\n        WasteDeliveryStatus:'',\r\n        LastPortDelivered:'',\r\n        LastPortDeliveredDate:'',\r\n        rows: [\r\n            {NR: 1}\r\n        ]\r\n    },\r\n}\r\n","import DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CompareArrowsIcon from '@material-ui/icons/CompareArrows';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships',\r\n        icon: <DirectionsBoatIcon/>\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew',\r\n        icon: <WorkIcon/>\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers',\r\n        icon: <GroupIcon/>\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage',\r\n        icon: <CompareArrowsIcon/>\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores',\r\n        icon: <StorageIcon/>\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects',\r\n        icon: <AssignmentIndIcon/>\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo',\r\n        icon: <LocalShippingIcon/>\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health',\r\n        icon: <LocalHospitalIcon/>\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods',\r\n        icon: <WarningIcon/>\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security',\r\n        icon: <SecurityIcon/>\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste',\r\n        icon: <DeleteIcon/>\r\n    }\r\n];","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children.find( el=> el.name === 'CallPurposeCode').value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.validISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","const readWasteXML = (waste, xml) => {\r\n    let WasteInformation = xml.getElementsByTagName('WasteInformation');\r\n    waste.rows = [];\r\n    try {\r\n\r\n        try {\r\n            waste.LastPortDelivered = WasteInformation[0].children.find(el => el.name === \"LastPortDelivered\").children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n        } catch (e) {\r\n            waste.LastPortDelivered = '';\r\n        }\r\n\r\n        waste.WasteDeliveryStatus = WasteInformation[0].children.find(el => el.name === \"WasteDeliveryStatus\").value;\r\n        waste.LastPortDeliveredDate = WasteInformation[0].children.find(el => el.name === \"LastPortDeliveredDate\").value;\r\n\r\n        let WasteDisposalInformation = xml.getElementsByTagName('WasteDisposalInformation');\r\n        if (WasteDisposalInformation.length > 0) {\r\n            for (let i = 0; i < WasteDisposalInformation.length; i++) {\r\n                let information = WasteDisposalInformation[i];\r\n                if (information) {\r\n                    try {\r\n                        let Seq = i + 1;\r\n                        let WasteType = information.children.find(el => el.name === \"WasteType\").children[0].value + \" : \" + information.children.find(el => el.name === \"WasteType\").children[1].value;\r\n                        let WasteToBeDelivered = information.children.find(el => el.name === \"ToBeDelivered\").value;\r\n                        let MaxStorage = information.children.find(el => el.name === \"MaxStorage\").value;\r\n                        let WasteAmount = information.children.find(el => el.name === \"RetainedOnboard\").value;\r\n                        let EstimatedWaste = information.children.find(el => el.name === \"EstimateGenerated\").value;\r\n                        let PortOfDelivery = information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'UNLoCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'CountryCode').value + \" - \" + information.children.find(el => el.name === \"DisposedOfInPort\").children.find(el => el.name === 'Name').value;\r\n                        ;\r\n                        let row = {\r\n                            NR: Seq,\r\n                            WasteToBeDelivered: WasteToBeDelivered,\r\n                            WasteType: WasteType,\r\n                            MaxStorage: MaxStorage,\r\n                            WasteAmount: WasteAmount,\r\n                            EstimatedWaste: EstimatedWaste,\r\n                            PortOfDelivery: PortOfDelivery,\r\n                        }\r\n\r\n                        waste.rows.push(row)\r\n                    } catch (e) {\r\n                        console.log(e)\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n\r\n};\r\n\r\nexport default readWasteXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\nimport readWasteXML from \"./readWasteXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n    readWasteXML(data.waste, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        for (let i = 4; i < rows.length; i++) {\r\n            // skip the line if the field is not filled in\r\n            if (!rows[i][2]) continue;\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            if (!rows[i][2]) continue;\r\n\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            // let date = rows[i][4];\r\n            let date = \"\";\r\n            if (rows[i][4] != null) {\r\n                date = moment(rows[i][4]).format(\"DD/MM/YYYY\")\r\n            }\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = ''\r\n            if (rows[i][8] != null) {\r\n                symptomsDate = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport moment from \"moment\";\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        if (rows[7][7] != null) {\r\n            security.expiryDate = moment(rows[7][7]).format(\"YYYY-MM-DD\")\r\n        }\r\n        security.securityLevel = rows[11][4];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = '';\r\n            if (rows[i][2] != null) {\r\n                dateFrom = moment(rows[i][2]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let dateDeparture = '';\r\n            if (rows[i][3] != null) {\r\n                dateDeparture = moment(rows[i][3]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nfunction readXLSWaste(file, onSave) {\r\n    data.waste.rows = [];\r\n    data.waste.WasteDeliveryStatus = '';\r\n    data.waste.LastPortDelivered = '';\r\n    data.waste.LastPortDeliveredDate = '';\r\n    let waste = data.waste;\r\n    readXlsxFile(file).then((rows) => {\r\n\r\n        data.waste.WasteDeliveryStatus = rows[2][3];\r\n        data.waste.LastPortDelivered = rows[9][2];\r\n        if (rows[9][4] != null) {\r\n            data.waste.LastPortDeliveredDate = moment(rows[9][4]).format(\"YYYY-MM-DD\");\r\n        }\r\n\r\n\r\n        for (let i = 14; i < 23; i++) {\r\n            let Port = '';\r\n            if (rows[i]) {\r\n                Port = listOfPortsConst.find(function (element) {\r\n                    return element.code === rows[i][6];\r\n                });\r\n\r\n\r\n                let Port_formatted = ''\r\n                if (Port) {\r\n                    Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    PortOfDelivery: Port_formatted,\r\n                    WasteType: rows[i][1],\r\n                    WasteToBeDelivered: rows[i][3],\r\n                    MaxStorage: rows[i][4],\r\n                    WasteAmount: rows[i][5],\r\n                    EstimatedWaste: rows[i][7],\r\n                }\r\n                waste.rows.push(row)\r\n            }\r\n        }\r\n\r\n        onSave({waste});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSWaste;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\nimport readXLSWaste from \"./readXLSWaste\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                } else if (name === \"waste information\") {\r\n                    readXLSWaste(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/JSON/listOfPorts'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    if (port.position.latitude || port.position.longitude || port.position.time) {\r\n        EPCRequestBody.push({\r\n            EntryPosition: [\r\n                {\r\n                    Position: [\r\n                        {Latitude: port.position.latitude},\r\n                        {Longitude: port.position.longitude},\r\n                        {Time: port.position.time}\r\n                    ]\r\n                }]\r\n        })\r\n    }\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport const checkRequiredPort = (errors, data) => {\r\n    errors.Port = {};\r\n\r\n    if (!data.arrivalDeparture) errors.Port['Departure/Arrival'] = true;\r\n    if (!data.portOfCall) errors.Port[\"Port of call\"] = true;\r\n    if (data.position.latitude || data.position.longitude || data.position.time) {\r\n        if (!data.position.latitude) errors.Port['Latitude'] = true;\r\n        if (!data.position.longitude) errors.Port['Longitude'] = true;\r\n        if (!data.position.time) errors.Port['Position time'] = true;\r\n    }\r\n    if (!data.nameOfMaster.givenName) errors.Port['Master`s Given name'] = true;\r\n    if (!data.nameOfMaster.familyName) errors.Port['Master`s Family name'] = true;\r\n    if (!data.agent.company) errors.Port['Company name'] = true;\r\n    if (!data.personsOnBoard.numberOfPersonsOnBoard) errors.Port['Number of persons'] = true;\r\n}\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nexport const checkRequiredCrew = (errors, data) => {\r\n    errors.Crew = {};\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Family_name) errors.Crew['Family name'] = [];\r\n            if (!el.Given_name) errors.Crew['Given name'] = [];\r\n            if (!el.Rank_of_rating) errors.Crew['Rank of rating'] = [];\r\n            if (!el.date_of_birth) errors.Crew['Date of birth'] = [];\r\n            if (!el.Country_of_birth) errors.Crew['Country of birth'] = [];\r\n            if (!el.Place_of_birth) errors.Crew['Place of birth'] = [];\r\n            if (!el.Nationality) errors.Crew['Nationality'] = [];\r\n            if (!el.ID_type) errors.Crew['ID type'] = [];\r\n            if (!el.ID_document_number) errors.Crew['ID document number'] = [];\r\n        })\r\n    }\r\n}\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (parseInt(RankOfRatingCode) === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredShip = (errors, data) => {\r\n    errors.Ships = {};\r\n    if (data.port || data.issueDate || data.certificateNumber) {\r\n        if (!data.port) errors.Ships['Port'] = true;\r\n        if (!data.issueDate) errors.Ships['Date of issue'] = true;\r\n        if (!data.certificateNumber) errors.Ships['Number'] = true;\r\n    }\r\n}\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    if (shipPort) {\r\n        EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        })\r\n    }\r\n    EPCRequestBody.push(\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredPassengers = (errors, data) => {\r\n    errors.Passengers = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Family_name) errors.Passengers['Family name'] = [];\r\n            if (!el.Given_name) errors.Passengers['Given name'] = [];\r\n            if (!el.date_of_birth) errors.Passengers['Date of birth'] = [];\r\n            if (!el.Country_of_birth) errors.Passengers['Country of birth'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of birth'] = [];\r\n            if (!el.Nationality) errors.Passengers['Nationality'] = [];\r\n            if (!el.ID_type) errors.Passengers['ID type'] = [];\r\n            if (!el.ID_document_number) errors.Passengers['ID document number'] = [];\r\n            if (!el.Place_of_birth) errors.Passengers['Place of rating'] = [];\r\n            if (!el.Port_of_embarkation) errors.Passengers['Port of embarkation'] = [];\r\n            if (!el.Port_of_disembarkation) errors.Passengers['Port of disembarkation'] = [];\r\n            if (!el.Transit) errors.Passengers['Transit'] = [];\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredVoyage = (errors, data) => {\r\n    errors.Voyage = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Port) errors.Voyage.Port = [];\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","export const checkRequiredHealth = (errors, data) => {\r\n    errors.Health = {};\r\n\r\n    data.illList.forEach(el => {\r\n        if (!el.NR) errors.Health['NR'] = [];\r\n        if (!el.crewPassenger) errors.Health['Crew or passenger'] = [];\r\n    });\r\n\r\n}\r\nconst generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({\r\n            CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]\r\n        });\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nexport const checkRequiredCrewEffects = (errors, data) => {\r\n    errors.Crew_effects = {};\r\n\r\n    console.log(\"data.rows \", data.rows)\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {}\r\n    ]) && JSON.stringify(data.rows) !== JSON.stringify([\r\n        {NR: '', Family_name: '', Given_name: '', Rank_of_rating: ''}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.NR) errors.Crew_effects['NR'] = [];\r\n            if (!el.Effects_description) errors.Crew_effects['Effects description'] = [];\r\n        });\r\n    }\r\n\r\n}\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (parseInt(RankOfRatingCode) === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredDangerous = (errors, data) => {\r\n    errors.Dangerous_goods = {};\r\n\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.Textual_reference) errors.Dangerous_goods['Textual reference'] = [];\r\n            if (!el.DG_Classification) errors.Dangerous_goods['DG Classification'] = [];\r\n        })\r\n    }\r\n}\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    if (portOfLoading) {\r\n        Consignment.push({\r\n            PortOfLoading: [\r\n                {\r\n                    Port: [\r\n                        {Name: portOfLoading.name},\r\n                        {CountryCode: portOfLoading.countryCode},\r\n                        {UNLoCode: portOfLoading.code}\r\n                    ]\r\n                }]\r\n        });\r\n    }\r\n\r\n    if (portOfDischarge) {\r\n        Consignment.push({\r\n            PortOfDischarge: [\r\n                {\r\n                    Port: [\r\n                        {Name: portOfDischarge.name},\r\n                        {CountryCode: portOfDischarge.countryCode},\r\n                        {UNLoCode: portOfDischarge.code}\r\n                    ]\r\n                }]\r\n        });\r\n    }\r\n\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredSecurity = (errors, data) => {\r\n    errors.Security = {};\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([{NR: 1}])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.shipActivity) errors.Security['Activity'] = [];\r\n            if (!el.dateFrom) errors.Security['Date from'] = [];\r\n            if (!el.dateDeparture) errors.Security['Date departure'] = [];\r\n            if (!el.locationName) errors.Security['Location'] = [];\r\n        })\r\n    }\r\n}\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import ListOfPorts from \"../../config/JSON/listOfPorts\";\r\n\r\nexport const checkRequiredWaste = (errors, data) => {\r\n    errors.Waste = {};\r\n\r\n    if (!data.WasteDeliveryStatus) errors.Waste['Are you delivering all,some or none\\n' +\r\n    'of your waste into port reception facility'] = true;\r\n    if (JSON.stringify(data.rows) !== JSON.stringify([\r\n        {\"NR\": 1}\r\n    ])) {\r\n        data.rows.forEach(el => {\r\n            if (!el.WasteType) errors.Waste['Waste Type'] = [];\r\n            if (!el.WasteToBeDelivered) errors.Waste['Waste to be delivered(m3)'] = [];\r\n        })\r\n    }\r\n}\r\nconst generateWaste = (waste, EPCRequestBody) => {\r\n    let WasteInformation = [];\r\n    let rows = waste.rows;\r\n    let lastPortDelivered = ListOfPorts.find(function (element) {\r\n        return element.code === waste.LastPortDelivered;\r\n    });\r\n\r\n\r\n    WasteInformation.push({WasteDeliveryStatus: waste.WasteDeliveryStatus});\r\n    if (lastPortDelivered) {\r\n        WasteInformation.push({\r\n            LastPortDelivered: [\r\n                {\r\n                    Port: [\r\n                        {Name: lastPortDelivered.name},\r\n                        {CountryCode: lastPortDelivered.countryCode},\r\n                        {UNLoCode: lastPortDelivered.code}\r\n                    ]\r\n                }]\r\n        });\r\n    }\r\n\r\n    WasteInformation.push({LastPortDeliveredDate: waste.LastPortDeliveredDate});\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let WasteDisposalInformation = [];\r\n        let PortOfDelivery = {};\r\n        if (rows[i].PortOfDelivery && rows[i].PortOfDelivery !== '') {\r\n            let DeliveryPortCode = rows[i].PortOfDelivery.split(' -')[0]\r\n            PortOfDelivery = ListOfPorts.find(function (element) {\r\n                return element.code === DeliveryPortCode;\r\n            });\r\n        }\r\n        let wasteTypeCode = '';\r\n        let wasteTypeDescription = '';\r\n        if (rows[i].WasteType && rows[i].WasteType !== '' && rows[i].WasteType !== '[Waste type]') {\r\n            let wasteType = rows[i].WasteType.split(\" : \");\r\n            wasteTypeCode = wasteType[0];\r\n            wasteTypeDescription = wasteType[1];\r\n        }\r\n\r\n        WasteDisposalInformation.push({\r\n            WasteType: [\r\n                {Code: wasteTypeCode},\r\n                {Description: wasteTypeDescription},\r\n            ]\r\n        });\r\n        WasteDisposalInformation.push({ToBeDelivered: rows[i].WasteToBeDelivered});\r\n        WasteDisposalInformation.push({MaxStorage: rows[i].MaxStorage});\r\n        WasteDisposalInformation.push({RetainedOnboard: rows[i].WasteAmount});\r\n        WasteDisposalInformation.push({EstimateGenerated: rows[i].EstimatedWaste});\r\n        if (PortOfDelivery && PortOfDelivery !== {}) {\r\n            WasteDisposalInformation.push({\r\n                DisposedOfInPort: [\r\n                    {Name: PortOfDelivery.name},\r\n                    {CountryCode: PortOfDelivery.countryCode},\r\n                    {UNLoCode: PortOfDelivery.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n\r\n        WasteInformation.push({WasteDisposalInformation: WasteDisposalInformation});\r\n    }\r\n\r\n    EPCRequestBody.push({WasteInformation: WasteInformation})\r\n};\r\n\r\nexport default generateWaste;","import xml from 'xml'\r\nimport generatePort, {checkRequiredPort} from \"./generatePort\";\r\nimport generateCrew, {checkRequiredCrew} from \"./generateCrew\";\r\nimport generateShip, {checkRequiredShip} from \"./generateShip\";\r\nimport generatePassengers, {checkRequiredPassengers} from \"./generatePasssengers\";\r\nimport generateVoyage, {checkRequiredVoyage} from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth, {checkRequiredHealth} from \"./generateHealth\";\r\nimport generateCrewEffects, {checkRequiredCrewEffects} from \"./generateCrewEffects\";\r\nimport generateCargo, {checkRequiredDangerous} from \"./generateCargo\";\r\nimport generateSecurity, {checkRequiredSecurity} from \"./generateSecurity\";\r\nimport generateWaste, {checkRequiredWaste} from \"./generateWaste\";\r\nimport _ from 'underscore'\r\n\r\nfunction createXML(data, onError) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    const errors = checkRequiredFields(data);\r\n    if (!_.isEmpty(errors)) {\r\n        onError(errors);\r\n        return;\r\n    }\r\n\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n    generateWaste(data.waste, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nfunction checkRequiredFields(data) {\r\n    const errors = {};\r\n    checkRequiredPort(errors, data.port);\r\n    checkRequiredShip(errors, data.ship);\r\n    checkRequiredCrew(errors, data.crew);\r\n    checkRequiredPassengers(errors, data.passengers);\r\n    checkRequiredVoyage(errors, data.voyage);\r\n    checkRequiredDangerous(errors, data.dpg);\r\n    checkRequiredSecurity(errors, data.security);\r\n    checkRequiredCrewEffects(errors, data.crewEffects);\r\n    checkRequiredHealth(errors, data.health);\r\n    checkRequiredWaste(errors, data.waste)\r\n\r\n\r\n    //deleting empty objects\r\n    Object.keys(errors).forEach(el => {\r\n        if (_.isEmpty(errors[el])) delete errors[el];\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                style={{marginRight: \"30px\"}}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\",\"PCS\",\"LTR\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: false},\r\n    {key: \"Given_name\", name: \"Given name\", editable: false},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: false},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor}\r\n];\r\n\r\nfunction CrewEffectsForm({data, crewData, updateData}) {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            item.NR = updated.NR;\r\n\r\n                            let crewItem = crewData.rows.find(function (element) {\r\n                                return parseInt(element.NR) === parseInt(item.NR)\r\n                            });\r\n                            console.log(\"crewItem \", crewItem)\r\n                            if (!crewItem) {\r\n                                item.NR = '';\r\n                                item.Family_name = '';\r\n                                item.Given_name = '';\r\n                                item.Rank_of_rating = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Crew member with number \" + item.NR\r\n                                        + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                item = {...item, ...updated};\r\n                                continue;\r\n                            } else {\r\n                                item.Family_name = crewItem.Family_name;\r\n                                item.Given_name = crewItem.Given_name;\r\n                                item.Rank_of_rating = crewItem.Rank_of_rating;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind of packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/JSON/listOfPorts\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport wasteTypes from \"../../config/consts/wasteTypes.json\";\r\n\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nlet wasteTypesList = [\"[Waste type]\"];\r\nfor (let i = 0; i < Object.keys(wasteTypes).length; i++) {\r\n    let wasteTypeFormatted = Object.keys(wasteTypes)[i] + ' : ' + Object.values(wasteTypes)[i];\r\n    wasteTypesList.push(wasteTypeFormatted);\r\n}\r\nconst WasteTypesEditor = <DropDownEditor options={wasteTypesList}/>;\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst columns = [\r\n    {key: \"NR\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"WasteType\", name: \"Waste Type\", editable: true, width: 150, editor: WasteTypesEditor},\r\n    {key: \"WasteDescription\", name: \"Waste Description(when relevant)\", editable: true, width: 250},\r\n    {key: \"WasteToBeDelivered\", name: \"Waste to be delivered(m3)\", editable: true, width: 250},\r\n    {key: \"MaxStorage\", name: \"Maximum dedicated storage capacity (m3)\", editable: true, width: 300},\r\n    {key: \"WasteAmount\", name: \"Amount of waste on board (m3)\", editable: true, width: 250},\r\n    {\r\n        key: \"PortOfDelivery\",\r\n        name: \"Port of delivery of remaining waste\",\r\n        editable: true,\r\n        width: 250,\r\n        editor: PortEditor\r\n    },\r\n    {key: \"EstimatedWaste\", name: \"Estimated amount of waste to be generated (m3)\", editable: true, width: 350},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction WasteForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    }\r\n\r\n    function correctDateTime(date) {\r\n        date = \"\" + date;\r\n        return date.substr(0, 16);\r\n    }\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Waste information\r\n            </Typography>\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">Are you delivering all,some or none\r\n                        of your waste into port reception facility? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.WasteDeliveryStatus}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({WasteDeliveryStatus: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'All'}>All</MenuItem>\r\n                        <MenuItem value={'Some'}>Some</MenuItem>\r\n                        <MenuItem value={'None'}>None</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom className={classes.formControl}>\r\n                Last port and date when ship-generated waste was delivered\r\n            </Typography>\r\n            <div className={'flex-parent'}>\r\n                <Grid container justify=\"space-between\" style={{width: '80%'}}>\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                        margin={\"normal\"}\r\n                    >\r\n                        <InputLabel id=\"last-port-label\">Port</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"port-of-label-label\"\r\n                            value={data.LastPortDelivered}\r\n                            onChange={(e) => {\r\n                                updateData({LastPortDelivered: e.target.value})\r\n                            }}\r\n                        >\r\n                            {ListOfPorts.map((port, index) =>\r\n                                <MenuItem key={index} value={`${port.code}`}>\r\n                                    {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        label=\"Date\"\r\n                        type=\"date\"\r\n                        style={{minWidth: '225px'}}\r\n                        variant={'outlined'}\r\n                        className={classes.formControl}\r\n                        value={correctDateTime(data.LastPortDeliveredDate)}\r\n                        onChange={(e) =>\r\n                            updateData({LastPortDeliveredDate: e.target.value})}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n            </div>\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}} className={classes.formControl}>\r\n                Waste items\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(WasteForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/JSON/listOfPorts\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                style={{marginRight:\"10%\"}}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                if (data.rows.length === 0) {\r\n                    data.rows.push({NR: 1});\r\n                    updateData({rows: data.rows})\r\n                    return;\r\n                }\r\n                let NR = parseInt(data.rows[data.rows.length-1].NR);\r\n                NR++;\r\n                data.rows.push({NR: NR});\r\n                updateData({rows: data.rows})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                data.rows.pop();\r\n                updateData({rows: data.rows});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\nimport WasteFormComponent from \"../components/blocks/WasteFormComponent\";\r\nimport _ from 'underscore'\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Port';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 200 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails({history}) {\r\n    const location = history.location.pathname;\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg,\r\n                                                        waste\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg,\r\n                                                            waste\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        const onError = (errors) => {\r\n                                            console.log(\"THE ERRORS: \", errors);\r\n                                            let missingFields = [];\r\n                                            for (let block in errors) {\r\n                                                if (!errors.hasOwnProperty(block) || _.isEmpty(errors['' + block])) continue;\r\n                                                missingFields.push(`Block ${block}:`);\r\n                                                for (let field in errors['' + block]) {\r\n                                                    if (!errors['' + block].hasOwnProperty(field)) continue;\r\n                                                    if (typeof errors[block][field] === typeof true) {\r\n                                                        missingFields.push(`→  ${field} is empty`);\r\n                                                    } else {\r\n                                                        missingFields.push(`→  ${field} columns are empty`);\r\n                                                    }\r\n                                                }\r\n                                                missingFields.push(\"\");\r\n                                            }\r\n                                            setOpenErrorDialog({\r\n                                                open: true,\r\n                                                error: {\r\n                                                    title: \"Please fill in required fields first: \",\r\n                                                    text: missingFields\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                        createXML(data, onError);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                color={'success'}\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {(config.showDrawerIcons && item.icon) && <ListItemIcon>{item.icon}</ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData], location)}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {text: []}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\r\n                            (Array.isArray(openErrorDialog.error.text))\r\n                                ?\r\n                                openErrorDialog.error.text.map((el) => <>{el}<br/></>)\r\n                                : openErrorDialog.error.text\r\n                        }\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData], location) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n    let locationNumber = parseInt(location.split('/')[2]);\r\n    locationNumber--;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm locationNumber={locationNumber} data={data.port} updateData={(dataItem) => {\r\n                setData({...data, port: {...data.port, ...dataItem}});\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent locationNumber={locationNumber} data={data.ship} updateData={(dataItem) => {\r\n                setData({...data, ship: {...data.ship, ...dataItem}})\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                setData({...data, voyage: {...data.voyage, ...dataItem}})\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crew: {...data.crew, ...dataItem}})\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                setData({...data, passengers: {...data.passengers, ...dataItem}});\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                setData({...data, shipStores: {...data.shipStores, ...dataItem}});\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} crewData={data.crew} updateData={(dataItem) => {\r\n                setData({...data, crewEffects: {...data.crewEffects, ...dataItem}})\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                setData({...data, cargo: {...data.cargo, ...dataItem}});\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    let health = JSON.parse(JSON.stringify(data.health))\r\n                    setData({...data, health: {...health, ...dataItem}});\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    let dpg = JSON.parse(JSON.stringify(data.dpg))\r\n                    setData({...data, dpg: {...dpg, ...dataItem}});\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    let security = JSON.parse(JSON.stringify(data.security));\r\n                    setData({...data, security: {...security, ...dataItem}});\r\n                }}/>\r\n        case 'waste':\r\n            return <WasteFormComponent\r\n                data={data.waste}\r\n                updateData={(dataItem) => {\r\n                    let waste = JSON.parse(JSON.stringify(data.waste));\r\n                    setData({...data, waste: {...waste, ...dataItem}});\r\n                }}/>\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nif (config.addOnCloseEvent) {\r\n    window.onload = function () {\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            const confirmationMessage = 'It looks like you have been editing something. '\r\n                + 'If you leave before saving, your changes will be lost.';\r\n\r\n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n        });\r\n    };\r\n}\r\nexport default ShipDetails;","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}