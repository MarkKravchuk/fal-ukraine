{"version":3,"sources":["pages/homePage.js","functions/countryList.js","config/consts/listOfPortsConst.js","config/consts/listOfShipTypesConst.js","components/blocks/shipFormComponent.js","config/consts/listOfPurposesOfCallsConst.js","components/blocks/portFormComponent.js","components/pickers/dateTimePicker.js","components/blocks/voyageFormComponent.js","components/pickers/datePicker.js","functions/countryCodes.js","components/blocks/crewFormComponent.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","functions/readXML/readPortXML.js","functions/readXML/readCrewXML.js","functions/readXML/readShipXML.js","functions/readXML/readPassengersXML.js","functions/readXML/readVoyageXML.js","functions/readXML/readShipStoresXML.js","functions/readXML/readHealthXML.js","functions/readXML/readCrewEffectsXML.js","functions/readXML/readSecurityXML.js","functions/readXML/readCargoXML.js","functions/readXML/readXML.js","functions/readExcel/readXLSPort.js","functions/readExcel/readXLSCrew.js","functions/readExcel/readXLSPassengers.js","functions/readExcel/readXLSShip.js","functions/readExcel/readXLSVoyage.js","functions/readExcel/readXLSHealth.js","functions/readExcel/readXLSShipStores.js","functions/readExcel/readXLSSecurity.js","functions/readExcel/readXLSCargo.js","functions/readExcel/readXLSParent.js","components/blocks/passengersFormComponent.js","functions/generateXML/generatePort.js","functions/generateXML/generateCrew.js","functions/generateXML/generateShip.js","functions/generateXML/generatePasssengers.js","functions/generateXML/generateVoyage.js","functions/generateXML/generateShipStores.js","functions/generateXML/generateHealth.js","functions/generateXML/generateCrewEffects.js","functions/generateXML/generateCargo.js","functions/generateXML/generateSecurity.js","functions/generateXML/generateXML.js","components/blocks/healthFormComponent.js","config/consts/unitList.js","components/blocks/shipStoresFormComponent.js","components/blocks/crewEffectsFormComponent.js","config/consts/kindOfPackagesList.js","components/blocks/cargoFormComponent.js","components/blocks/securityFormComponent.js","config/consts/dgClassifications.js","config/consts/IMOHazardClasses.js","config/consts/packingGroups.js","config/consts/pollutionCodes.js","components/blocks/dpgFormComponent.js","pages/shipDetails.js","config/consts/listOfOptionsConst.js","pages/404NotFound.js","router.js","App.js","index.js"],"names":["HomePage","state","rows","id","ship","imo","portCall","agent","ETA","this","history","props","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","onClick","e","push","scope","React","Component","countryList","listOfPortConst","code","countryCode","name","listOfShipTypes","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","formControlNoMargin","button","topMargin","marginTop","correctDateTime","date","substr","ShipFormComponent","data","updateData","classes","miniMarginTop","emptyDIV","style","width","Typography","variant","gutterBottom","Grid","container","justify","TextField","label","contentEditable","value","onChange","target","iMOnumber","otherInfo","callSign","mmsiNumner","FormControl","className","InputLabel","Select","labelId","flagState","item","index","country","split","MenuItem","shipType","ListOfShipTypes","grossTonnage","netTonnage","port","ListOfPorts","type","issueDate","InputLabelProps","shrink","certificateNumber","multiline","rowsMax","companyName","iMOCompany","phone","fax","email","builtYear","deadWeight","length","beam","summerDraught","callPurposeText","callPurposeCode","datePicker","formControlNoMargin2","selectEmpty","PortForm","console","log","emptyDiv","height","arrivalDeparture","voyageNumber","portOfCall","ETAPortOfCall","inputProps","step","ATAPortOfCall","portFacilityAtArrival","ETDPortOfCall","ATDPortOfCall","portOfArrival","lastPortOfCall","nextPortOfCall","required","callAnchorage","position","latitude","longitude","time","fullWidth","cargoDescription","nameOfMaster","familyName","givenName","callPurpose","purposeArr","ListOfPurposesOfCalls","purpose","IconButton","marginLeft","marginBottom","color","slicedData","JSON","parse","stringify","splice","Button","disabled","purposeOfCall","startIcon","airDraught","arrivalDraught","foreDraught","midShipDraught","aftDraught","company","contactNumbers","mobileTelephone","businessTelephone","telefax","EMail","personsOnBoard","numberOfPersonsOnBoard","crew","passengers","stowaways","periodOfStay","startDate","Date","dateTimePicker","onSelect","setState","onCommit","forceUpdate","column","key","moment","format","ReactDOM","findDOMNode","getElementsByTagName","selected","showTimeSelect","timeIntervals","dateFormat","DropDownEditor","Editors","ports","columns","editable","editor","options","withStyles","root","rowGetter","i","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","columnAutoWidth","NR","pop","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","countryWithCode","values","getCountryWithCodeByCode","GendersEditor","IDTypesEditor","RanksOfRatingEditor","countryCodesList","unshift","CountryCodesEditor","config","positionPortOfCall","voyage","shipStores","crewEffects","cargo","portOfLoading","portOfDischarge","health","enum1","enum2","enum3","enum4","enum5","enum6","enum7","enum8","enum9","nrOfDeath","nrOfIll","joinedStowaways","sanitaryMeasures","illList","security","validISSC","noValid","issued","expiryDate","isscType","securityLevel","securityRelatedMatter","approvedSSP","firstName","dpg","readPortXML","xml","children","readCrewXML","crewList","CreMemberData","Family_name","Given_name","Gender","Rank_of_rating","Nationality","Country_of_birth","Place_of_birth","date_of_birth","ID_type","ID_document_number","Issuing_state_of_identity_document","Expiry_date_of_identity_document","Visa_Residence_permit_number","readShipXML","shipId","find","el","readPassengersXML","passengerList","PassengerData","Port_of_embarkation_formatted","Port_of_disembarkation","Port_of_embarkation","Transit","readVoyageXML","PortCalls","PortCall","Date_of_arrival","Date_of_departure","Port","Port_facility","Security_level","Security_measures","readShipStoresXML","ShipStore","StoreItem","measurement","content","unitCode","Name_of_article","Location_on_board","Quantity","Unit","readHealthXML","sanitars","element","place","elements","xmlEl","illItem","parseInt","crewPassenger","ill","symptomsDate","reportedPort","caseDisposal","location","treatment","comments","readCrewEffectsXML","DutiableCrewEffect","CrewEffectItem","Effects_description","readSecurityXML","vaildISSC","dateFrom","dateDeparture","shipActivity","securityMeasure","locationName","readCargoXML","Consignment","CargoItems","CargoItem","Seq","Number_of_packages","Kind_of_packages","Container","Transport_unit","GoodsType","Description","HSCode","Shipping_marks","Gross_quantity","Gross_quantity_content","Gross_Unit","Net_quantity","Net_quantity_content","Net_Unit","Measurement","Measurement_content","Measurement_Unit","Seal_number","Size_and_type","Description_of_goods","HS_code","Custom_status","DGSafetyDataSheet","dgdRow","Container_number","Textual_reference","DG_Classification","IMO_hazard_classes","UN_number","Packing_group","Subsidiary_risk","Flash_point","pollution_code","EmS","Additional_information","Segregation_information","On_board_location","readXML","fileContent","XMLParser","parseFromString","defaultData","crewItem","passengerItem","makeReferences","readXLSPort","file","onSave","readXlsxFile","then","Row2","Row5","Row6","Row8","Row9","Row10","Row13","Row14","Row15","Row17","Row20","Row21","Row24","Row25","Row27","Row28","filter","readXLSCrew","dateOfBirth","readXLSPassengers","listOfPortsConst","Port_of_disembarkation_formatted","readXLSShip","readXLSVoyage","Port_formatted","readXLSHealth","readXLSShipStores","readXLSSecurity","readXLSCargo","readXLS","files","setOpenErrorDialog","toLowerCase","open","error","title","text","TransitEditor","PortEditor","generatePort","EPCRequestBody","ArrivalDepartureDraught","ArrivalDraught","ForeDraught","MidShipDraught","Time","DepartureDraught","VoyageNumber","VoyageDescription","Name","Facility","CountryCode","UNLoCode","PortOfArrival","LastPortOfCall","NextPortOfCall","Anchorage","EntryPosition","Position","Latitude","Longitude","CargoOverview","NameOfMaster","GivenName","FamilyName","listOfPurposesOfCallsConst","CallPurpose","CallPurposeCode","CallPurposeText","AirDraught","Agent","Company","ContactNumbers","BusinessTelephone","MobileTelephone","Telefax","Email","PersonsOnBoard","NumberOfPersonsOnBoard","Passengers","Crew","Stowaways","PeriodOfStay","RanksOfRating","generateCrew","CrewList","CrewMemberData","RankOfRatingCode","indexOf","nationalityCode","countryOfBirthCode","IssuingCode","CrewIdDocument","IdDocument","IdNumber","IssuingCountry","ExpirationDate","Duty","Code","Text","DateOfBirth","PlaceOfBirth","CountryOfBirth","VisaNumber","generateShip","shipPort","ShipID","ShipName","IMONumber","MMSINumber","CallSign","Comment","FlagState","Beam","YearOfBuilt","DeadWeight","LengthOverall","GrossTonnage","NetTonnage","ShipTypeContent","SummerDraught","RegistryCertificate","IssueLocation","IssueDate","Number","Organisation","Contact","IMOCompanyId","generatePassengers","PassengerList","embarkationPort","embarkationPortCode","disembarkationPort","disembarkationPortCode","PassengerIdDocument","EmbarkationPort","DebarkationPort","generateVoyage","PortCode","FromDateTime","ToDateTime","PortSecurityLevel","AdditionalSecurityMeasures","generateShipStores","LocationOfStorage","Content","UnitCode","generateHealth","Health","PersonDied","NumberOfDeaths","DiseaseOnBoard","IllPersonsGreaterThanExpected","NumberOfIllPersons","IllPersonsNow","MedicalConsulted","InfectionConditionOnBoard","SanitaryMeasureApplied","LocationStowawaysJoinedShip","SickAnimal","SanitaryMeasures","SanitaryMeasure","Type","Place","HealthParticulars","PersonHealthParticulars","CrewOrPassenger","Illness","SymptomsDate","ReportedToPortMedical","State","CaseDisposalAndLocationOfEvaluation","CaseDisposal","LocationOfEvacuation","Treatment","Comments","generateCrewEffects","CrewReference","EffectDescription","generateCargo","dpgRows","PortOfLoading","PortOfDischarge","ItemNumber","ShippingMarks","NoOfPackages","PackageType","GrossQuantity","NetQuantity","CustomStatus","dpgTable","ProperShippingName","DGClassification","UNNumber","UNClass","PackingGroup","SubsidiaryRisks","FlashPoint","MARPOLPollutionCode","EmergencyInstruction","SegregationInformation","OnBoardLocation","MarksAndNumber","SizeAndType","SealNumber","CargoItemListSize","CargoConsignmentsData","generateSecurity","ValidISSC","ValidISSCReasonForNoValidISSC","ISSCertificate","CertificateStatus","Issuer","ExpiryDate","CurrentShipSecurityLevel","SecurityRelatedMatterToReport","ValidSSC","CSO","Person","ShipToShipActivityList","ShipToShipActivity","Activity","Location","facility","downloadXMLfile","xmlValue","filename","Blob","a","document","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","EPCMessage","EPCMessageHeader","ArrivalDeparture","declaration","illGridRef","createRef","selectControl","labelControl","HealthFormComponent","crewData","passengerData","useState","severity","openAlert","setOpenAlert","widthOfLongQuestion","Collapse","in","Alert","action","size","fontSize","ref","hasOwnProperty","Math","random","units","unitList","kindOfPackages","KindOfPackagesEditor","kindOfPackagesList","UnitEditor","SecurityFormComponent","portEditor","dgClassifications","groups","codes","IMOHazardClasses","packingGroups","pollutionCodes","cargoData","cargoItem","listOfOptions","drawerWidth","display","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","flexGrow","padding","uploadFile","getChildComponent","activeItem","setData","dataItem","dataCopy","portCopy","voyageCopy","passengersCopy","shipStoresCopy","cargoCopy","ShipDetails","setActiveItem","defaultDataConst","openErrorDialog","CssBaseline","AppBar","Toolbar","marginRight","getElementById","reader","FileReader","onload","result","readAsText","htmlFor","multiple","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","NotFound","createBrowserHistory","AppRouter","path","exact","App","render","StrictMode"],"mappings":"4yJAWqBA,E,4MAEjBC,MAAQ,CACJC,KAAM,CACF,CACIC,GAAI,EACJC,KAAM,SACNC,IAAK,EACLC,SAAU,GACVC,MAAO,QACPC,IAAK,YACN,CACCL,GAAI,EACJC,KAAM,SACNC,IAAK,EACLC,SAAU,GACVC,MAAO,YACPC,IAAK,c,4CAMjB,WAEI,IAAKN,EAAQO,KAAKR,MAAbC,KAEAQ,EAAWD,KAAKE,MAAhBD,QAEL,OACI,cAACE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,0BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBAGR,cAACC,EAAA,EAAD,UACKnB,EAAKoB,KAAI,SAACC,GAAD,OACN,eAACL,EAAA,EAAD,CAAuBM,QAAS,SAACC,GAC7Bf,EAAQgB,KAAR,mBAAyBH,EAAIpB,MADjC,UAGI,cAACgB,EAAA,EAAD,CAAWN,UAAU,KAAKc,MAAM,MAAhC,SACKJ,EAAIpB,KAET,cAACgB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAInB,OAC9B,cAACe,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIlB,MAC9B,cAACc,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIjB,WAC9B,cAACa,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIhB,QAC9B,cAACY,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAIf,QAVnBe,EAAIpB,kB,GA5CTyB,IAAMC,W,8JC2O7BC,EAtPK,CAChB,iBACA,sBACA,aACA,aACA,oBACA,aACA,YACA,cACA,gBACA,yBACA,eACA,aACA,WACA,eACA,aACA,gBACA,aACA,aACA,gBACA,cACA,aACA,aACA,YACA,WACA,aACA,YACA,aACA,4BACA,cACA,mBACA,YACA,oCACA,uBACA,cACA,kBACA,aACA,cACA,cACA,YACA,gBACA,oBACA,8BACA,UACA,WACA,WACA,sBACA,6BACA,cACA,aACA,WACA,kBACA,gBACA,mBACA,aACA,UACA,YACA,aACA,aACA,cACA,cACA,wBACA,aACA,WACA,iBACA,uBACA,aACA,aACA,cACA,iCACA,mBACA,UACA,aACA,YACA,mBACA,sBACA,iCACA,WACA,YACA,aACA,aACA,WACA,eACA,YACA,eACA,aACA,gBACA,UACA,eACA,cACA,YACA,mBACA,YACA,WACA,uCACA,mCACA,cACA,eACA,aACA,aACA,WACA,eACA,+BACA,UACA,aACA,iBACA,YACA,WACA,aACA,WACA,YACA,YACA,gBACA,WACA,cACA,4CACA,wBACA,YACA,gBACA,sCACA,YACA,aACA,aACA,aACA,4BACA,mBACA,eACA,gBACA,WACA,gDACA,gBACA,YACA,cACA,cACA,UACA,WACA,sBACA,gBACA,gBACA,eACA,aACA,YACA,qCACA,0BACA,YACA,cACA,gBACA,gBACA,aACA,gBACA,aACA,aACA,WACA,WACA,iBACA,0BACA,mBACA,iBACA,eACA,WACA,aACA,UACA,oBACA,8BACA,YACA,UACA,cACA,WACA,qCACA,YACA,sBACA,cACA,UACA,iBACA,cACA,YACA,cACA,iBACA,WACA,aACA,aACA,wBACA,YACA,kBACA,2BACA,iBACA,+BACA,sCACA,WACA,gBACA,2BACA,kBACA,aACA,YACA,gBACA,kBACA,eACA,cACA,cACA,qBACA,aACA,kBACA,kDACA,WACA,eACA,WACA,cACA,4BACA,eACA,YACA,iBACA,0BACA,+BACA,gBACA,kCACA,cACA,iBACA,UACA,aACA,WACA,yBACA,aACA,YACA,kBACA,8BACA,YACA,YACA,aACA,0BACA,oBACA,mBACA,0CACA,aACA,gBACA,aACA,eACA,cACA,6BACA,0BACA,uBACA,oBACA,WACA,YACA,eC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","file":"static/js/main.a0e7ed63.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n\r\n    state = {\r\n        rows: [\r\n            {\r\n                id: 1,\r\n                ship: 'Ship 1',\r\n                imo: 9,\r\n                portCall: 11,\r\n                agent: 'Vasya',\r\n                ETA: '11:11:11'\r\n            }, {\r\n                id: 2,\r\n                ship: 'Ship 2',\r\n                imo: 3,\r\n                portCall: 15,\r\n                agent: 'Ivanushka',\r\n                ETA: '66:66:66'\r\n            }\r\n        ]\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let {rows} = this.state;\r\n\r\n        let {history} = this.props;\r\n\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>ID</TableCell>\r\n                            <TableCell align=\"right\">Ship</TableCell>\r\n                            <TableCell align=\"right\">IMO</TableCell>\r\n                            <TableCell align=\"right\">Port&nbsp;call</TableCell>\r\n                            <TableCell align=\"right\">Agent</TableCell>\r\n                            <TableCell align=\"right\">ETA</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <TableRow key={row.id} onClick={(e) => {\r\n                                history.push(`/details/${row.id}`);\r\n                            }}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{row.ship}</TableCell>\r\n                                <TableCell align=\"right\">{row.imo}</TableCell>\r\n                                <TableCell align=\"right\">{row.portCall}</TableCell>\r\n                                <TableCell align=\"right\">{row.agent}</TableCell>\r\n                                <TableCell align=\"right\">{row.ETA}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        )\r\n\r\n    }\r\n\r\n}","const countryList = [\r\n    \"AF:Afghanistan\",\r\n    \"AX:Åland Islands\",\r\n    \"AL:Albania\",\r\n    \"DZ:Algeria\",\r\n    \"AS:American Samoa\",\r\n    \"AD:Andorra\",\r\n    \"AO:Angola\",\r\n    \"AI:Anguilla\",\r\n    \"AQ:Antarctica\",\r\n    \"AG:Antigua and Barbuda\",\r\n    \"AR:Argentina\",\r\n    \"AM:Armenia\",\r\n    \"AW:Aruba\",\r\n    \"AU:Australia\",\r\n    \"AT:Austria\",\r\n    \"AZ:Azerbaijan\",\r\n    \"BS:Bahamas\",\r\n    \"BH:Bahrain\",\r\n    \"BD:Bangladesh\",\r\n    \"BB:Barbados\",\r\n    \"BY:Belarus\",\r\n    \"BE:Belgium\",\r\n    \"BZ:Belize\",\r\n    \"BJ:Benin\",\r\n    \"BM:Bermuda\",\r\n    \"BT:Bhutan\",\r\n    \"BO:Bolivia\",\r\n    \"BA:Bosnia and Herzegovina\",\r\n    \"BW:Botswana\",\r\n    \"BV:Bouvet Island\",\r\n    \"BR:Brazil\",\r\n    \"IO:British Indian Ocean Territory\",\r\n    \"BN:Brunei Darussalam\",\r\n    \"BG:Bulgaria\",\r\n    \"BF:Burkina Faso\",\r\n    \"BI:Burundi\",\r\n    \"KH:Cambodia\",\r\n    \"CM:Cameroon\",\r\n    \"CA:Canada\",\r\n    \"CV:Cape Verde\",\r\n    \"KY:Cayman Islands\",\r\n    \"CF:Central African Republic\",\r\n    \"TD:Chad\",\r\n    \"CL:Chile\",\r\n    \"CN:China\",\r\n    \"CX:Christmas Island\",\r\n    \"CC:Cocos (Keeling) Islands\",\r\n    \"CO:Colombia\",\r\n    \"KM:Comoros\",\r\n    \"CG:Congo\",\r\n    \"CK:Cook Islands\",\r\n    \"CR:Costa Rica\",\r\n    \"CI:Cote D'ivoire\",\r\n    \"HR:Croatia\",\r\n    \"CU:Cuba\",\r\n    \"CY:Cyprus\",\r\n    \"CZ:Czechia\",\r\n    \"DK:Denmark\",\r\n    \"DJ:Djibouti\",\r\n    \"DM:Dominica\",\r\n    \"DO:Dominican Republic\",\r\n    \"EC:Ecuador\",\r\n    \"EG:Egypt\",\r\n    \"SV:El Salvador\",\r\n    \"GQ:Equatorial Guinea\",\r\n    \"ER:Eritrea\",\r\n    \"EE:Estonia\",\r\n    \"ET:Ethiopia\",\r\n    \"FK:Falkland Islands (Malvinas)\",\r\n    \"FO:Faroe Islands\",\r\n    \"FJ:Fiji\",\r\n    \"FI:Finland\",\r\n    \"FR:France\",\r\n    \"GF:French Guiana\",\r\n    \"PF:French Polynesia\",\r\n    \"TF:French Southern Territories\",\r\n    \"GA:Gabon\",\r\n    \"GM:Gambia\",\r\n    \"GE:Georgia\",\r\n    \"DE:Germany\",\r\n    \"GH:Ghana\",\r\n    \"GI:Gibraltar\",\r\n    \"GR:Greece\",\r\n    \"GL:Greenland\",\r\n    \"GD:Grenada\",\r\n    \"GP:Guadeloupe\",\r\n    \"GU:Guam\",\r\n    \"GT:Guatemala\",\r\n    \"GG:Guernsey\",\r\n    \"GN:Guinea\",\r\n    \"GW:Guinea-bissau\",\r\n    \"GY:Guyana\",\r\n    \"HT:Haiti\",\r\n    \"HM:Heard Island and Mcdonald Islands\",\r\n    \"VA:Holy See (Vatican City State)\",\r\n    \"HN:Honduras\",\r\n    \"HK:Hong Kong\",\r\n    \"HU:Hungary\",\r\n    \"IS:Iceland\",\r\n    \"IN:India\",\r\n    \"ID:Indonesia\",\r\n    \"IR:Iran, Islamic Republic of\",\r\n    \"IQ:Iraq\",\r\n    \"IE:Ireland\",\r\n    \"IM:Isle of Man\",\r\n    \"IL:Israel\",\r\n    \"IT:Italy\",\r\n    \"JM:Jamaica\",\r\n    \"JP:Japan\",\r\n    \"JE:Jersey\",\r\n    \"JO:Jordan\",\r\n    \"KZ:Kazakhstan\",\r\n    \"KE:Kenya\",\r\n    \"KI:Kiribati\",\r\n    \"KP:Korea, Democratic People's Republic of\",\r\n    \"KR:Korea, Republic of\",\r\n    \"KW:Kuwait\",\r\n    \"KG:Kyrgyzstan\",\r\n    \"LA:Lao People's Democratic Republic\",\r\n    \"LV:Latvia\",\r\n    \"LB:Lebanon\",\r\n    \"LS:Lesotho\",\r\n    \"LR:Liberia\",\r\n    \"LY:Libyan Arab Jamahiriya\",\r\n    \"LI:Liechtenstein\",\r\n    \"LT:Lithuania\",\r\n    \"LU:Luxembourg\",\r\n    \"MO:Macao\",\r\n    \"MK:Macedonia, The Former Yugoslav Republic of\",\r\n    \"MG:Madagascar\",\r\n    \"MW:Malawi\",\r\n    \"MY:Malaysia\",\r\n    \"MV:Maldives\",\r\n    \"ML:Mali\",\r\n    \"MT:Malta\",\r\n    \"MH:Marshall Islands\",\r\n    \"MQ:Martinique\",\r\n    \"MR:Mauritania\",\r\n    \"MU:Mauritius\",\r\n    \"YT:Mayotte\",\r\n    \"MX:Mexico\",\r\n    \"FM:Micronesia, Federated States of\",\r\n    \"MD:Moldova, Republic of\",\r\n    \"MC:Monaco\",\r\n    \"MN:Mongolia\",\r\n    \"ME:Montenegro\",\r\n    \"MS:Montserrat\",\r\n    \"MA:Morocco\",\r\n    \"MZ:Mozambique\",\r\n    \"MM:Myanmar\",\r\n    \"NA:Namibia\",\r\n    \"NR:Nauru\",\r\n    \"NP:Nepal\",\r\n    \"NL:Netherlands\",\r\n    \"AN:Netherlands Antilles\",\r\n    \"NC:New Caledonia\",\r\n    \"NZ:New Zealand\",\r\n    \"NI:Nicaragua\",\r\n    \"NE:Niger\",\r\n    \"NG:Nigeria\",\r\n    \"NU:Niue\",\r\n    \"NF:Norfolk Island\",\r\n    \"MP:Northern Mariana Islands\",\r\n    \"NO:Norway\",\r\n    \"OM:Oman\",\r\n    \"PK:Pakistan\",\r\n    \"PW:Palau\",\r\n    \"PS:Palestinian Territory, Occupied\",\r\n    \"PA:Panama\",\r\n    \"PG:Papua New Guinea\",\r\n    \"PY:Paraguay\",\r\n    \"PE:Peru\",\r\n    \"PH:Philippines\",\r\n    \"PN:Pitcairn\",\r\n    \"PL:Poland\",\r\n    \"PT:Portugal\",\r\n    \"PR:Puerto Rico\",\r\n    \"QA:Qatar\",\r\n    \"RE:Reunion\",\r\n    \"RO:Romania\",\r\n    \"RU:Russian Federation\",\r\n    \"RW:Rwanda\",\r\n    \"SH:Saint Helena\",\r\n    \"KN:Saint Kitts and Nevis\",\r\n    \"LC:Saint Lucia\",\r\n    \"PM:Saint Pierre and Miquelon\",\r\n    \"VC:Saint Vincent and The Grenadines\",\r\n    \"WS:Samoa\",\r\n    \"SM:San Marino\",\r\n    \"ST:Sao Tome and Principe\",\r\n    \"SA:Saudi Arabia\",\r\n    \"SN:Senegal\",\r\n    \"RS:Serbia\",\r\n    \"SC:Seychelles\",\r\n    \"SL:Sierra Leone\",\r\n    \"SG:Singapore\",\r\n    \"SK:Slovakia\",\r\n    \"SI:Slovenia\",\r\n    \"SB:Solomon Islands\",\r\n    \"SO:Somalia\",\r\n    \"ZA:South Africa\",\r\n    \"GS:South Georgia and The South Sandwich Islands\",\r\n    \"ES:Spain\",\r\n    \"LK:Sri Lanka\",\r\n    \"SD:Sudan\",\r\n    \"SR:Suriname\",\r\n    \"SJ:Svalbard and Jan Mayen\",\r\n    \"SZ:Swaziland\",\r\n    \"SE:Sweden\",\r\n    \"CH:Switzerland\",\r\n    \"SY:Syrian Arab Republic\",\r\n    \"TW:Taiwan, Province of China\",\r\n    \"TJ:Tajikistan\",\r\n    \"TZ:Tanzania, United Republic of\",\r\n    \"TH:Thailand\",\r\n    \"TL:Timor-leste\",\r\n    \"TG:Togo\",\r\n    \"TK:Tokelau\",\r\n    \"TO:Tonga\",\r\n    \"TT:Trinidad and Tobago\",\r\n    \"TN:Tunisia\",\r\n    \"TR:Turkey\",\r\n    \"TM:Turkmenistan\",\r\n    \"TC:Turks and Caicos Islands\",\r\n    \"TV:Tuvalu\",\r\n    \"UG:Uganda\",\r\n    \"UA:Ukraine\",\r\n    \"AE:United Arab Emirates\",\r\n    \"GB:United Kingdom\",\r\n    \"US:United States\",\r\n    \"UM:United States Minor Outlying Islands\",\r\n    \"UY:Uruguay\",\r\n    \"UZ:Uzbekistan\",\r\n    \"VU:Vanuatu\",\r\n    \"VE:Venezuela\",\r\n    \"VN:Viet Nam\",\r\n    \"VG:Virgin Islands, British\",\r\n    \"VI:Virgin Islands, U.S.\",\r\n    \"WF:Wallis and Futuna\",\r\n    \"EH:Western Sahara\",\r\n    \"YE:Yemen\",\r\n    \"ZM:Zambia\",\r\n    \"ZW:Zimbabwe\",\r\n];\r\n\r\nexport default countryList;","const listOfPortConst = [\r\n    {\r\n        code: \"BGVAR\",\r\n        countryCode: \"BG\",\r\n        name: \"Varna\"\r\n    }, {\r\n        code: \"ROCND\",\r\n        countryCode: \"RO\",\r\n        name: \"Constanta\"\r\n    }, {\r\n        code: \"TRIST\",\r\n        countryCode: \"TR\",\r\n        name: \"Istanbul\"\r\n    }, {\r\n        code: \"TRIZM\",\r\n        countryCode: \"TR\",\r\n        name: \"Izmir\"\r\n    }, {\r\n        code: \"UAILK\",\r\n        countryCode: \"UA\",\r\n        name: \"Chornomorsk\"\r\n    }, {\r\n        code: \"UAODS\",\r\n        countryCode: \"UA\",\r\n        name: \"Odessa\"\r\n    }, {\r\n        code: \"UAOCT\",\r\n        countryCode: \"UA\",\r\n        name: \"Oktyabrsk\"\r\n    }, {\r\n        code: \"UAYUZ\",\r\n        countryCode: \"UA\",\r\n        name: \"Yuzhnyy\"\r\n    }, {\r\n        code: \"\",\r\n        countryCode: \"TEST\",\r\n        name: \"TEST\"\r\n    },\r\n];\r\n\r\nexport default listOfPortConst;","const listOfShipTypes = [\r\n    {\r\n        \"name\": \"General cargo vessel \",\r\n        \"code\": \"50\"\r\n    }, {\r\n        \"name\": \"Grain vessel \",\r\n        \"code\": \"501\"\r\n    }, {\r\n        \"name\": \"Timber/log carrier \",\r\n        \"code\": \"502\"\r\n    }, {\r\n        \"name\": \"Wood chips vessel \",\r\n        \"code\": \"503\"\r\n    }, {\r\n        \"name\": \"Steel products vessel \",\r\n        \"code\": \"504\"\r\n    }, {\r\n        \"name\": \"Carrier, general cargo/container \",\r\n        \"code\": \"505\"\r\n    }, {\r\n        \"name\": \"Temperature controlled cargo vessels \",\r\n        \"code\": \"506\"\r\n    }, {\r\n        \"name\": \"Unit carrier \",\r\n        \"code\": \"51\"\r\n    }, {\r\n        \"name\": \"Full container ship/cellular vessel \",\r\n        \"code\": \"511\"\r\n    }, {\r\n        \"name\": \"RoRo vessel \",\r\n        \"code\": \"512\"\r\n    }, {\r\n        \"name\": \"Car carrier \",\r\n        \"code\": \"513\"\r\n    }, {\r\n        \"name\": \"Livestock carrier \",\r\n        \"code\": \"514\"\r\n    }, {\r\n        \"name\": \"Barge carrier – Lash ship \",\r\n        \"code\": \"515\"\r\n    }, {\r\n        \"name\": \"Chemical carrier \",\r\n        \"code\": \"516\"\r\n    }, {\r\n        \"name\": \"Irradiated fuel carrier \",\r\n        \"code\": \"517\"\r\n    }, {\r\n        \"name\": \"Heavy cargo vessel \",\r\n        \"code\": \"518\"\r\n    }, {\r\n        \"name\": \"RoRo/Container vessel \",\r\n        \"code\": \"519\"\r\n    }, {\r\n        \"name\": \"Bulk carrier \",\r\n        \"code\": \"52\"\r\n    }, {\r\n        \"name\": \"Dry bulk carrier \",\r\n        \"code\": \"521\"\r\n    }, {\r\n        \"name\": \"Ore carrier \",\r\n        \"code\": \"522\"\r\n    }, {\r\n        \"name\": \"Cement carrier \",\r\n        \"code\": \"523\"\r\n    }, {\r\n        \"name\": \"Gravel carrier \",\r\n        \"code\": \"524\"\r\n    }, {\r\n        \"name\": \"Coal carrier \",\r\n        \"code\": \"525\"\r\n    }, {\r\n        \"name\": \"Tanker \",\r\n        \"code\": \"53\"\r\n    }, {\r\n        \"name\": \"Crude oil tanker \",\r\n        \"code\": \"531\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, coaster \",\r\n        \"code\": \"532\"\r\n    }, {\r\n        \"name\": \"Chemical tanker, deep sea \",\r\n        \"code\": \"533\"\r\n    }, {\r\n        \"name\": \"Oil and other derivatives tanker \",\r\n        \"code\": \"534\"\r\n    }, {\r\n        \"name\": \"Liquefied gas tanker \",\r\n        \"code\": \"54\"\r\n    }, {\r\n        \"name\": \"LPG tanker \",\r\n        \"code\": \"541\"\r\n    }, {\r\n        \"name\": \"LNG tanker \",\r\n        \"code\": \"542\"\r\n    }, {\r\n        \"name\": \"LNG/LPG tanker \",\r\n        \"code\": \"543\"\r\n    }, {\r\n        \"name\": \"Other special tanker \",\r\n        \"code\": \"55\"\r\n    }, {\r\n        \"name\": \"Asphalt/bitumen tanker \",\r\n        \"code\": \"551\"\r\n    }, {\r\n        \"name\": \"Molasses tanker \",\r\n        \"code\": \"552\"\r\n    }, {\r\n        \"name\": \"Vegetable oil tanker \",\r\n        \"code\": \"553\"\r\n    }, {\r\n        \"name\": \"Passenger ship \",\r\n        \"code\": \"59\"\r\n    }, {\r\n        \"name\": \"Cruise ship \",\r\n        \"code\": \"591\"\r\n    }, {\r\n        \"name\": \"Ferry \",\r\n        \"code\": \"592\"\r\n    }, {\r\n        \"name\": \"Other passenger ship \",\r\n        \"code\": \"593\"\r\n    }, {\r\n        \"name\": \"Passenger ship, sailing \",\r\n        \"code\": \"594\"\r\n    }, {\r\n        \"name\": \"Assistance vessel \",\r\n        \"code\": \"60\"\r\n    }, {\r\n        \"name\": \"Tug, without tow \",\r\n        \"code\": \"601\"\r\n    }, {\r\n        \"name\": \"Tug, with tow \",\r\n        \"code\": \"602\"\r\n    }, {\r\n        \"name\": \"Salvage vessel \",\r\n        \"code\": \"603\"\r\n    }, {\r\n        \"name\": \"Rescue vessel \",\r\n        \"code\": \"604\"\r\n    }, {\r\n        \"name\": \"Oil combat vessel \",\r\n        \"code\": \"605\"\r\n    }, {\r\n        \"name\": \"Oil rig \",\r\n        \"code\": \"606\"\r\n    }, {\r\n        \"name\": \"Hospital vessel \",\r\n        \"code\": \"607\"\r\n    }, {\r\n        \"name\": \"Other sea-going vessel \",\r\n        \"code\": \"70\"\r\n    }, {\r\n        \"name\": \"Pilot boat \",\r\n        \"code\": \"711\"\r\n    }, {\r\n        \"name\": \"Patrol/measure ship \",\r\n        \"code\": \"712\"\r\n    }, {\r\n        \"name\": \"Work ship \",\r\n        \"code\": \"72\"\r\n    }, {\r\n        \"name\": \"Supply vessel \",\r\n        \"code\": \"721\"\r\n    }, {\r\n        \"name\": \"Offshore support vessel \",\r\n        \"code\": \"723\"\r\n    }, {\r\n        \"name\": \"Pontoon \",\r\n        \"code\": \"724\"\r\n    }, {\r\n        \"name\": \"Stone dumping vessel \",\r\n        \"code\": \"725\"\r\n    }, {\r\n        \"name\": \"Cable layer \",\r\n        \"code\": \"726\"\r\n    }, {\r\n        \"name\": \"Buoyage vessel \",\r\n        \"code\": \"727\"\r\n    }, {\r\n        \"name\": \"Icebreaker \",\r\n        \"code\": \"728\"\r\n    }, {\r\n        \"name\": \"Pipelaying vessel \",\r\n        \"code\": \"729\"\r\n    }, {\r\n        \"name\": \"Push boat \",\r\n        \"code\": \"73\"\r\n    }, {\r\n        \"name\": \"Dredger \",\r\n        \"code\": \"74\"\r\n    }, {\r\n        \"name\": \"Fishery research vessel \",\r\n        \"code\": \"761\"\r\n    }, {\r\n        \"name\": \"Climate registration vessel \",\r\n        \"code\": \"762\"\r\n    }, {\r\n        \"name\": \"Ship for environmental measurement \",\r\n        \"code\": \"763\"\r\n    }, {\r\n        \"name\": \"Scientific vessel \",\r\n        \"code\": \"764\"\r\n    }, {\r\n        \"name\": \"Sailing school ship \",\r\n        \"code\": \"765\"\r\n    }, {\r\n        \"name\": \"Navy vessel \",\r\n        \"code\": \"77\"\r\n    }, {\r\n        \"name\": \"Structure, floating \",\r\n        \"code\": \"78\"\r\n    }, {\r\n        \"name\": \"Crane, floating \",\r\n        \"code\": \"781\"\r\n    }, {\r\n        \"name\": \"Dock, floating \",\r\n        \"code\": \"782\"\r\n    }, {\r\n        \"name\": \"Pleasure boat \",\r\n        \"code\": \"80\"\r\n    }, {\r\n        \"name\": \"Speedboat \",\r\n        \"code\": \"81\"\r\n    }, {\r\n        \"name\": \"Sailing boat with auxiliary motor \",\r\n        \"code\": \"82\"\r\n    }, {\r\n        \"name\": \"Sailing yacht \",\r\n        \"code\": \"83\"\r\n    }, {\r\n        \"name\": \"Boat for sport fishing \",\r\n        \"code\": \"84\"\r\n    }, {\r\n        \"name\": \"Craft, pleasure, longer than 20 metres \",\r\n        \"code\": \"85\"\r\n    }, {\r\n        \"name\": \"Craft, other, recreational \",\r\n        \"code\": \"89\"\r\n    }, {\r\n        \"name\": \"Fast ship \",\r\n        \"code\": \"90\"\r\n    }, {\r\n        \"name\": \"Hydrofoil \",\r\n        \"code\": \"91\"\r\n    }, {\r\n        \"name\": \"Catamaran, fast \",\r\n        \"code\": \"92\"\r\n    }\r\n];\r\n\r\nexport default listOfShipTypes;","import React from 'react'\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nimport countryList from \"../../functions/countryList\"\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\nimport ListOfShipTypes from \"../../config/consts/listOfShipTypesConst\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst ShipFormComponent = ({data, updateData}) => {\r\n    const classes = useStyles();\r\n\r\n    const marginTop = {marginTop: '30px'};\r\n    const miniMarginTop = {marginTop: '10px'};\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n\r\n    return <>\r\n\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Ship information\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship identification\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Ship name\"\r\n                contentEditable={false}\r\n                value={data.name}\r\n                onChange={(e) =>\r\n                    updateData({name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO number\"\r\n                contentEditable={'false'}\r\n                value={data.iMOnumber}\r\n                onChange={(e) =>\r\n                    updateData({iMOnumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Other ship related information\"\r\n                value={data.otherInfo}\r\n                onChange={(e) =>\r\n                    updateData({otherInfo: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Call sign\"\r\n                value={data.callSign}\r\n                onChange={(e) =>\r\n                    updateData({callSign: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"MMSI number\"\r\n                value={data.mmsiNumner}\r\n                onChange={(e) =>\r\n                    updateData({mmsiNumner: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship particulars\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"flag-state-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"flag-state-label\"\r\n                    value={data.flagState}\r\n                    onChange={(e) => {\r\n                        updateData({flagState: e.target.value})\r\n                    }}\r\n                >\r\n                    {countryList.map((item, index) => {\r\n                        let country = item.split(\":\")[0];\r\n                        return <MenuItem key={index} value={country}>\r\n                            {item}\r\n                        </MenuItem>\r\n                    })}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"ship-type-label\">Flag state</InputLabel>\r\n                <Select\r\n                    labelId=\"ship-type-label\"\r\n                    value={data.shipType}\r\n                    onChange={(e) => {\r\n                        updateData({shipType: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfShipTypes.map((item, index) =>\r\n                        <MenuItem key={index} value={item.code}>\r\n                            {`${item.name}(${item.code})`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Gross tonnage\"\r\n                value={data.grossTonnage}\r\n                onChange={(e) =>\r\n                    updateData({grossTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net tonnage\"\r\n                value={data.netTonnage}\r\n                onChange={(e) =>\r\n                    updateData({netTonnage: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Certificate of registry\r\n        </Typography>\r\n\r\n        <Grid style={marginTop} container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-label\">Port</InputLabel>\r\n                <Select\r\n                    labelId=\"port-label\"\r\n                    value={data.port}\r\n                    onChange={(e) => {\r\n                        updateData({port: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Date of issue\"\r\n                type=\"date\"\r\n                style={{minWidth: '225px'}}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.issueDate)}\r\n                onChange={(e) =>\r\n                    updateData({issueDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number\"\r\n                variant={'outlined'}\r\n                value={data.certificateNumber}\r\n                onChange={(e) =>\r\n                    updateData({certificateNumber: e.target.value})\r\n                }\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Company\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 225px)'}}\r\n                label=\"Company name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.companyName}\r\n                onChange={(e) => {\r\n                    updateData({companyName: e.target.value})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"IMO company number\"\r\n                variant=\"outlined\"\r\n                value={data.iMOCompany}\r\n                onChange={(e) => {\r\n                    let iMOCompany = e.target.value;\r\n                    updateData({iMOCompany})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Phone\"\r\n                margin={'normal'}\r\n                value={data.phone}\r\n                onChange={(e) => {\r\n                    let phone = e.target.value;\r\n                    updateData({phone})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Fax\"\r\n                margin={'normal'}\r\n                value={data.fax}\r\n                onChange={(e) => {\r\n                    let fax = e.target.value;\r\n                    updateData({fax})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.email}\r\n                onChange={(e) => {\r\n                    let email = e.target.value;\r\n                    updateData({email})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Year of built\"\r\n                margin={'normal'}\r\n                value={data.builtYear}\r\n                onChange={(e) => {\r\n                    let builtYear = e.target.value;\r\n                    updateData({builtYear})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Dead weight\"\r\n                margin={'normal'}\r\n                value={data.deadWeight}\r\n                onChange={(e) => {\r\n                    let deadWeight = e.target.value;\r\n                    updateData({deadWeight})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={miniMarginTop} justify={'space-between'}>\r\n            <TextField\r\n                label=\"Length overall\"\r\n                margin={'normal'}\r\n                value={data.length}\r\n                onChange={(e) => {\r\n                    let length = e.target.value;\r\n                    updateData({length})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Beam\"\r\n                margin={'normal'}\r\n                value={data.beam}\r\n                onChange={(e) => {\r\n                    let beam = e.target.value;\r\n                    updateData({beam})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Summer draught\"\r\n                margin={'normal'}\r\n                value={data.summerDraught}\r\n                onChange={(e) => {\r\n                    let summerDraught = e.target.value;\r\n                    updateData({summerDraught})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n    </>\r\n\r\n\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default ShipFormComponent;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [{\r\n    callPurposeText: 'Cargo operations',\r\n    callPurposeCode: 1,\r\n}, {\r\n    callPurposeText: 'Passenger movement',\r\n    callPurposeCode: 2,\r\n}, {\r\n    callPurposeText: 'Taking bunkers',\r\n    callPurposeCode: 3,\r\n}, {\r\n    callPurposeText: 'Changing crew',\r\n    callPurposeCode: 4,\r\n}, {\r\n    callPurposeText: 'Goodwill visit',\r\n    callPurposeCode: 5,\r\n}, {\r\n    callPurposeText: 'Taking supplies',\r\n    callPurposeCode: 6,\r\n}, {\r\n    callPurposeText: 'Repair',\r\n    callPurposeCode: 7,\r\n}, {\r\n    callPurposeText: 'Laid-up',\r\n    callPurposeCode: 8,\r\n}, {\r\n    callPurposeText: 'Awaiting orders',\r\n    callPurposeCode: 9,\r\n}, {\r\n    callPurposeText: 'Miscellaneous',\r\n    callPurposeCode: 10,\r\n}, {\r\n    callPurposeText: 'Crew movement',\r\n    callPurposeCode: 11,\r\n}, {\r\n    callPurposeText: 'Cruise, leisure and recreation',\r\n    callPurposeCode: 12,\r\n}, {\r\n    callPurposeText: 'Under government orders',\r\n    callPurposeCode: 13,\r\n}, {\r\n    callPurposeText: 'Quarantine inspection',\r\n    callPurposeCode: 14,\r\n}, {\r\n    callPurposeText: 'Refuge',\r\n    callPurposeCode: 15,\r\n}, {\r\n    callPurposeText: 'Unloading cargo',\r\n    callPurposeCode: 16,\r\n}, {\r\n    callPurposeText: 'Loading cargo',\r\n    callPurposeCode: 17,\r\n}, {\r\n    callPurposeText: 'Repair in dry dock',\r\n    callPurposeCode: 18,\r\n}, {\r\n    callPurposeText: 'Repair in wet dock',\r\n    callPurposeCode: 19,\r\n}, {\r\n    callPurposeText: 'Cargo tank cleaning',\r\n    callPurposeCode: 20,\r\n}, {\r\n    callPurposeText: 'Means of transport customs clearance',\r\n    callPurposeCode: 21,\r\n}, {\r\n    callPurposeText: 'Degassing',\r\n    callPurposeCode: 22,\r\n}, {\r\n    callPurposeText: 'Waste disposal',\r\n    callPurposeCode: 23,\r\n}]","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfPurposesOfCalls from '../../config/consts/listOfPurposesOfCallsConst';\r\n\r\nimport ListOfPorts from '../../config/consts/listOfPortsConst'\r\n\r\nimport './portFormComponent.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 250,\r\n        width: 250\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n        // minHeight: 60\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\nfunction PortForm({data, updateData}) {\r\n\r\n    const classes = useStyles();\r\n    console.log('THe data', data)\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Port information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Departure / Arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.arrivalDeparture}\r\n                    onChange={(e) => {\r\n                        updateData({arrivalDeparture: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Arrival'}>Arrival</MenuItem>\r\n                    <MenuItem value={'Departure'}>Departure</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Voyage Number:\"\r\n                value={data.voyageNumber}\r\n                onChange={(e) => updateData({voyageNumber: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '20px'}}>\r\n            Port of call\r\n        </Typography>\r\n\r\n        {/*Port of call and all time pickers*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"port-of-call-label\">Port of call</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-call-label\"\r\n                    value={data.portOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({portOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <TextField\r\n                label=\"ETA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"ATA to port of call\"\r\n                type=\"datetime-local\"\r\n                variant={'outlined'}\r\n                className={classes.datePicker}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATAPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATAPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify=\"space-between\">\r\n            <TextField\r\n                style={{marginTop: '15px'}}\r\n                value={data.portFacilityAtArrival}\r\n                onChange={(e) =>\r\n                    updateData({portFacilityAtArrival: e.target.value})}\r\n                label=\"Port facility at arrival\"\r\n                variant=\"outlined\"\r\n                margin={\"normal\"}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ETD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ETDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ETDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"ATD to port of call\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                margin={\"normal\"}\r\n                value={correctDateTime(data.ATDPortOfCall)}\r\n                onChange={(e) =>\r\n                    updateData({ATDPortOfCall: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        {/*Port of arrival / last port of call / next port of call*/}\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"port-of-arrival-label\">Port of arrival</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"port-of-arrival-label\"\r\n                    value={data.portOfArrival}\r\n                    onChange={(e) => {\r\n                        updateData({portOfArrival: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"last-port-call-label\">Last port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"last-port-call-label\"\r\n                    value={data.lastPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({lastPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                // required\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"next-port-call-label\">Next port of call</InputLabel>\r\n                <Select\r\n                    labelId=\"next-port-call-label\"\r\n                    value={data.nextPortOfCall}\r\n                    onChange={(e) => {\r\n                        updateData({nextPortOfCall: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfPorts.map((port, index) =>\r\n                        <MenuItem key={index} value={`${port.code}`}>\r\n                            {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n\r\n        <FormControl\r\n            variant=\"outlined\"\r\n            required\r\n            className={classes.formControlNoMargin}\r\n            style={{marginTop: \"30px\"}}\r\n        >\r\n            <InputLabel id=\"next-port-call-label\">Call at anchorage</InputLabel>\r\n            <Select\r\n                labelId=\"next-port-call-label\"\r\n                value={data.callAnchorage}\r\n                onChange={(e) => {\r\n                    updateData({callAnchorage: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'yes'}>Yes</MenuItem>\r\n                <MenuItem value={'no'}>No</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Position at port of call\r\n        </Typography>\r\n\r\n        {/*Latitude, longitute and time*/\r\n        }\r\n        <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Latitude\"\r\n                value={data.position.latitude}\r\n                onChange={(e) => {\r\n                    let latitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, latitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Longitude\"\r\n                value={data.position.longitude}\r\n                onChange={(e) => {\r\n                    let longitude = e.target.value;\r\n                    let position = data.position;\r\n                    updateData({position: {...position, longitude}})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Time\"\r\n                type=\"datetime-local\"\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.position.time)}\r\n                onChange={(e) => {\r\n                    let time = e.target.value;\r\n                    let position = {...data.position, time};\r\n                    updateData({position})\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                inputProps={{\r\n                    step: 300, // 5 min\r\n                }}\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <TextField\r\n            style={{marginTop: '30px'}}\r\n            id=\"cargo-description\"\r\n            label=\"Brief description of onboard cargo\"\r\n            multiline\r\n            fullWidth\r\n            rowsMax={4}\r\n            value={data.cargoDescription}\r\n            onChange={(e) => updateData({cargoDescription: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name of master\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.nameOfMaster.familyName}\r\n                onChange={(e) => {\r\n                    let familyName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, familyName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.nameOfMaster.givenName}\r\n                onChange={(e) => {\r\n                    let givenName = e.target.value;\r\n                    let nameOfMaster = {...data.nameOfMaster, givenName};\r\n                    updateData({nameOfMaster})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Purpose of call\r\n        </Typography>\r\n        <div style={{marginTop: \"20px\"}}>\r\n            {data.callPurpose.map((item, index) => <div key={index}>\r\n\r\n                <FormControl\r\n                    key={index}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n\r\n                >\r\n\r\n                    <InputLabel id={`purpose-of-call-label${index}`}>\r\n                        {index === 0 ? 'Call purpose' : `Call purpose (${index})`}\r\n                    </InputLabel>\r\n\r\n                    <Select\r\n                        labelId={`purpose-of-call-label${index}`}\r\n                        value={data.callPurpose[index]}\r\n                        onChange={(e) => {\r\n                            let purposeArr = data.callPurpose;\r\n                            purposeArr[index] = e.target.value;\r\n                            updateData({callPurpose: purposeArr})\r\n                        }}\r\n                    >\r\n                        {ListOfPurposesOfCalls.map((purpose, index) => {\r\n                            return <MenuItem key={index} value={purpose.callPurposeCode}>\r\n                                {`${purpose.callPurposeText}(${purpose.callPurposeCode})`}\r\n                            </MenuItem>\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <IconButton\r\n                    style={{\r\n                        marginLeft: '10px',\r\n                        marginBottom: '20px'\r\n                    }}\r\n                    color={'secondary'}\r\n                    aria-label=\"delete\"\r\n                    variant={'outlined'}\r\n                    onClick={() => {\r\n                        if (index === 0 && data.callPurpose.length === 1) {\r\n                            updateData({callPurpose: ['']})\r\n                        } else {\r\n                            let slicedData = JSON.parse(JSON.stringify(data.callPurpose));\r\n                            slicedData.splice(index, 1);\r\n                            updateData({callPurpose: slicedData})\r\n                        }\r\n                    }}\r\n                >\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n\r\n            </div>)}\r\n\r\n            <Button\r\n                style={{marginTop: '15px'}}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                disabled={data.callPurpose[data.callPurpose.length - 1] === ''}\r\n                className={classes.button}\r\n                onClick={() => updateData({purposeOfCall: data.callPurpose.push('')})}\r\n                startIcon={<AddIcon/>}\r\n            >\r\n                Add new row\r\n            </Button>\r\n\r\n        </div>\r\n\r\n        <TextField\r\n            style={{marginTop: '20px'}}\r\n            id=\"air-draught-field\"\r\n            label=\"Air draught\"\r\n            value={data.airDraught}\r\n            onChange={(e) => updateData({airDraught: e.target.value})}\r\n            variant=\"outlined\"\r\n        />\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            {data.arrivalDeparture ? data.arrivalDeparture : 'Departure'} draught\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Fore draught\"\r\n                value={data.arrivalDraught.foreDraught}\r\n                onChange={(e) => {\r\n                    let foreDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, foreDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mid-ship draught\"\r\n                value={data.arrivalDraught.midShipDraught}\r\n                onChange={(e) => {\r\n                    let midShipDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, midShipDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Aft draught\"\r\n                value={data.arrivalDraught.aftDraught}\r\n                onChange={(e) => {\r\n                    let aftDraught = e.target.value;\r\n                    let arrivalDraught = {...data.arrivalDraught, aftDraught};\r\n                    updateData({arrivalDraught})\r\n                }}\r\n                margin={'normal'}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Name and contact details of ship's agent\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                style={{width: 'calc(90% - 220px)'}}\r\n                label=\"Name\"\r\n                multiline\r\n                rowsMax={2}\r\n                value={data.agent.company}\r\n                onChange={(e) => {\r\n                    let company = e.target.value;\r\n                    let agent = {...data.agent, company};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telephone\"\r\n                variant=\"outlined\"\r\n                value={data.agent.contactNumbers.mobileTelephone}\r\n                onChange={(e) => {\r\n                    let mobileTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, mobileTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Business telephone\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.businessTelephone}\r\n                onChange={(e) => {\r\n                    let businessTelephone = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, businessTelephone};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Telefax\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.telefax}\r\n                onChange={(e) => {\r\n                    let telefax = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, telefax};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                margin={'normal'}\r\n                value={data.agent.contactNumbers.EMail}\r\n                onChange={(e) => {\r\n                    let EMail = e.target.value;\r\n                    let contactNumbers = {...data.agent.contactNumbers, EMail};\r\n                    let agent = {...data.agent, contactNumbers};\r\n                    updateData({agent})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" style={{marginTop: '30px'}} gutterBottom>\r\n            Number of persons on board\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <TextField\r\n                label=\"Number of persons\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.numberOfPersonsOnBoard}\r\n                onChange={(e) => {\r\n                    let numberOfPersonsOnBoard = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, numberOfPersonsOnBoard};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of crew\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.crew}\r\n                onChange={(e) => {\r\n                    let crew = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, crew};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Number of passengers\"\r\n                margin={'normal'}\r\n                value={data.personsOnBoard.passengers}\r\n                onChange={(e) => {\r\n                    let passengers = e.target.value;\r\n                    let personsOnBoard = {...data.personsOnBoard, passengers};\r\n                    updateData({personsOnBoard});\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'}>\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin2}\r\n                margin={\"normal\"}\r\n            >\r\n                <InputLabel id=\"stowaways-label\">Have any stowaways been found on boards</InputLabel>\r\n\r\n                <Select\r\n                    className={classes.formControlNoMargin2}\r\n                    labelId=\"stowaways-label\"\r\n                    value={data.stowaways}\r\n                    onChange={(e) => updateData({stowaways: e.target.value})}\r\n                >\r\n                    <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                    <MenuItem value={'No'}>No</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Period of stay\"\r\n                margin={'normal'}\r\n                style={{marginLeft: '30px'}}\r\n                variant=\"outlined\"\r\n                value={data.periodOfStay}\r\n                onChange={(e) =>\r\n                    updateData({periodOfStay: e.target.value})\r\n                }\r\n            />\r\n\r\n            {emptyDiv}\r\n\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass dateTimePicker extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY, h:mm\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} showTimeSelect timeIntervals={1}\r\n                           dateFormat=\"dd/MM/yyyy h:mm\"/>;\r\n    }\r\n}\r\n\r\nexport default dateTimePicker;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dateTimePicker from \"../pickers/dateTimePicker\";\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\nconst securityLevels = [\"(...)\", \"Security level 1\", \"Security level 2\", \"Security level 3\"];\r\nconst SecurityEditor = <DropDownEditor options={securityLevels}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Date_of_arrival\", name: \"Date of arrival\", editable: true, editor: dateTimePicker},\r\n    {key: \"Date_of_departure\", name: \"Date of departure\", editable: true, editor: dateTimePicker},\r\n    {key: \"Port\", name: \"Port(Locode)\", editable: true, editor: PortEditor},\r\n    {key: \"Port_facility\", name: \"Port facility(GISIS)\", editable: true},\r\n    {key: \"Security_level\", name: \"Security level\", editable: true, editor: SecurityEditor},\r\n    {\r\n        key: \"Security_measures\",\r\n        name: \"Special or additional security measures taken by the ship\",\r\n        editable: true,\r\n        width: 400\r\n    }\r\n];\r\n\r\n\r\nfunction VoyageForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Voyage information\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(VoyageForm);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","const countryCodes = require(\"../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor, width: 120},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: CountryCodesEditor,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction CrewForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewForm);","let config = {\r\n    showDrawerIcons: false\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    port: {\r\n        arrivalDeparture: '',\r\n        voyageNumber: '',\r\n        ETAPortOfCall: '',\r\n        // ETAPortOfCall: defaultDateTime,\r\n        ETDPortOfCall: '',\r\n        // ETDPortOfCall: defaultDateTime,\r\n        ATAPortOfCall: '',\r\n        // ATAPortOfCall: defaultDateTime,\r\n        ATDPortOfCall: '',\r\n        // ATDPortOfCall: defaultDateTime,\r\n        callAnchorage: '',\r\n        portOfCall: '',\r\n        positionPortOfCall: '',\r\n        portFacilityAtArrival: '',\r\n        cargoDescription: '',\r\n        airDraught: '',\r\n        callPurpose: [''],\r\n        portOfArrival: '',\r\n        lastPortOfCall: '',\r\n        nextPortOfCall: '',\r\n        position: {\r\n            latitude: '',\r\n            longitude: '',\r\n            time: ''\r\n            // time: defaultDateTime\r\n        },\r\n        nameOfMaster: {\r\n            givenName: '',\r\n            familyName: '',\r\n        },\r\n        arrivalDraught: {\r\n            foreDraught: \"\",\r\n            midShipDraught: '',\r\n            aftDraught: '',\r\n        },\r\n        agent: {\r\n            company: '',\r\n            contactNumbers: {\r\n                businessTelephone: '',\r\n                mobileTelephone: '',\r\n                telefax: '',\r\n                EMail: ''\r\n            }\r\n        },\r\n        personsOnBoard: {\r\n            numberOfPersonsOnBoard: '',\r\n            crew: '',\r\n            passengers: '',\r\n        },\r\n        stowaways: '',\r\n        periodOfStay: '',\r\n\r\n    },\r\n    crew: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n\r\n    ship: {\r\n        name: '',\r\n        iMOnumber: '',\r\n        otherInfo: '',\r\n        callSign: '',\r\n        mmsiNumner: '',\r\n        flagState: '',\r\n        shipType: '',\r\n        grossTonnage: '',\r\n        netTonnage: '',\r\n        port: '',\r\n        issueDate: '',\r\n        certificateNumber: '',\r\n        companyName: '',\r\n        iMOCompany: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        builtYear: '',\r\n        deadWeight: '',\r\n        length: '',\r\n        beam: '',\r\n        summerDraught: ''\r\n    },\r\n    passengers: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    voyage: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    shipStores: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    crewEffects: {\r\n        rows: [\r\n            {\"NR\": 1}\r\n        ]\r\n    },\r\n    cargo: {\r\n        portOfLoading: '',\r\n        portOfDischarge: '',\r\n        rows: [\r\n            {\"Seq\": 1}\r\n        ]\r\n    },\r\n    health: {\r\n        enum1: '',\r\n        enum2: '',\r\n        enum3: '',\r\n        enum4: '',\r\n        enum5: '',\r\n        enum6: '',\r\n        enum7: '',\r\n        enum8: '',\r\n        enum9: '',\r\n        nrOfDeath: '',\r\n        nrOfIll: '',\r\n        joinedStowaways: '',\r\n        sanitaryMeasures: [{}],\r\n        illList: [{}]\r\n    },\r\n    security: {\r\n        validISSC: '',\r\n        noValid: '',\r\n        issued: '',\r\n        expiryDate: '',\r\n        isscType: '',\r\n        securityLevel: \"\",\r\n        securityRelatedMatter: '',\r\n        approvedSSP: '',\r\n        firstName: '',\r\n        familyName: '',\r\n        phone: '',\r\n        fax: '',\r\n        email: '',\r\n        rows: [{NR: 1}]\r\n    },\r\n    dpg: {\r\n        rows: [\r\n            {}\r\n        ]\r\n    },\r\n}\r\n","const readPortXML = (port, xml) => {\r\n\r\n    port.arrivalDeparture = xml.getElementsByTagName('arrivalDeparture')[0].value;\r\n    port.voyageNumber = xml.getElementsByTagName('voyageNumber')[0].value;\r\n    port.portOfCall = xml.getElementsByTagName('PortCall')[0].children[0].children[3].value;\r\n    port.portFacilityAtArrival = xml.getElementsByTagName('PortCall')[0].children[0].children[1].value;\r\n    port.ETAPortOfCall = xml.getElementsByTagName('ETAPortOfCall')[0].value;\r\n    port.ETDPortOfCall = xml.getElementsByTagName('ETDPortOfCall')[0].value;\r\n    port.ATAPortOfCall = xml.getElementsByTagName('ATAPortOfCall')[0].value;\r\n    port.ATDPortOfCall = xml.getElementsByTagName('ATDPortOfCall')[0].value;\r\n    if (xml.getElementsByTagName('PortOfArrival')[0]) {\r\n        port.portOfArrival = xml.getElementsByTagName('PortOfArrival')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('LastPortOfCall')[0]) {\r\n        port.lastPortOfCall = xml.getElementsByTagName('LastPortOfCall')[0].children[2].value;\r\n    }\r\n    if (xml.getElementsByTagName('NextPortOfCall')[0]) {\r\n        port.nextPortOfCall = xml.getElementsByTagName('NextPortOfCall')[0].children[2].value;\r\n    }\r\n    port.callAnchorage = xml.getElementsByTagName('Anchorage')[0].value;\r\n    port.position.latitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[0].value;\r\n    port.position.longitude = xml.getElementsByTagName('EntryPosition')[0].children[0].children[1].value;\r\n    port.position.time = xml.getElementsByTagName('EntryPosition')[0].children[0].children[2].value;\r\n    port.cargoDescription = xml.getElementsByTagName('CargoOverview')[0].value;\r\n    port.nameOfMaster.givenName = xml.getElementsByTagName('NameOfMaster')[0].children[0].value;\r\n    port.nameOfMaster.familyName = xml.getElementsByTagName('NameOfMaster')[0].children[1].value;\r\n\r\n    port.callPurpose = [];\r\n    for (let i = 0; i < 9; i++) {\r\n        try {\r\n            let code = xml.getElementsByTagName('CallPurpose')[i].children[1].value;\r\n            // Our app identifies calls of purposes only by the code\r\n            port.callPurpose.push(code)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    port.airDraught = xml.getElementsByTagName('AirDraught')[0].value;\r\n    if (xml.getElementsByTagName('arrivalDeparture')[0].value === 'Arrival') {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('ArrivalDraught')[0].children[2].value;\r\n    } else {\r\n        port.arrivalDraught.foreDraught = xml.getElementsByTagName('DepartureDraught')[0].children[0].value;\r\n        port.arrivalDraught.midShipDraught = xml.getElementsByTagName('DepartureDraught')[0].children[1].value;\r\n        port.arrivalDraught.aftDraught = xml.getElementsByTagName('DepartureDraught')[0].children[2].value;\r\n    }\r\n    port.agent.company = xml.getElementsByTagName('Agent')[0].children[0].value;\r\n    port.agent.contactNumbers.mobileTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[1].value;\r\n    port.agent.contactNumbers.businessTelephone = xml.getElementsByTagName('Agent')[0].children[1].children[0].value;\r\n    port.agent.contactNumbers.telefax = xml.getElementsByTagName('Agent')[0].children[1].children[2].value;\r\n    port.agent.contactNumbers.EMail = xml.getElementsByTagName('Agent')[0].children[1].children[3].value;\r\n    port.personsOnBoard.numberOfPersonsOnBoard = xml.getElementsByTagName('PersonsOnBoard')[0].children[0].value;\r\n    port.personsOnBoard.crew = xml.getElementsByTagName('PersonsOnBoard')[0].children[2].value;\r\n    port.personsOnBoard.passengers = xml.getElementsByTagName('PersonsOnBoard')[0].children[1].value;\r\n    port.stowaways = xml.getElementsByTagName('Stowaways')[0].value;\r\n    port.periodOfStay = xml.getElementsByTagName('periodOfStay')[0].value;\r\n    console.log(\"Port \", port);\r\n};\r\n\r\nexport default readPortXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readCrewXML = (crew, xml) => {\r\n    let crewList = xml.getElementsByTagName('CrewList');\r\n    crew.rows = [];\r\n    if (crewList.length > 0) {\r\n        console.log(\"crewList \", crewList[0].children);\r\n        for (let i = 0; i < crewList[0].children.length; i++) {\r\n            let CreMemberData = crewList[0].children[i];\r\n            if (CreMemberData) {\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: CreMemberData.children[1].children[1].value,\r\n                    Given_name: CreMemberData.children[1].children[0].value,\r\n                    Gender: CreMemberData.children[2].value,\r\n                    Rank_of_rating: CreMemberData.children[3].children[1].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(CreMemberData.children[7].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(CreMemberData.children[6].value),\r\n                    Place_of_birth: CreMemberData.children[5].value,\r\n                    date_of_birth: CreMemberData.children[4].value,\r\n                    ID_type: CreMemberData.children[0].children[0].value,\r\n                    ID_document_number: CreMemberData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(CreMemberData.children[0].children[2].value),\r\n                    Expiry_date_of_identity_document: CreMemberData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: CreMemberData.children[8].value\r\n                }\r\n                crew.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewXML;","const readShipXML = (ship, xml) => {\r\n    let shipId = xml.getElementsByTagName('ShipID')[0];\r\n\r\n    if (shipId) {\r\n        shipId = shipId.children;\r\n        ship.name = shipId.find(el => el.name === 'ShipName').value;\r\n        ship.iMOnumber = shipId.find(el => el.name === 'IMONumber').value;\r\n        ship.mmsiNumner = shipId.find(el => el.name === 'MMSINumber').value;\r\n        ship.callSign = shipId.find(el => el.name === 'CallSign').value;\r\n        ship.otherInfo = shipId.find(el => el.name === 'Comment').value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('FlagState')[0]) {\r\n        ship.flagState = xml.getElementsByTagName('FlagState')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('GrossTonnage')[0]) {\r\n        ship.grossTonnage = xml.getElementsByTagName('GrossTonnage')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('NetTonnage')[0]) {\r\n        ship.netTonnage = xml.getElementsByTagName('NetTonnage')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('RegistryCertificate')) {\r\n        ship.port = xml.getElementsByTagName('IssueLocation')[0];\r\n        if (ship.port) ship.port = ship.port.children.find(el => el.name === 'UNLoCode').value;\r\n        if (xml.getElementsByTagName('IssueDate')[0]) {\r\n            ship.issueDate = xml.getElementsByTagName('IssueDate')[0].value;\r\n        }\r\n        if (xml.getElementsByTagName('Number')[0]) {\r\n            ship.certificateNumber = xml.getElementsByTagName('Number')[0].value;\r\n        }\r\n\r\n    }\r\n    if(xml.getElementsByTagName('ShipTypeContent')[0]){\r\n        ship.shipType = xml.getElementsByTagName('ShipTypeContent')[0].value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName('YearOfBuilt')[0]) {\r\n        ship.builtYear = xml.getElementsByTagName('YearOfBuilt')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('DeadWeight')[0]) {\r\n        ship.deadWeight = xml.getElementsByTagName('DeadWeight')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Beam')[0]) {\r\n        ship.beam = xml.getElementsByTagName('Beam')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('SummerDraught')[0]) {\r\n        ship.summerDraught = xml.getElementsByTagName('SummerDraught')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('LengthOverall')[0]) {\r\n        ship.length = xml.getElementsByTagName('LengthOverall')[0].value;\r\n    }\r\n\r\n    if (xml.getElementsByTagName('Organisation')[0]) {\r\n        ship.companyName = xml.getElementsByTagName('Organisation')[0].children[0].value;\r\n    }\r\n\r\n    let company = xml.getElementsByTagName('Company')[1];\r\n    if (company) {\r\n        ship.phone = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"BusinessTelephone\").value;\r\n        ship.fax = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"Telefax\").value;\r\n        ship.email = company.children.find(el => el.name === \"Contact\").children\r\n            .find(el => el.name === \"ContactNumbers\").children.find(el => el.name === \"EMail\").value;\r\n        ship.iMOCompany = company.children.find(el => el.name === \"IMOCompanyId\").value;\r\n    }\r\n};\r\n\r\nexport default readShipXML;","import countryCodes from \"../countryCodes\";\r\n\r\nconst readPassengersXML = (passengers, xml) => {\r\n    let passengerList = xml.getElementsByTagName('PassengerList');\r\n    passengers.rows = [];\r\n    if (passengerList.length > 0) {\r\n        for (let i = 0; i < passengerList[0].children.length; i++) {\r\n            let PassengerData = passengerList[0].children[i]\r\n            if (PassengerData) {\r\n                let Port_of_embarkation_formatted = '';\r\n                if (PassengerData.children[7]) {\r\n                    Port_of_embarkation_formatted = PassengerData.children[7].children[2].value + ' - ' + PassengerData.children[7].children[1].value + ' - ' + PassengerData.children[7].children[0].value;\r\n                }\r\n                let Port_of_disembarkation = '';\r\n                if (PassengerData.children[8]) {\r\n                    Port_of_disembarkation = PassengerData.children[8].children[2].value + ' - ' + PassengerData.children[8].children[1].value + ' - ' + PassengerData.children[8].children[0].value;\r\n                }\r\n                console.log(\"PassengerData \", PassengerData)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Family_name: PassengerData.children[1].children[1].value,\r\n                    Given_name: PassengerData.children[1].children[0].value,\r\n                    Gender: PassengerData.children[2].value,\r\n                    Nationality: countryCodes.getCountryWithCodeByCode(PassengerData.children[6].value),\r\n                    Country_of_birth: countryCodes.getCountryWithCodeByCode(PassengerData.children[5].value),\r\n                    Place_of_birth: PassengerData.children[4].value,\r\n                    date_of_birth: PassengerData.children[3].value,\r\n                    ID_type: PassengerData.children[0].children[0].value,\r\n                    ID_document_number: PassengerData.children[0].children[1].value,\r\n                    Issuing_state_of_identity_document: PassengerData.children[0].children[2].value,\r\n                    Expiry_date_of_identity_document: PassengerData.children[0].children[3].value,\r\n                    Visa_Residence_permit_number: PassengerData.children[10].value,\r\n                    Port_of_embarkation: Port_of_embarkation_formatted,\r\n                    Port_of_disembarkation: Port_of_disembarkation,\r\n                    Transit: PassengerData.children[9].value\r\n                }\r\n                passengers.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readPassengersXML;","const readVoyageXML = (voyage, xml) => {\r\n    let PortCalls = xml.getElementsByTagName('PortCalls');\r\n    voyage.rows = [];\r\n    console.log(\"PortCalls \", PortCalls)\r\n    if (PortCalls.length > 0) {\r\n        for (let i = 0; i < PortCalls[0].children.length; i++) {\r\n            let PortCall = PortCalls[0].children[i]\r\n            if (PortCall) {\r\n\r\n                let port = '';\r\n                if (PortCall.children[2]) {\r\n                    port = PortCall.children[2].children[3].value + ' - ' + PortCall.children[2].children[2].value + ' - ' + PortCall.children[2].children[0].value;\r\n                }\r\n\r\n                // console.log(\"PortCall \", PortCall)\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Date_of_arrival: PortCall.children[0].value,\r\n                    Date_of_departure: PortCall.children[1].value,\r\n                    Port: port,\r\n                    Port_facility: PortCall.children[2].children[1].value,\r\n                    Security_level: PortCall.children[3].value,\r\n                    Security_measures: PortCall.children[4].value\r\n                }\r\n\r\n                voyage.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readVoyageXML;","const readShipStoresXML = (shipStores, xml)=> {\r\n    let ShipStore = xml.getElementsByTagName('ShipStore');\r\n    shipStores.rows = [];\r\n    if (ShipStore.length > 0) {\r\n        for (let i = 0; i < ShipStore[0].children.length; i++) {\r\n            let StoreItem = ShipStore[0].children[i]\r\n            if (StoreItem) {\r\n                let measurement = StoreItem.children[2];\r\n                let content = '';\r\n                let unitCode = '';\r\n                if (measurement) {\r\n                    content = measurement.children[0].value;\r\n                    unitCode = measurement.children[1].value;\r\n                }\r\n\r\n                let row = {\r\n                    NR: i + 1,\r\n                    Name_of_article: StoreItem.children[0].value,\r\n                    Location_on_board: StoreItem.children[1].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n\r\n                shipStores.rows.push(row)\r\n                console.log(\"shipStores \",shipStores)\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nexport default readShipStoresXML;","const readHealthXML = (health, xml) => {\r\n    if (xml.getElementsByTagName('PersonDied')[0]){\r\n        health.enum1 = xml.getElementsByTagName('PersonDied')[0].value;\r\n    }\r\n   if (xml.getElementsByTagName('DiseaseOnBoard')[0]){\r\n       health.enum2 = xml.getElementsByTagName('DiseaseOnBoard')[0].value;\r\n   }\r\n    if (xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0]){\r\n        health.enum3 = xml.getElementsByTagName('IllPersonsGreaterThanExpected')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('IllPersonsNow')[0]){\r\n        health.enum4 = xml.getElementsByTagName('IllPersonsNow')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('MedicalConsulted')[0]){\r\n        health.enum5 = xml.getElementsByTagName('MedicalConsulted')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('InfectionConditionOnBoard')[0]){\r\n        health.enum6 = xml.getElementsByTagName('InfectionConditionOnBoard')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SanitaryMeasureApplied')[0]){\r\n        health.enum7 = xml.getElementsByTagName('SanitaryMeasureApplied')[0].value;\r\n    }\r\n    if ( xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.enum8 = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SickAnimal')[0]){\r\n        health.enum9 = xml.getElementsByTagName('SickAnimal')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfDeaths')[0]){\r\n        health.nrOfDeath = xml.getElementsByTagName('NumberOfDeaths')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('NumberOfIllPersons')[0]){\r\n        health.nrOfIll = xml.getElementsByTagName('NumberOfIllPersons')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('LocationStowawaysJoinedShip')[0]){\r\n        health.joinedStowaways = xml.getElementsByTagName('LocationStowawaysJoinedShip')[0].value;\r\n    }\r\n\r\n\r\n    let sanitars = xml.getElementsByTagName('SanitaryMeasure');\r\n    health.sanitaryMeasures = [];\r\n    for (let i = 0; i < sanitars.length; i++) {\r\n        let element = sanitars[i];\r\n        let type = element.children.find( el => el.name === 'Type').value;\r\n        let date = element.children.find( el => el.name === 'Date').value;\r\n        let place = element.children.find( el => el.name === 'Place').value;\r\n        health.sanitaryMeasures.push({type, date, place});\r\n    }\r\n\r\n    if (xml.getElementsByTagName('HealthParticulars')) {\r\n        let elements = xml.getElementsByTagName('PersonHealthParticulars');\r\n        health.illList = [];\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let xmlEl = elements[i].children;\r\n            console.log('Big table: ', xmlEl);\r\n\r\n            let illItem = {};\r\n            illItem.NR = parseInt(xmlEl.find(el => el.name === 'Number').value);\r\n            illItem.crewPassenger = xmlEl.find(el => el.name === 'CrewOrPassenger').value\r\n            illItem.familyName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.firstName = xmlEl.find(el => el.name === 'Number').value\r\n            illItem.ill = xmlEl.find(el => el.name === 'Illness').value\r\n            illItem.symptomsDate = xmlEl.find(el => el.name === 'SymptomsDate').value\r\n            illItem.reportedPort = xmlEl.find(el => el.name === 'ReportedToPortMedical').value\r\n            illItem.state = xmlEl.find(el => el.name === 'State').value\r\n            illItem.caseDisposal = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"CaseDisposal\").value;\r\n            illItem.location = xmlEl.find(el => el.name === 'CaseDisposalAndLocationOfEvaluation')\r\n                .children.find( el => el.name === \"LocationOfEvacuation\").value;\r\n            illItem.treatment = xmlEl.find(el => el.name === 'Treatment').value\r\n            illItem.comments = xmlEl.find(el => el.name === 'Comments').value\r\n            health.illList.push(illItem)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default readHealthXML;","const readCrewEffectsXML = (crewEffects, xml) => {\r\n    let DutiableCrewEffect = xml.getElementsByTagName('DutiableCrewEffect');\r\n    crewEffects.rows = [];\r\n    if (DutiableCrewEffect.length > 0) {\r\n        for (let i = 0; i < DutiableCrewEffect[0].children.length; i++) {\r\n            let CrewEffectItem = DutiableCrewEffect[0].children[i];\r\n            console.log(\"CrewEffectItem \",CrewEffectItem)\r\n            let measurement = CrewEffectItem.children[4];\r\n            let content = '';\r\n            let unitCode = '';\r\n            if (measurement) {\r\n                content = measurement.children[0].value;\r\n                unitCode = measurement.children[1].value;\r\n            }\r\n            if (CrewEffectItem) {\r\n                let row = {\r\n                    NR: CrewEffectItem.children[0].value,\r\n                    Family_name: CrewEffectItem.children[1].children[1].value,\r\n                    Given_name: CrewEffectItem.children[1].children[0].value,\r\n                    Rank_of_rating: CrewEffectItem.children[2].children[1].value,\r\n                    Effects_description: CrewEffectItem.children[3].value,\r\n                    Quantity: content,\r\n                    Unit: unitCode,\r\n                }\r\n                crewEffects.rows.push(row)\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCrewEffectsXML;","const readSecurityXML = (security, xml) => {\r\n    if (xml.getElementsByTagName('ValidISSC')[0]) {\r\n        security.vaildISSC = xml.getElementsByTagName('ValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0]) {\r\n        security.noValid = xml.getElementsByTagName('ValidISSCReasonForNoValidISSC')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('Issuer')[0]) {\r\n        security.issued = xml.getElementsByTagName('Issuer')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CertificateStatus')[0]) {\r\n        security.isscType = xml.getElementsByTagName('CertificateStatus')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ExpiryDate')[0]) {\r\n        security.expiryDate = xml.getElementsByTagName('ExpiryDate')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('CurrentShipSecurityLevel')[0]) {\r\n        security.securityLevel = xml.getElementsByTagName('CurrentShipSecurityLevel')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('SecurityRelatedMatterToReport')[0]) {\r\n        security.securityRelatedMatter = xml.getElementsByTagName('SecurityRelatedMatterToReport')[0].value;\r\n    }\r\n    if (xml.getElementsByTagName('ValidSSC')[0]) {\r\n        security.approvedSSP = xml.getElementsByTagName('ValidSSC')[0];\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.firstName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'GivenName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.familyName = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"Person\")\r\n            .children.find(el => el.name === 'FamilyName').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.phone = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'MobileTelephone').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.fax = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'Telefax').value;\r\n    }\r\n    if (xml.getElementsByTagName('CSO')[0]) {\r\n        security.email = xml.getElementsByTagName('CSO')[0].children.find(el => el.name === \"ContactNumbers\")\r\n            .children.find(el => el.name === 'EMail').value;\r\n    }\r\n\r\n\r\n    if (xml.getElementsByTagName(\"ShipToShipActivityList\")) {\r\n        security.rows = [];\r\n        let rows = xml.getElementsByTagName('ShipToShipActivity');\r\n        for (let i = 0; i < rows.length; i++) {\r\n            let row = rows[i];\r\n            let dateFrom = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let dateDeparture = row.children.find(el => el.name === 'FromDateTime').value;\r\n            let NR = i + 1;\r\n            let shipActivity = row.children.find(el => el.name === 'Activity').value;\r\n            let securityMeasure = row.children.find(el => el.name === 'AdditionalSecurityMeasures').value;\r\n            let locationName = row.children.find(el => el.name === 'Location')\r\n                .children.find(el => el.name === 'Name').value;\r\n            console.log('row.children.find(el => el.name === \"Location\")', row.children.find(el => el.name === 'Location'))\r\n            console.log()\r\n            console.log()\r\n            console.log()\r\n            let latitude = '';\r\n            let longitude = '';\r\n            let port = '';\r\n            try {\r\n                latitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Latitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                longitude = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Position').children.find(el => el.name === 'Longitude').value;\r\n            } catch (e) {\r\n\r\n            }\r\n            try {\r\n                port = row.children.find(el => el.name === 'Location')\r\n                    .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n            } catch (e) {\r\n\r\n            }\r\n\r\n\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                shipActivity,\r\n                securityMeasure,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                port\r\n            })\r\n        }\r\n    }\r\n};\r\nexport default readSecurityXML;","const readCargoXML = (cargo, dpg, xml) => {\r\n    let Consignment = xml.getElementsByTagName('Consignment');\r\n    cargo.rows = [];\r\n    dpg.rows = [];\r\n    console.log(\"Consignment \", Consignment)\r\n\r\n    try {\r\n        cargo.portOfLoading = Consignment[0].children.find(el => el.name === \"PortOfLoading\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfLoading = '';\r\n    }\r\n\r\n    try {\r\n        cargo.portOfDischarge = Consignment[0].children.find(el => el.name === \"PortOfDischarge\")\r\n            .children.find(el => el.name === 'Port').children.find(el => el.name === 'UNLoCode').value;\r\n    } catch (e) {\r\n        cargo.portOfDischarge = '';\r\n    }\r\n\r\n    let CargoItems = xml.getElementsByTagName('CargoItem');\r\n    if (CargoItems.length > 0) {\r\n        for (let i = 0; i < CargoItems.length; i++) {\r\n            let CargoItem = CargoItems[i];\r\n            if (CargoItem) {\r\n                try {\r\n                    let Seq = CargoItem.children.find(el => el.name === \"ItemNumber\").value;\r\n                    let Number_of_packages = CargoItem.children.find(el => el.name === \"NoOfPackages\").value;\r\n                    let Kind_of_packages = CargoItem.children.find(el => el.name === \"PackageType\").value;\r\n                    let Container = CargoItem.children.find(el => el.name === \"Container\");\r\n                    let Transport_unit = Container.children.find(el => el.name === \"MarksAndNumber\").value;\r\n                    let GoodsType = CargoItem.children.find(el => el.name === \"GoodsType\");\r\n                    let Description = GoodsType.children.find(el => el.name === \"Description\").value;\r\n                    let HSCode = GoodsType.children.find(el => el.name === \"HSCode\").value;\r\n                    let Shipping_marks = CargoItem.children.find(el => el.name === \"ShippingMarks\").value;\r\n                    let Gross_quantity = CargoItem.children.find(el => el.name === \"GrossQuantity\");\r\n                    let Gross_quantity_content = Gross_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Gross_Unit = Gross_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Net_quantity = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Net_quantity_content = Net_quantity.children.find(el => el.name === \"Content\").value;\r\n                    let Net_Unit = Net_quantity.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Measurement = CargoItem.children.find(el => el.name === \"NetQuantity\");\r\n                    let Measurement_content = Measurement.children.find(el => el.name === \"Content\").value;\r\n                    let Measurement_Unit = Measurement.children.find(el => el.name === \"UnitCode\").value;\r\n                    let Seal_number = Container.children.find(el => el.name === \"SealNumber\").value;\r\n                    let Size_and_type = Container.children.find(el => el.name === \"SizeAndType\").value;\r\n                    let Custom_status = CargoItem.children.find(el => el.name === \"CustomStatus\").value;\r\n                    let row = {\r\n                        Seq: Seq,\r\n                        Number_of_packages: Number_of_packages,\r\n                        Kind_of_packages: Kind_of_packages,\r\n                        Transport_unit: Transport_unit,\r\n                        Description_of_goods: Description,\r\n                        HS_code: HSCode,\r\n                        Shipping_marks: Shipping_marks,\r\n                        Gross_quantity: Gross_quantity_content,\r\n                        Gross_Unit: Gross_Unit,\r\n                        Net_quantity: Net_quantity_content,\r\n                        Net_Unit: Net_Unit,\r\n                        Measurement: Measurement_content,\r\n                        Measurement_Unit: Measurement_Unit,\r\n                        Seal_number: Seal_number,\r\n                        Custom_status: Custom_status,\r\n                        Size_and_type: Size_and_type,\r\n                    }\r\n\r\n                    cargo.rows.push(row)\r\n                    let DGSafetyDataSheet = CargoItem.children.find(el => el.name === \"DGSafetyDataSheet\");\r\n                    console.log(\"DGSafetyDataSheet \", DGSafetyDataSheet)\r\n\r\n\r\n                    let Textual_reference = DGSafetyDataSheet.children.find(el => el.name === \"ProperShippingName\").value;\r\n                    let DG_Classification = DGSafetyDataSheet.children.find(el => el.name === \"DGClassification\").value;\r\n                    let IMO_hazard_classes = DGSafetyDataSheet.children.find(el => el.name === \"UNClass\").value;\r\n                    let UN_number = DGSafetyDataSheet.children.find(el => el.name === \"UNNumber\").value;\r\n                    let Packing_group = DGSafetyDataSheet.children.find(el => el.name === \"PackingGroup\").value;\r\n                    let Subsidiary_risk = DGSafetyDataSheet.children.find(el => el.name === \"SubsidiaryRisks\").value;\r\n                    let Flash_point = DGSafetyDataSheet.children.find(el => el.name === \"FlashPoint\").value;\r\n                    let pollution_code = DGSafetyDataSheet.children.find(el => el.name === \"MARPOLPollutionCode\").value;\r\n                    let EmS = DGSafetyDataSheet.children.find(el => el.name === \"EmergencyInstruction\").value;\r\n                    let Additional_information = DGSafetyDataSheet.children.find(el => el.name === \"Comment\").value;\r\n                    let Segregation_information = DGSafetyDataSheet.children.find(el => el.name === \"SegregationInformation\").value;\r\n                    let On_board_location = DGSafetyDataSheet.children.find(el => el.name === \"OnBoardLocation\").value;\r\n                    let dgdRow = {\r\n                        Seq: Seq,\r\n                        Container_number: Transport_unit,\r\n                        Textual_reference: Textual_reference,\r\n                        DG_Classification: DG_Classification,\r\n                        IMO_hazard_classes: IMO_hazard_classes,\r\n                        UN_number: UN_number,\r\n                        Packing_group: Packing_group,\r\n                        Subsidiary_risk: Subsidiary_risk,\r\n                        Flash_point: Flash_point,\r\n                        pollution_code: pollution_code,\r\n                        EmS: EmS,\r\n                        Additional_information: Additional_information,\r\n                        Segregation_information: Segregation_information,\r\n                        On_board_location: On_board_location,\r\n                    }\r\n                    console.log(\"dgdRow \", dgdRow)\r\n                    dpg.rows.push(dgdRow);\r\n\r\n\r\n                } catch (e) {\r\n                    console.log(e)\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n};\r\n\r\nexport default readCargoXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readPortXML from \"./readPortXML\";\r\nimport readCrewXML from \"./readCrewXML\";\r\nimport readShipXML from \"./readShipXML\";\r\nimport readPassengersXML from \"./readPassengersXML\";\r\nimport readVoyageXML from \"./readVoyageXML\";\r\nimport readShipStoresXML from \"./readShipStoresXML\";\r\nimport readHealthXML from \"./readHealthXML\";\r\nimport readCrewEffectsXML from \"./readCrewEffectsXML\";\r\nimport readSecurityXML from \"./readSecurityXML\";\r\nimport readCargoXML from \"./readCargoXML\";\r\n\r\nfunction readXML(fileContent) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n    console.log(\"reading xml \");\r\n    let data = defaultData;\r\n    readPortXML(data.port, xml);\r\n    readShipXML(data.ship, xml);\r\n    readCrewXML(data.crew, xml);\r\n    readPassengersXML(data.passengers, xml);\r\n    readVoyageXML(data.voyage, xml);\r\n    readShipStoresXML(data.shipStores, xml);\r\n    readHealthXML(data.health, xml);\r\n    readCrewEffectsXML(data.crewEffects, xml);\r\n    readCargoXML(data.cargo, data.dpg, xml);\r\n    readSecurityXML(data.security, xml);\r\n\r\n\r\n    console.log(\"Read from XML data: \", data);\r\n    makeReferences(data);\r\n    return data;\r\n}\r\n\r\n// A function to assign the references on different elements\r\nfunction makeReferences(data) {\r\n    data.health.illList.map(el => {\r\n        let {NR, crewPassenger} = el;\r\n        if (crewPassenger === 'Crew') {\r\n            let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n            if (!crewItem) {\r\n                return el;\r\n            }\r\n            el.firstName = crewItem.Given_name;\r\n            el.familyName = crewItem.Family_name;\r\n        } else if (crewPassenger === 'Passenger') {\r\n            let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n            if (!passengerItem) {\r\n                return el;\r\n            }\r\n            el.firstName = passengerItem.Given_name;\r\n            el.familyName = passengerItem.Family_name;\r\n        }\r\n\r\n        return el;\r\n    })\r\n}\r\n\r\nexport default readXML\r\n\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nlet readXLSPort = (file, onSave) => {\r\n    let port = data.port\r\n    readXlsxFile(file).then((rows) => {\r\n        // `rows` is an array of rows\r\n        // each row being an array of cells.\r\n        let Row2 = rows[2];\r\n        let Row5 = rows[5];\r\n        let Row6 = rows[6];\r\n        let Row8 = rows[8];\r\n        let Row9 = rows[9];\r\n        let Row10 = rows[10];\r\n        let Row13 = rows[13];\r\n        let Row14 = rows[14];\r\n        let Row15 = rows[15];\r\n        let Row17 = rows[17];\r\n        let Row20 = rows[20];\r\n        let Row21 = rows[21];\r\n        let Row24 = rows[24];\r\n        let Row25 = rows[25];\r\n        let Row27 = rows[27];\r\n        let Row28 = rows[28];\r\n        port.arrivalDeparture = Row2[2];\r\n        port.voyageNumber = Row27[2];\r\n        port.portOfCall = Row5[2];\r\n        port.portFacilityAtArrival = Row8[6];\r\n        port.ETAPortOfCall = Row5[4];\r\n        port.ETDPortOfCall = Row5[6];\r\n        port.ATAPortOfCall = Row6[4];\r\n        port.ATDPortOfCall = Row6[6];\r\n        port.portOfArrival = Row28[2];\r\n        port.lastPortOfCall = Row28[4];\r\n        port.nextPortOfCall = Row28[6];\r\n        port.callAnchorage = Row8[2];\r\n        port.position.latitude = Row9[3];\r\n        port.position.longitude = Row9[4];\r\n        port.position.time = Row8[4];\r\n        port.cargoDescription = Row10[2];\r\n        port.nameOfMaster.familyName = Row13[2];\r\n        port.nameOfMaster.givenName = Row14[2];\r\n        port.callPurpose = [];\r\n        port.callPurpose.push(Row13[4]);\r\n        port.callPurpose.push(Row14[4]);\r\n        port.callPurpose.push(Row15[4]);\r\n        port.callPurpose.filter(el => el && el.length !== 0);\r\n        for (let i = 0; i < port.callPurpose.length; i++) {\r\n            let purpose = port.callPurpose[i];\r\n            try {\r\n                port.callPurpose[i] = purpose.split('(')[1].split(')')[0];\r\n            } catch (e) {\r\n            }\r\n        }\r\n        port.airDraught = Row15[2];\r\n        port.arrivalDraught.foreDraught = Row17[2];\r\n        port.arrivalDraught.midShipDraught = Row17[4];\r\n        port.arrivalDraught.aftDraught = Row17[6];\r\n        port.agent.company = Row20[2];\r\n        port.agent.contactNumbers.mobileTelephone = Row20[4];\r\n        port.agent.contactNumbers.telefax = Row21[4];\r\n        port.agent.contactNumbers.EMail = Row20[6];\r\n        port.personsOnBoard.numberOfPersonsOnBoard = Row24[2];\r\n        port.personsOnBoard.crew = Row24[4];\r\n        port.personsOnBoard.passengers = Row24[6];\r\n        port.stowaways = Row25[3];\r\n        port.periodOfStay = Row27[4];\r\n\r\n        console.log(\"Port read from Excel: \", port);\r\n        onSave({port});\r\n        return port;\r\n    }).then(console.log(\"finish\"))\r\n}\r\nexport default readXLSPort\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\n\r\nfunction readXLSCrew(file, onSave) {\r\n    data.crew.rows = [];\r\n    let crew = data.crew;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"crew \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][8] != null) {\r\n                dateOfBirth = moment(rows[i][8]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][13] != null) {\r\n                expiryDate = moment(rows[i][13]).format(\"DD/MM/YYYY\")\r\n            }\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Rank_of_rating: rows[i][4],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][6]),\r\n                Place_of_birth: rows[i][7],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][9],\r\n                ID_document_number: rows[i][10],\r\n                Issuing_state_of_identity_document: countryCodes.getCountryWithCodeByCode(rows[i][12]),\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Visa_Residence_permit_number: rows[i][11],\r\n                Gender: rows[i][14]\r\n            }\r\n            crew.rows.push(row)\r\n        }\r\n\r\n        console.log('Crew from Excel: ', crew);\r\n        onSave({crew});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    return crew;\r\n}\r\n\r\nexport default readXLSCrew;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport countryCodes from \"../countryCodes\";\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nfunction readXLSPassengers(file, onSave) {\r\n    data.passengers.rows = [];\r\n    let passengers = data.passengers;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"passengers \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let dateOfBirth = \"\";\r\n            if (rows[i][7] != null) {\r\n                dateOfBirth = moment(rows[i][7]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let expiryDate = \"\";\r\n            if (rows[i][14] != null) {\r\n                expiryDate = moment(rows[i][14]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Issuing_state_of_identity_document = \"\";\r\n            if (rows[i][15] != null) {\r\n                Issuing_state_of_identity_document = moment(rows[i][15]).format(\"MM/DD/YYYY\")\r\n            }\r\n            let Port_of_embarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][10];\r\n            });\r\n\r\n            let Port_of_embarkation_formatted = Port_of_embarkation.code + ' - ' + Port_of_embarkation.countryCode + ' - ' + Port_of_embarkation.name;\r\n\r\n            let Port_of_disembarkation = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][11];\r\n            });\r\n\r\n            let Port_of_disembarkation_formatted = Port_of_disembarkation.code + ' - ' + Port_of_disembarkation.countryCode + ' - ' + Port_of_disembarkation.name;\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Family_name: rows[i][2],\r\n                Given_name: rows[i][3],\r\n                Nationality: countryCodes.getCountryWithCodeByCode(rows[i][4]),\r\n                Country_of_birth: countryCodes.getCountryWithCodeByCode(rows[i][5]),\r\n                Place_of_birth: rows[i][6],\r\n                date_of_birth: dateOfBirth,\r\n                ID_type: rows[i][8],\r\n                ID_document_number: rows[i][9],\r\n                Issuing_state_of_identity_document: Issuing_state_of_identity_document,\r\n                Expiry_date_of_identity_document: expiryDate,\r\n                Port_of_embarkation: Port_of_embarkation_formatted,\r\n                Port_of_disembarkation: Port_of_disembarkation_formatted,\r\n                Transit: rows[i][12],\r\n                Visa_Residence_permit_number: rows[i][13],\r\n                Gender: rows[i][16]\r\n            }\r\n            passengers.rows.push(row)\r\n        }\r\n\r\n        onSave({passengers});\r\n\r\n    })\r\n    // data.crew.rows = crew;\r\n    // return crew;\r\n}\r\n\r\nexport default readXLSPassengers;\r\n","import data from '../../config/consts/defaultDataConst'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nconst readXLSShip = (file, onSave) => {\r\n    let ship = data.ship;\r\n    readXlsxFile(file).then((rows) => {\r\n        ship.name = rows[3][2];\r\n        ship.iMOnumber = rows[3][4];\r\n        ship.otherInfo = rows[4][4];\r\n        ship.callSign = rows[4][2];\r\n        ship.mmsiNumner = rows[4][4];\r\n        ship.flagState = rows[7][2];\r\n        ship.grossTonnage = rows[8][2];\r\n        ship.netTonnage = rows[8][4];\r\n        ship.port = rows[13][2];\r\n        ship.issueDate = rows[13][4];\r\n        ship.certificateNumber = rows[13][6];\r\n        ship.companyName = rows[16][2];\r\n        ship.iMOCompany = rows[16][4];\r\n        ship.phone = rows[17][2];\r\n        ship.fax = rows[17][2];\r\n        ship.email = rows[17][6];\r\n        ship.builtYear = rows[19][2];\r\n        ship.deadWeight = rows[19][4];\r\n        ship.length = rows[20][2];\r\n        ship.beam = rows[20][4];\r\n        ship.summerDraught = rows[20][6];\r\n        let shipType = rows[7][4];\r\n        if (shipType) ship.shipType = shipType.split('(')[1].split(')')[0];\r\n\r\n        console.log(\"Port read from Excel: \", ship);\r\n        onSave({ship});\r\n    });\r\n};\r\n\r\nexport default readXLSShip;","import readXlsxFile from 'read-excel-file'\r\nimport moment from \"moment\";\r\nimport data from '../../config/consts/defaultDataConst'\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nfunction readXLSVoyage(file, onSave) {\r\n    data.voyage.rows = [];\r\n    let voyage = data.voyage;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"voyage \", rows);\r\n        for (let i = 7; i < 17; i++) {\r\n            let Date_of_arrival = \"\";\r\n            if (rows[i][2] != null) {\r\n                Date_of_arrival = moment(rows[i][2]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Date_of_departure = \"\";\r\n            if (rows[i][3] != null) {\r\n                Date_of_departure = moment(rows[i][3]).format(\"DD/MM/YYYY, h:mm\")\r\n            }\r\n\r\n            let Port = listOfPortsConst.find(function (element) {\r\n                return element.code === rows[i][4];\r\n            });\r\n\r\n            let Port_formatted = ''\r\n            if (Port) {\r\n                Port_formatted = Port.code + ' - ' + Port.countryCode + ' - ' + Port.name;\r\n            }\r\n\r\n\r\n            let row = {\r\n                NR: rows[i][1],\r\n                Date_of_arrival: Date_of_arrival,\r\n                Date_of_departure: Date_of_departure,\r\n                Port: Port_formatted,\r\n                Port_facility: rows[i][5],\r\n                Security_level: rows[i][7],\r\n                Security_measures: rows[i][8],\r\n            }\r\n            voyage.rows.push(row)\r\n        }\r\n\r\n        onSave({voyage});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSVoyage;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSHealth = (file, onSave) => {\r\n    let health = data.health;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log('rows', rows);\r\n        health.enum1 = rows[13][5];\r\n        health.nrOfDeath = rows[13][7];\r\n        health.enum2 = rows[16][5];\r\n        health.enum3 = rows[20][5];\r\n        health.nrOfIll = rows[20][7];\r\n        health.enum4 = rows[23][5];\r\n        health.enum5 = rows[26][5];\r\n        health.enum6 = rows[29][5];\r\n        health.enum7 = rows[32][5];\r\n        health.enum8 = rows[41][5];\r\n        health.joinedStowaways = rows[41][7];\r\n        health.enum9 = rows[44][5];\r\n        health.sanitaryMeasures = [];\r\n        for (let i = 36; i <= 39; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let type = rows[i][2];\r\n            let place = rows[i][3];\r\n            let date = new Date(rows[i][4]);\r\n            health.sanitaryMeasures.push({type, place, date})\r\n        }\r\n        health.illList = [];\r\n        for (let i = 56; i < rows.length; i++) {\r\n            if (!rows[i][1]) continue;\r\n            let NR = rows[i][1];\r\n            let crewPassenger = rows[i][2];\r\n            let familyName = rows[i][3];\r\n            let firstName = rows[i][4];\r\n            let ill = rows[i][7];\r\n            let symptomsDate = (typeof new Date(rows[i][8]) === Object) ? new Date(rows[i][8]) : rows[i][8];\r\n            let reportedPort = rows[i][9];\r\n            let state = rows[i][10];\r\n            let caseDisposal = rows[i][11];\r\n            let location = rows[i][12];\r\n            let treatment = rows[i][13];\r\n            let comments = rows[i][14];\r\n            health.illList.push({\r\n                NR,\r\n                crewPassenger,\r\n                familyName,\r\n                firstName,\r\n                ill,\r\n                symptomsDate,\r\n                reportedPort,\r\n                state,\r\n                caseDisposal,\r\n                location,\r\n                treatment,\r\n                comments\r\n            })\r\n        }\r\n\r\n        onSave({health});\r\n    });\r\n}\r\n\r\nexport default readXLSHealth;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\n\r\nfunction readXLSShipStores(file, onSave) {\r\n    data.shipStores.rows = [];\r\n    let shipStores = data.shipStores;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"shipStores \", rows);\r\n        for (let i = 4; i < rows.length; i++) {\r\n            let row = {\r\n                NR: i-3,\r\n                Name_of_article: rows[i][1],\r\n                Quantity: rows[i][2],\r\n                Unit: rows[i][3],\r\n                Location_on_board: rows[i][4],\r\n            }\r\n            shipStores.rows.push(row)\r\n        }\r\n\r\n        onSave({shipStores});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSShipStores;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nconst readXLSSecurity = (file, onSave) => {\r\n    readXlsxFile(file).then((rows) => {\r\n        let security = data.security;\r\n\r\n        security.validISSC = rows[3][3];\r\n        security.noValid = rows[3][5];\r\n        security.issued = rows[5][5];\r\n        security.isscType = rows[7][5];\r\n        security.expiryDate = rows[7][7];\r\n        security.securityLevel = rows[11][4 ];\r\n        security.securityRelatedMatter = rows[13][4];\r\n        security.firstName = rows[17][3];\r\n        security.familyName = rows[18][3];\r\n        security.phone = rows[17][5];\r\n        security.fax = rows[18][5];\r\n        security.email = rows[19][5];\r\n        security.approvedSSP = rows[8][3];\r\n\r\n        security.rows = [];\r\n        for (let i = 36; i <= 45; i++) {\r\n            if (!rows[i][2]) continue;\r\n            let NR = rows[i][1];\r\n            let dateFrom = rows[i][2];\r\n            let dateDeparture = rows[i][3];\r\n            let locationName = rows[i][4];\r\n            let latitude = rows[i][5];\r\n            let longitude = rows[i][6];\r\n            let shipActivity = rows[i][7];\r\n            let securityMeasure = rows[i][8];\r\n            let port = rows[i][9];\r\n            security.rows.push({\r\n                NR,\r\n                dateFrom,\r\n                dateDeparture,\r\n                locationName,\r\n                latitude,\r\n                longitude,\r\n                shipActivity,\r\n                securityMeasure,\r\n                port\r\n            })\r\n        }\r\n\r\n        onSave({security})\r\n\r\n    });\r\n}\r\n\r\nexport default readXLSSecurity;","import readXlsxFile from 'read-excel-file'\r\nimport data from '../../config/consts/defaultDataConst'\r\n\r\nfunction readXLSCargo(file, onSave) {\r\n    data.cargo.rows = [];\r\n    data.cargo.portOfLoading = '';\r\n    data.cargo.portOfDischarge = '';\r\n    data.dpg.rows = [];\r\n    let cargo = data.cargo;\r\n    let dpg = data.dpg;\r\n    readXlsxFile(file).then((rows) => {\r\n        console.log(\"cargo \", rows);\r\n        console.log(\"portOfLoading \", rows[72][3])\r\n        cargo.portOfLoading = rows[72][3];\r\n        cargo.portOfDischarge = rows[73][3];\r\n        for (let i = 45; i < 54; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Number_of_packages: rows[i][2],\r\n                Kind_of_packages: rows[i][3],\r\n                Transport_unit: rows[i][5],\r\n                Description_of_goods: rows[i][6],\r\n                HS_code: rows[i][8],\r\n                Shipping_marks: rows[i][7],\r\n                Gross_quantity: rows[i][9],\r\n                Gross_Unit: rows[i][10],\r\n                Net_quantity: rows[i][11],\r\n                Net_Unit: rows[i][12],\r\n                Measurement: rows[i][13],\r\n                Measurement_Unit: rows[i][18],\r\n                Seal_number: rows[i][14],\r\n                Custom_status: rows[i][16],\r\n                Size_and_type: rows[i][17],\r\n            }\r\n            cargo.rows.push(row)\r\n        }\r\n        for (let i = 59; i < 68; i++) {\r\n            let row = {\r\n                Seq: rows[i][1],\r\n                Textual_reference: rows[i][2],\r\n                DG_Classification: rows[i][3],\r\n                IMO_hazard_classes: rows[i][4],\r\n                UN_number: rows[i][5],\r\n                Packing_group: rows[i][6],\r\n                Subsidiary_risk: rows[i][7],\r\n                Flash_point: rows[i][8],\r\n                pollution_code: rows[i][9],\r\n                EmS: rows[i][10],\r\n                Additional_information: rows[i][11],\r\n                Segregation_information: rows[i][12],\r\n                On_board_location: rows[i][13],\r\n            }\r\n            console.log(row)\r\n            dpg.rows.push(row)\r\n        }\r\n\r\n\r\n        onSave({cargo});\r\n\r\n    })\r\n}\r\n\r\nexport default readXLSCargo;\r\n","import readXlsxFile from 'read-excel-file'\r\nimport readXLSPort from \"./readXLSPort\";\r\nimport readXLSCrew from \"./readXLSCrew\";\r\nimport readXLSPassengers from \"./readXLSPassengers\"\r\nimport readXLSShip from \"./readXLSShip\";\r\nimport readXLSVoyage from \"./readXLSVoyage\";\r\nimport readXLSHealth from './readXLSHealth'\r\nimport readXLSShipStores from \"./readXLSShipStores\";\r\nimport readXLSSecurity from \"./readXLSSecurity\";\r\nimport readXLSCargo from \"./readXLSCargo\";\r\n\r\nfunction readXLS(files, setOpenErrorDialog, onSave) {\r\n\r\n    if (!files || files.length === 0) return {};\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n        //store to promises\r\n\r\n        readXlsxFile(files[i]).then((rows) => {\r\n            try {\r\n                let name = rows[0][0].toLowerCase();\r\n\r\n                console.log('EXCEL', rows);\r\n\r\n                if (name === \"port information\") {\r\n                    readXLSPort(files[i], onSave)\r\n                } else if (name === \"crew list\") {\r\n                    readXLSCrew(files[i], onSave);\r\n                } else if (name === \"ship information\") {\r\n                    readXLSShip(files[i], onSave);\r\n                } else if (name === \"passenger list\") {\r\n                    readXLSPassengers(files[i], onSave);\r\n                } else if (name === \"voyage information\") {\r\n                    readXLSVoyage(files[i], onSave);\r\n                } else if (name === \"maritime declaration of health\") {\r\n                    readXLSHealth(files[i], onSave);\r\n                } else if (name === \"ship stores\") {\r\n                    readXLSShipStores(files[i], onSave);\r\n                } else if (name === \"security information\") {\r\n                    readXLSSecurity(files[i], onSave);\r\n                } else if (name === \"cargo consignment\") {\r\n                    readXLSCargo(files[i], onSave);\r\n                }\r\n            } catch (e) {\r\n                setOpenErrorDialog({\r\n                    open: true, error: {\r\n                        title: 'Error while reading Excel file',\r\n                        text: 'The file is most likely broken or empty.' +\r\n                            'Developer console can say a little more about the error.'\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default readXLS;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport countryCodes from \"../../functions/countryCodes\";\r\nimport ListOfPorts from '../../config/consts/listOfPortsConst'\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst genders = [\"(...)\", 'Male', 'Female']\r\nconst GendersEditor = <DropDownEditor options={genders}/>;\r\n\r\nconst idTypes = [\"(...)\", 'Musterbook', 'Passport', 'Residential permit', 'Picture id', 'Others']\r\nconst IDTypesEditor = <DropDownEditor options={idTypes}/>;\r\n\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst yesNo = [\"(...)\", 'Yes', 'No']\r\nconst TransitEditor = <DropDownEditor options={yesNo}/>;\r\n\r\nconst ports = [\"(...)\"];\r\nListOfPorts.map((port, index) =>\r\n    ports.push(port.code + ' - ' + port.countryCode + ' - ' + port.name)\r\n);\r\nconst PortEditor = <DropDownEditor options={ports}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true, width: 120},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true, width: 120},\r\n    {key: \"Gender\", name: \"Gender\", editable: true, width: 80, editor: GendersEditor},\r\n    {key: \"Nationality\", name: \"Nationality\", editable: true, editor: CountryCodesEditor, width: 100},\r\n    {key: \"Country_of_birth\", name: \"Country of birth\", editable: true, editor: CountryCodesEditor, width: 120},\r\n    {key: \"Place_of_birth\", name: \"Place of birth\", editable: true, width: 120},\r\n    {key: \"date_of_birth\", name: \"Date of birth\", editable: true, editor: datePicker, width: 120},\r\n    {key: \"ID_type\", name: \"ID type\", editable: true, width: 80, editor: IDTypesEditor},\r\n    {key: \"ID_document_number\", name: \"ID document number\", editable: true, width: 150},\r\n    {\r\n        key: \"Issuing_state_of_identity_document\",\r\n        name: \"Issuing state of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {\r\n        key: \"Expiry_date_of_identity_document\",\r\n        name: \"Expiry date of identity document\",\r\n        editable: true,\r\n        editor: datePicker,\r\n        width: 250\r\n    },\r\n    {key: \"Port_of_embarkation\", name: \"Port of embarkation\", editable: true, width: 150, editor: PortEditor},\r\n    {key: \"Port_of_disembarkation\", name: \"Port of disembarkation\", editable: true, width: 170, editor: PortEditor},\r\n    {key: \"Transit\", name: \"Transit\", editable: true, width: 80, editor: TransitEditor},\r\n    {key: \"Visa_Residence_permit_number\", name: \"Visa/Residence permit number\", editable: true, width: 250},\r\n];\r\n\r\nfunction PassengersForm({data, updateData}) {\r\n    function addRow() {\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Passenger list\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(PassengersForm);","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\nimport listOfPurposesOfCallsConst from \"../../config/consts/listOfPurposesOfCallsConst\";\r\n\r\nconst generatePort = (port, EPCRequestBody) => {\r\n\r\n    let portOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfCall;\r\n    });\r\n\r\n    let portOfArrival = listOfPortsConst.find(function (element) {\r\n        return element.code === port.portOfArrival;\r\n    });\r\n\r\n    let lastPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.lastPortOfCall;\r\n    });\r\n    let nextPortOfCall = listOfPortsConst.find(function (element) {\r\n        return element.code === port.nextPortOfCall;\r\n    });\r\n\r\n    let ArrivalDepartureDraught;\r\n\r\n    if (port.arrivalDeparture === 'Arrival') {\r\n        ArrivalDepartureDraught = {\r\n            ArrivalDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n\r\n    } else {\r\n        ArrivalDepartureDraught = {\r\n            DepartureDraught: [\r\n                {ForeDraught: port.arrivalDraught.foreDraught},\r\n                {MidShipDraught: port.arrivalDraught.midShipDraught},\r\n                {Time: port.arrivalDraught.aftDraught},\r\n            ]\r\n        }\r\n    }\r\n\r\n    EPCRequestBody.push({VoyageNumber: port.voyageNumber});\r\n    if (portOfCall) {\r\n        EPCRequestBody.push({\r\n            VoyageDescription: [\r\n                {\r\n                    PortCall: [\r\n                        {\r\n                            Port: [\r\n                                {Name: portOfCall.name},\r\n                                {Facility: port.portFacilityAtArrival},\r\n                                {CountryCode: portOfCall.countryCode},\r\n                                {UNLoCode: portOfCall.code}\r\n                            ]\r\n                        }]\r\n                }\r\n            ]\r\n\r\n        });\r\n    }\r\n\r\n    EPCRequestBody.push({ETAPortOfCall: port.ETAPortOfCall})\r\n    EPCRequestBody.push({ETDPortOfCall: port.ETDPortOfCall})\r\n    EPCRequestBody.push({ATAPortOfCall: port.ATAPortOfCall})\r\n    EPCRequestBody.push({ATDPortOfCall: port.ATDPortOfCall})\r\n    if (portOfArrival) {\r\n        EPCRequestBody.push({\r\n            PortOfArrival: [\r\n                {Name: portOfArrival.name},\r\n                {CountryCode: portOfArrival.countryCode},\r\n                {UNLoCode: portOfArrival.code},\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (lastPortOfCall) {\r\n        EPCRequestBody.push({\r\n            LastPortOfCall: [\r\n                {Name: lastPortOfCall.name},\r\n                {CountryCode: lastPortOfCall.countryCode},\r\n                {UNLoCode: lastPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    if (nextPortOfCall) {\r\n        EPCRequestBody.push({\r\n            NextPortOfCall: [\r\n                {Name: nextPortOfCall.name},\r\n                {CountryCode: nextPortOfCall.countryCode},\r\n                {UNLoCode: nextPortOfCall.code}\r\n            ]\r\n        })\r\n    }\r\n\r\n    EPCRequestBody.push({Anchorage: port.callAnchorage})\r\n    EPCRequestBody.push({\r\n        EntryPosition: [\r\n            {\r\n                Position: [\r\n                    {Latitude: port.position.latitude},\r\n                    {Longitude: port.position.longitude},\r\n                    {Time: port.position.time}\r\n                ]\r\n            }]\r\n    })\r\n    EPCRequestBody.push({CargoOverview: port.cargoDescription});\r\n    EPCRequestBody.push({\r\n        NameOfMaster: [\r\n            {GivenName: port.nameOfMaster.givenName},\r\n            {FamilyName: port.nameOfMaster.familyName},\r\n        ]\r\n    })\r\n    for (let i = 0; i < port.callPurpose.length; i++) {\r\n        if (port.callPurpose[i] !== \"\") {\r\n            let callPurpose = listOfPurposesOfCallsConst.find(function (element) {\r\n                return element.callPurposeCode = port.callPurpose[i];\r\n            })\r\n            console.log(\"call purposes \", port.callPurpose[i])\r\n            EPCRequestBody.push({\r\n                CallPurpose: [\r\n                    {CallPurposeCode: callPurpose.callPurposeCode},\r\n                    {CallPurposeText: callPurpose.callPurposeText}\r\n                ]\r\n            })\r\n        }\r\n\r\n    }\r\n    EPCRequestBody.push({AirDraught: port.airDraught})\r\n    EPCRequestBody.push(ArrivalDepartureDraught)\r\n    EPCRequestBody.push({\r\n        Agent: [\r\n            {Company: port.agent.company},\r\n            {\r\n                ContactNumbers: [\r\n                    {BusinessTelephone: port.agent.contactNumbers.businessTelephone},\r\n                    {MobileTelephone: port.agent.contactNumbers.mobileTelephone},\r\n                    {Telefax: port.agent.contactNumbers.telefax},\r\n                    {Email: port.agent.contactNumbers.EMail},\r\n                ]\r\n            },\r\n        ]\r\n    });\r\n    EPCRequestBody.push({\r\n        PersonsOnBoard: [\r\n            {NumberOfPersonsOnBoard: port.personsOnBoard.numberOfPersonsOnBoard},\r\n            {Passengers: port.personsOnBoard.passengers},\r\n            {Crew: port.personsOnBoard.crew},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({Stowaways: port.stowaways});\r\n    EPCRequestBody.push({PeriodOfStay: port.periodOfStay});\r\n};\r\n\r\nexport default generatePort;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrew = (crew, EPCRequestBody) => {\r\n\r\n    let rows = crew.rows;\r\n    let CrewList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewMemberData = [];\r\n        console.log(\"id type \", rows[i].ID_type);\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        let IssuingCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        if (rows[i].Issuing_state_of_identity_document && rows[i].Issuing_state_of_identity_document !== '') {\r\n            let Issuing_state_of_identity_document = rows[i].Issuing_state_of_identity_document.split('- ');\r\n            IssuingCode = Issuing_state_of_identity_document[1];\r\n        }\r\n\r\n\r\n        CrewMemberData.push({\r\n            CrewIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssuingCountry: IssuingCode},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        CrewMemberData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewMemberData.push({Gender: rows[i].Gender});\r\n        CrewMemberData.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewMemberData.push({DateOfBirth: rows[i].date_of_birth});\r\n        CrewMemberData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        CrewMemberData.push({CountryOfBirth: countryOfBirthCode});\r\n        CrewMemberData.push({Nationality: nationalityCode});\r\n        CrewMemberData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        CrewList.push({CrewMemberData});\r\n    }\r\n\r\n    EPCRequestBody.push({CrewList: CrewList})\r\n}\r\n\r\nexport default generateCrew;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateShip = (ship, EPCRequestBody) => {\r\n    let shipPort = listOfPortsConst.find(el => el.code === ship.port)\r\n    EPCRequestBody.push({\r\n        ShipID: [\r\n            {ShipName: ship.name},\r\n            {IMONumber: ship.iMOnumber},\r\n            {MMSINumber: ship.mmsiNumner},\r\n            {CallSign: ship.callSign},\r\n            {Comment: ship.otherInfo},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({FlagState: ship.flagState});\r\n    // @FIXME SHIP TYPE!\r\n    EPCRequestBody.push({Beam: ship.beam});\r\n    EPCRequestBody.push({YearOfBuilt: ship.builtYear});\r\n    EPCRequestBody.push({DeadWeight: ship.deadWeight})\r\n    EPCRequestBody.push({LengthOverall: ship.length})\r\n    EPCRequestBody.push({GrossTonnage: ship.grossTonnage})\r\n    EPCRequestBody.push({NetTonnage: ship.netTonnage})\r\n    EPCRequestBody.push({ShipTypeContent: ship.shipType})\r\n    EPCRequestBody.push({SummerDraught: ship.summerDraught})\r\n    EPCRequestBody.push({\r\n            RegistryCertificate: [\r\n                {\r\n                    IssueLocation: [\r\n                        {Name: shipPort.name},\r\n                        {CountryCode: shipPort.countryCode},\r\n                        {UNLoCode: shipPort.code}\r\n                    ]\r\n                },\r\n                {IssueDate: ship.issueDate},\r\n                {Number: ship.certificateNumber}\r\n            ]\r\n        },\r\n        {\r\n            Company: [\r\n                {\r\n                    Organisation: [\r\n                        {Name: ship.companyName}\r\n                    ]\r\n                },\r\n                {\r\n                    Contact: [\r\n                        {\r\n                            ContactNumbers: [\r\n                                {BusinessTelephone: ship.phone},\r\n                                {Telefax: ship.fax},\r\n                                {EMail: ship.email}\r\n                            ]\r\n                        }]\r\n                },\r\n                {IMOCompanyId: ship.iMOCompany}\r\n            ]\r\n        })\r\n};\r\n\r\nexport default generateShip;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generatePassengers = (passengers, EPCRequestBody) => {\r\n\r\n    let rows = passengers.rows;\r\n\r\n    let PassengerList = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PassengerData = [];\r\n        let embarkationPort = {};\r\n        if (rows[i].Port_of_embarkation && rows[i].Port_of_embarkation !== '') {\r\n            let embarkationPortCode = rows[i].Port_of_embarkation.split(' -')[0]\r\n            embarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === embarkationPortCode;\r\n            });\r\n        }\r\n\r\n        let disembarkationPort = {};\r\n        if (rows[i].Port_of_disembarkation && rows[i].Port_of_disembarkation !== '') {\r\n            let disembarkationPortCode = rows[i].Port_of_disembarkation.split(' -')[0]\r\n            disembarkationPort = listOfPortsConst.find(function (element) {\r\n                return element.code === disembarkationPortCode;\r\n            });\r\n        }\r\n        let nationalityCode = '';\r\n        let countryOfBirthCode = '';\r\n        if (rows[i].Nationality && rows[i].Nationality !== '') {\r\n            let nationality = rows[i].Nationality.split('- ');\r\n            nationalityCode = nationality[1];\r\n        }\r\n        if (rows[i].Country_of_birth && rows[i].Country_of_birth !== '') {\r\n            let countryOfBirth = rows[i].Country_of_birth.split('- ');\r\n            countryOfBirthCode = countryOfBirth[1];\r\n        }\r\n\r\n        PassengerData.push({\r\n            PassengerIdDocument: [\r\n                {IdDocument: rows[i].ID_type},\r\n                {IdNumber: rows[i].ID_document_number},\r\n                {IssueDate: rows[i].Issuing_state_of_identity_document},\r\n                {ExpirationDate: rows[i].Expiry_date_of_identity_document},\r\n            ]\r\n        });\r\n        PassengerData.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        PassengerData.push({Gender: rows[i].Gender});\r\n        PassengerData.push({DateOfBirth: rows[i].date_of_birth});\r\n        PassengerData.push({PlaceOfBirth: rows[i].Place_of_birth});\r\n        PassengerData.push({CountryOfBirth: countryOfBirthCode});\r\n        PassengerData.push({Nationality: nationalityCode});\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                EmbarkationPort: [\r\n                    {Name: embarkationPort.name},\r\n                    {CountryCode: embarkationPort.countryCode},\r\n                    {UNLoCode: embarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        if (embarkationPort && embarkationPort !== {}) {\r\n            PassengerData.push({\r\n                DebarkationPort: [\r\n                    {Name: disembarkationPort.name},\r\n                    {CountryCode: disembarkationPort.countryCode},\r\n                    {UNLoCode: disembarkationPort.code},\r\n                ]\r\n            })\r\n        }\r\n        PassengerData.push({Transit: rows[i].Transit});\r\n        PassengerData.push({VisaNumber: rows[i].Visa_Residence_permit_number});\r\n        PassengerList.push({PassengerData});\r\n    }\r\n\r\n    EPCRequestBody.push({PassengerList: PassengerList})\r\n};\r\n\r\nexport default generatePassengers;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateVoyage = (voyage, EPCRequestBody) => {\r\n\r\n    let rows = voyage.rows;\r\n    let PortCalls = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let PortCall = [];\r\n        let port = {};\r\n        if (rows[i].Port && rows[i].Port !== '') {\r\n            let PortCode = rows[i].Port.split(' -')[0]\r\n            port = listOfPortsConst.find(function (element) {\r\n                return element.code === PortCode;\r\n            });\r\n        }\r\n\r\n        PortCall.push({FromDateTime: rows[i].Date_of_arrival});\r\n        PortCall.push({ToDateTime: rows[i].Date_of_departure});\r\n        if (port) {\r\n            PortCall.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: rows[i].Port_facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code},\r\n                ]\r\n            })\r\n        }\r\n\r\n        PortCall.push({PortSecurityLevel: rows[i].Security_level});\r\n        PortCall.push({AdditionalSecurityMeasures: rows[i].Security_measures});\r\n\r\n        PortCalls.push({PortCall});\r\n    }\r\n\r\n    EPCRequestBody.push({PortCalls: PortCalls})\r\n};\r\n\r\nexport default generateVoyage;","const generateShipStores = (shipStores, EPCRequestBody) => {\r\n\r\n    let rows = shipStores.rows;\r\n    let ShipStore = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let StoreItem = [];\r\n\r\n        StoreItem.push({Description: rows[i].Name_of_article});\r\n        StoreItem.push({LocationOfStorage: rows[i].Location_on_board});\r\n        StoreItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n\r\n\r\n        ShipStore.push({StoreItem: StoreItem});\r\n    }\r\n\r\n    EPCRequestBody.push({ShipStore: ShipStore})\r\n}\r\nexport default generateShipStores","const generateHealth = (data, EPCRequestBody) => {\r\n\r\n    let Health = [];\r\n    Health.push({PersonDied: data.enum1});\r\n    Health.push({NumberOfDeaths: data.nrOfDeath});\r\n    Health.push({DiseaseOnBoard: data.enum2});\r\n    Health.push({IllPersonsGreaterThanExpected: data.enum3});\r\n    Health.push({NumberOfIllPersons: data.nrOfIll});\r\n    Health.push({IllPersonsNow: data.enum4});\r\n    Health.push({MedicalConsulted: data.enum5});\r\n    Health.push({InfectionConditionOnBoard: data.enum6});\r\n    Health.push({SanitaryMeasureApplied: data.enum7});\r\n    Health.push({LocationStowawaysJoinedShip: data.enum8});\r\n    Health.push({LocationStowawaysJoinedShip: data.joinedStowaways});\r\n    Health.push({SickAnimal: data.enum9});\r\n\r\n    //TODO ADD THE for cycle after it's arranged with the client\r\n    let SanitaryMeasures = [];\r\n    for (let i = 0; i < data.sanitaryMeasures.length; i++) {\r\n        let SanitaryMeasure = [];\r\n        SanitaryMeasure.push({Type: data.sanitaryMeasures[i].type})\r\n        SanitaryMeasure.push({Place: data.sanitaryMeasures[i].place})\r\n        SanitaryMeasure.push({Date: data.sanitaryMeasures[i].date})\r\n        SanitaryMeasures.push({SanitaryMeasure})\r\n    }\r\n\r\n    Health.push({SanitaryMeasures})\r\n\r\n    let HealthParticulars = [];\r\n    for (let i = 0; i < data.illList.length; i++) {\r\n        let ill = data.illList[i];\r\n\r\n        let PersonHealthParticulars = [];\r\n\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({CrewOrPassenger: ill.crewPassenger});\r\n        PersonHealthParticulars.push({Illness: ill.ill});\r\n        PersonHealthParticulars.push({Number: ill.NR});\r\n        PersonHealthParticulars.push({SymptomsDate: ill.symptomsDate});\r\n        PersonHealthParticulars.push({ReportedToPortMedical: ill.reportedPort});\r\n        PersonHealthParticulars.push({State: ill.state});\r\n        PersonHealthParticulars.push({CaseDisposalAndLocationOfEvaluation: [\r\n                {CaseDisposal: ill.caseDisposal},\r\n                {LocationOfEvacuation: ill.location}\r\n            ]});\r\n        PersonHealthParticulars.push({Treatment: ill.treatment});\r\n        PersonHealthParticulars.push({Comments: ill.comments});\r\n        HealthParticulars.push({PersonHealthParticulars});\r\n    }\r\n\r\n    //Saving to parent\r\n    EPCRequestBody.push({Health})\r\n    EPCRequestBody.push({HealthParticulars});\r\n}\r\n\r\nexport default generateHealth;","const RanksOfRating = ['AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\n\r\nconst generateCrewEffects = (crewEffects, EPCRequestBody) => {\r\n\r\n    let rows = crewEffects.rows;\r\n    let DutiableCrewEffect = [];\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CrewEffectItem = [];\r\n        let RankOfRatingCode = \"\";\r\n        if (rows[i].Rank_of_rating && rows[i].Rank_of_rating !== '') {\r\n            RankOfRatingCode = RanksOfRating.indexOf(rows[i].Rank_of_rating) + 1;\r\n        }\r\n        if (RankOfRatingCode === 0) {\r\n            RankOfRatingCode = \"\";\r\n        }\r\n\r\n        CrewEffectItem.push({CrewReference: rows[i].NR});\r\n        CrewEffectItem.push({\r\n            Name: [\r\n                {GivenName: rows[i].Given_name},\r\n                {FamilyName: rows[i].Family_name},\r\n            ]\r\n        });\r\n        CrewEffectItem.push({\r\n            Duty: [\r\n                {Code: RankOfRatingCode},\r\n                {Text: rows[i].Rank_of_rating}\r\n            ]\r\n        });\r\n        CrewEffectItem.push({EffectDescription: rows[i].Effects_description});\r\n        CrewEffectItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Quantity},\r\n                {UnitCode: rows[i].Unit}\r\n            ]\r\n        });\r\n        DutiableCrewEffect.push({CrewMemberData: CrewEffectItem});\r\n    }\r\n\r\n    EPCRequestBody.push({DutiableCrewEffect: DutiableCrewEffect})\r\n}\r\n\r\nexport default generateCrewEffects;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateCargo = (cargo, dpg, EPCRequestBody) => {\r\n    let Consignment = [];\r\n    let rows = cargo.rows;\r\n    let dpgRows = dpg.rows;\r\n    let portOfLoading = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfLoading;\r\n    });\r\n    let portOfDischarge = listOfPortsConst.find(function (element) {\r\n        return element.code === cargo.portOfDischarge;\r\n    });\r\n\r\n    Consignment.push({\r\n        PortOfLoading: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfLoading.name},\r\n                    {CountryCode: portOfLoading.countryCode},\r\n                    {UNLoCode: portOfLoading.code}\r\n                ]\r\n            }]\r\n    });\r\n    Consignment.push({\r\n        PortOfDischarge: [\r\n            {\r\n                Port: [\r\n                    {Name: portOfDischarge.name},\r\n                    {CountryCode: portOfDischarge.countryCode},\r\n                    {UNLoCode: portOfDischarge.code}\r\n                ]\r\n            }]\r\n    });\r\n    for (let i = 0; i < rows.length; i++) {\r\n        let CargoItem = [];\r\n\r\n        CargoItem.push({ItemNumber: rows[i].Seq});\r\n        CargoItem.push({ShippingMarks: rows[i].Shipping_marks});\r\n        CargoItem.push({NoOfPackages: rows[i].Number_of_packages});\r\n        CargoItem.push({PackageType: rows[i].Kind_of_packages});\r\n        CargoItem.push({\r\n            GrossQuantity: [\r\n                {Content: rows[i].Gross_quantity},\r\n                {UnitCode: rows[i].Gross_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            NetQuantity: [\r\n                {Content: rows[i].Net_quantity},\r\n                {UnitCode: rows[i].Net_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            GoodsType: [\r\n                {HSCode: rows[i].HS_code},\r\n                {Description: rows[i].Description_of_goods}\r\n            ]\r\n        });\r\n        CargoItem.push({\r\n            Measurement: [\r\n                {Content: rows[i].Measurement},\r\n                {UnitCode: rows[i].Measurement_Unit}\r\n            ]\r\n        });\r\n        CargoItem.push({CustomStatus: rows[i].Custom_status});\r\n        let dpgTable = dpgRows.find(function (element) {\r\n            return parseInt(element.Seq) === parseInt(rows[i].Seq);\r\n        });\r\n\r\n\r\n        if (dpgTable) {\r\n            CargoItem.push({\r\n                DGSafetyDataSheet: [\r\n                    {ProperShippingName: dpgTable.Textual_reference},\r\n                    {DGClassification: dpgTable.DG_Classification},\r\n                    {UNNumber: dpgTable.UN_number},\r\n                    {UNClass: dpgTable.IMO_hazard_classes},\r\n                    {PackingGroup: dpgTable.Packing_group},\r\n                    {SubsidiaryRisks: dpgTable.Subsidiary_risk},\r\n                    {FlashPoint: dpgTable.Flash_point},\r\n                    {MARPOLPollutionCode: dpgTable.pollution_code},\r\n                    {EmergencyInstruction: dpgTable.EmS},\r\n                    {SegregationInformation: dpgTable.Segregation_information},\r\n                    {OnBoardLocation: dpgTable.On_board_location},\r\n                    {Comment: dpgTable.Additional_information},\r\n                ]\r\n            })\r\n        }\r\n\r\n        CargoItem.push({\r\n            Container: [\r\n                {MarksAndNumber: rows[i].Transport_unit},\r\n                {SizeAndType: rows[i].Size_and_type},\r\n                {SealNumber: rows[i].Seal_number},\r\n            ]\r\n        });\r\n        Consignment.push({CargoItem: CargoItem});\r\n    }\r\n    Consignment.push({CargoItemListSize: rows.length});\r\n\r\n    EPCRequestBody.push({CargoConsignmentsData: [{Consignment: Consignment}]})\r\n};\r\n\r\nexport default generateCargo;","import listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst generateSecurity = (security, EPCRequestBody) => {\r\n    EPCRequestBody.push({ValidISSC: security.validISSC});\r\n    EPCRequestBody.push({ValidISSCReasonForNoValidISSC: security.noValid});\r\n    EPCRequestBody.push({\r\n        ISSCertificate: [\r\n            {CertificateStatus: security.isscType},\r\n            {Issuer: security.issued},\r\n            {ExpiryDate: security.expiryDate},\r\n        ]\r\n    });\r\n    EPCRequestBody.push({CurrentShipSecurityLevel: security.securityLevel});\r\n    EPCRequestBody.push({SecurityRelatedMatterToReport: security.securityRelatedMatter});\r\n    EPCRequestBody.push({ValidSSC: security.approvedSSP});\r\n    EPCRequestBody.push({\r\n        CSO: [{\r\n            ContactNumbers: [\r\n                {MobileTelephone: security.phone},\r\n                {Telefax: security.fax},\r\n                {EMail: security.email}\r\n            ]\r\n        }, {\r\n            Person: [\r\n                {GivenName: security.firstName},\r\n                {FamilyName: security.familyName}\r\n            ]\r\n        }\r\n        ]\r\n    });\r\n\r\n    let ShipToShipActivityList = [];\r\n\r\n    for (let i = 0; i < security.rows.length; i++) {\r\n        let row = security.rows[i];\r\n        let ShipToShipActivity = [];\r\n        ShipToShipActivity.push({FromDateTime: row.dateFrom});\r\n        ShipToShipActivity.push({ToDateTime: row.dateDeparture});\r\n        ShipToShipActivity.push({Activity: row.shipActivity});\r\n        ShipToShipActivity.push({AdditionalSecurityMeasures: row.securityMeasure});\r\n        let port = listOfPortsConst.find(el => el.code === row.port);\r\n\r\n        ShipToShipActivity.push({\r\n            Location: [\r\n                {Name: row.locationName},\r\n                {\r\n                    Position: [\r\n                        {Latitude: row.latitude},\r\n                        {Longitude: row.longitude}\r\n                    ]\r\n                }\r\n            ]\r\n        });\r\n        if (port) {\r\n            ShipToShipActivity.push({\r\n                Port: [\r\n                    {Name: port.name},\r\n                    {Facility: port.facility},\r\n                    {CountryCode: port.countryCode},\r\n                    {UNLoCode: port.code}\r\n                ]\r\n            })\r\n        }\r\n\r\n        ShipToShipActivityList.push({ShipToShipActivity});\r\n    }\r\n    EPCRequestBody.push({ShipToShipActivityList})\r\n\r\n}\r\n\r\nexport default generateSecurity;","import xml from 'xml'\r\nimport generatePort from \"./generatePort\";\r\nimport generateCrew from \"./generateCrew\";\r\nimport generateShip from \"./generateShip\";\r\nimport generatePassengers from \"./generatePasssengers\";\r\nimport generateVoyage from \"./generateVoyage\";\r\nimport generateShipStores from \"./generateShipStores\";\r\nimport generateHealth from \"./generateHealth\";\r\nimport generateCrewEffects from \"./generateCrewEffects\";\r\nimport generateCargo from \"./generateCargo\";\r\nimport generateSecurity from \"./generateSecurity\";\r\n\r\nfunction createXML(data) {\r\n    // @FIXME The required fields are not verified yet :(\r\n    let EPCRequestBody = [];\r\n    console.log(\"Generating XML data structure \", data);\r\n\r\n    generatePort(data.port, EPCRequestBody);\r\n    generateCrew(data.crew, EPCRequestBody);\r\n    generateShip(data.ship, EPCRequestBody);\r\n    generatePassengers(data.passengers, EPCRequestBody);\r\n    generateVoyage(data.voyage, EPCRequestBody);\r\n    generateShipStores(data.shipStores, EPCRequestBody);\r\n    generateHealth(data.health, EPCRequestBody);\r\n    generateCrewEffects(data.crewEffects, EPCRequestBody);\r\n    generateCargo(data.cargo, data.dpg, EPCRequestBody)\r\n    generateSecurity(data.security, EPCRequestBody);\r\n\r\n    let xmlValue = xml([{\r\n        EPCMessage: [{\r\n            EPCMessageHeader: [\r\n                {ArrivalDeparture: data.port.arrivalDeparture}\r\n            ]\r\n        },\r\n            {\r\n                EPCRequestBody: EPCRequestBody\r\n            }\r\n        ]\r\n    }], {declaration: true});\r\n    downloadXMLfile(xmlValue);\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n\r\n}\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nlet dataCheck = (data) => {\r\n    let port = data.port;\r\n    let crew = data.crew;\r\n    let passengers = data.passengers;\r\n\r\n    if (port.arrivalDeparture === '' || port.arrivalDeparture === null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    if (port.portOfCall === '' || port.portOfCall == null) {\r\n        alert(\"Please, fill in the required field 'Departure/Arrival' in Port infomation\")\r\n        return false\r\n    }\r\n    for (let i = 0; i < crew.rows.length; i++) {\r\n        let row = data.crew.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Rank_of_rating === '' || row.Rank_of_rating == null) {\r\n            alert(\"Please, fill in the required field 'Rank of rating' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Crew list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Crew list\")\r\n            return false\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < passengers.rows.length; i++) {\r\n        let row = passengers.rows[i]\r\n        if (row.Family_name === '' || row.Family_name == null) {\r\n            alert(\"Please, fill in the required field 'Family name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Given_name === '' || row.Given_name == null) {\r\n            alert(\"Please, fill in the required field 'Given name' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Nationality === '' || row.Nationality == null) {\r\n            alert(\"Please, fill in the required field 'Nationality' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Country_of_birth === '' || row.Country_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Country of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Place_of_birth === '' || row.Place_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'Place of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.date_of_birth === '' || row.date_of_birth == null) {\r\n            alert(\"Please, fill in the required field 'date of birth' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_type === '' || row.ID_type == null) {\r\n            alert(\"Please, fill in the required field 'ID type' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.ID_document_number === '' || row.ID_document_number == null) {\r\n            alert(\"Please, fill in the required field 'ID document number' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_embarkation === '' || row.Port_of_embarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of embarkation' in Passenger list\")\r\n            return false\r\n        }\r\n        if (row.Port_of_disembarkation === '' || row.Port_of_disembarkation == null) {\r\n            alert(\"Please, fill in the required field 'Port of disembarkation' in Passenger list\")\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport default createXML;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst illGridRef = React.createRef();\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n        height: 85\r\n    },\r\n    selectControl: {\r\n        height: 85\r\n    },\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\nconst HealthFormComponent = ({data, updateData, crewData, passengerData}) => {\r\n\r\n    const classes = useStyles();\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'})\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '65%'}\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Maritime Declaration of Health\r\n        </Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Health questions\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-1-label\">(1) Has any person died on board\r\n                        during the voyage otherwise than as a\r\n                        result of accident? </InputLabel>\r\n                    <Select\r\n                        labelId=\"enum-1-label\"\r\n                        value={data.enum1}\r\n                        className={classes.selectControl}\r\n                        onChange={(e) => {\r\n                            updateData({enum1: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"Total no. of death\"\r\n                value={data.nrOfDeath}\r\n                onChange={(e) =>\r\n                    updateData({nrOfDeath: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    style={{height: \"85px\"}}\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-2-label\">(2) Is there on board or has there\r\n                        been during the international\r\n                        voyage any case of disease which you suspect to be of an infectious nature?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-2-label\"\r\n                        value={data.enum2}\r\n                        onChange={(e) => {\r\n                            updateData({enum2: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-3-label\">(3) Has the total number of ill\r\n                        passengers during the voyage been\r\n                        greater than normal/expected?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-3-label\"\r\n                        value={data.enum3}\r\n                        onChange={(e) => {\r\n                            updateData({enum3: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                label=\"How many ill persons?\"\r\n                value={data.nrOfIll}\r\n                onChange={(e) =>\r\n                    updateData({nrOfIll: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-4-label\">(4) Is there any ill person on board\r\n                        now?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-4-label\"\r\n                        value={data.enum4}\r\n                        onChange={(e) => {\r\n                            updateData({enum4: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-5-label\">(5) Was a medical practitioner\r\n                        consulted?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-5-label\"\r\n                        value={data.enum5}\r\n                        onChange={(e) => {\r\n                            updateData({enum5: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-6-label\">(6) Are you aware of any condition on\r\n                        board which may lead to\r\n                        infection or spread of disease?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-6-label\"\r\n                        value={data.enum6}\r\n                        onChange={(e) => {\r\n                            updateData({enum6: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-7-label\">(7) Has any sanitary measure (e.g.\r\n                        quarantine, isolation, disinfection\r\n                        or decontamination) been applied on board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-7-label\"\r\n                        value={data.enum7}\r\n                        onChange={(e) => {\r\n                            updateData({enum7: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <div style={{width: '470px', position: 'relative', marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"type\", name: \"Type\", editable: true, width: 150},\r\n                    {key: \"place\", name: \"Place\", editable: true, width: 150},\r\n                    {key: \"date\", name: \"Date\", editable: true, editor: datePicker, width: 150}\r\n                ]}\r\n                rowGetter={i => data.sanitaryMeasures[i]}\r\n                rowsCount={data.sanitaryMeasures.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    const sanitaryMeasures = data.sanitaryMeasures.slice();\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        sanitaryMeasures[i] = {...sanitaryMeasures[i], ...updated};\r\n                    }\r\n                    updateData({sanitaryMeasures})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.push({});\r\n                updateData({sanitaryMeasures})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let sanitaryMeasures = data.sanitaryMeasures;\r\n                sanitaryMeasures.pop();\r\n                updateData({sanitaryMeasures});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-8-label\">(8) have any stowaways been found on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-8-label\"\r\n                        value={data.enum8}\r\n                        onChange={(e) => {\r\n                            updateData({enum8: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If yes, where did they join the ship (if known)?\"\r\n                margin={'normal'}\r\n                value={data.joinedStowaways}\r\n                onChange={(e) => {\r\n                    let joinedStowaways = e.target.value;\r\n                    updateData({joinedStowaways})\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"enum-9-label\">(9) Is there a sick animal or pet on\r\n                        board?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"enum-9-label\"\r\n                        value={data.enum9}\r\n                        onChange={(e) => {\r\n                            updateData({enum9: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Typography style={marginTop} variant=\"p\" classes={classes.topMargin} component=\"p\" gutterBottom>\r\n            Note: In the absence of a surgeon, the master should regard the following symptoms as grounds for suspecting\r\n            the existence of a disease of an infectious nature:<br/>\r\n            (a) fever, persisting for several days or accompanied by (i) prostration; (ii) decreased consciousness;\r\n            (iii) glandular swelling; (iv) jaundice; (v) cough or shortness of breath; (vi) unusual bleeding; or (vii)\r\n            paralysis.<br/>\r\n            (b) with or without fever: (i) any acute skin rash or eruption; (ii) severe vomiting (other than sea\r\n            sickness); (iii) severediarrhoea; or (iv) recurrent convulsions.\r\n        </Typography>\r\n\r\n        {/*The Alerts*/}\r\n        <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n            <Alert\r\n                severity={openAlert.severity}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\"/>\r\n                    </IconButton>\r\n                }\r\n            >\r\n                {openAlert.error}\r\n            </Alert>\r\n        </Collapse>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                key={Math.random()}\r\n                ref={illGridRef}\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"crewPassenger\",\r\n                        name: \"Crew or passenger\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: <DropDownEditor options={['(...)', 'Crew', 'Passenger']}/>\r\n                    },\r\n                    {key: \"familyName\", name: \"Family name\", editable: false, width: 100},\r\n                    {key: \"firstName\", name: \"First name\", editable: false, width: 85},\r\n                    {key: \"ill\", name: \"Illness\", editable: true, width: 150},\r\n                    {key: \"symptomsDate\", name: \"Symptoms Date\", editable: true, width: 120, editor: datePicker},\r\n                    {\r\n                        key: \"reportedPort\",\r\n                        name: \"Reported to port medical\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={['(...)', 'Yes', 'No']}/>,\r\n                        width: 150\r\n                    },\r\n                    {key: \"state\", name: \"State\", editable: true, width: 150},\r\n                    {key: \"caseDisposal\", name: \"Case Disposal\", editable: true, width: 150},\r\n                    {key: \"location\", name: \"Location of evacuation\", editable: true, width: 150},\r\n                    {key: \"treatment\", name: \"Treatment\", editable: true, width: 150},\r\n                    {key: \"comments\", name: \"Comments\", editable: true, width: 150},\r\n\r\n                ]}\r\n                rowGetter={i => data.illList[i]}\r\n                rowsCount={data.illList.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const illList = data.illList;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = illList[i];\r\n                        // to put the first and last name there\r\n                        if (updated.hasOwnProperty(\"NR\")) {\r\n                            if (!item.hasOwnProperty(\"crewPassenger\")) {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            }\r\n                            item.NR = parseInt(updated.NR);\r\n                            if (item.crewPassenger === 'Crew') {\r\n                                let crewItem = crewData.rows.find(el => el.NR === item.NR);\r\n                                if (!crewItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Crew with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of crew member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = crewItem.Given_name;\r\n                                item.familyName = crewItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else if (item.crewPassenger === \"Passenger\") {\r\n                                let passengerItem = passengerData.rows.find(el => el.NR === item.NR);\r\n                                if (!passengerItem) {\r\n                                    setOpenAlert({\r\n                                        open: true, error: \"Passenger with number \" + item.NR\r\n                                            + \" does not exist. Please provide NR with correct number reference of passenger member\",\r\n                                        severity: 'error'\r\n                                    })\r\n                                    setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                    continue;\r\n                                }\r\n                                item.firstName = passengerItem.Given_name;\r\n                                item.familyName = passengerItem.Family_name;\r\n                                illList[i] = item;\r\n                            } else {\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: 'Please fill in \"Crew or Passenger\" field first',\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                            }\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        illList[i] = item;\r\n                    }\r\n\r\n                    updateData({illList: illList})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\nexport default HealthFormComponent;","let units = [\"[Unit]\", \"KGM\", \"TNE\",\"M3\"]\r\nexport default units","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true, width: 50},\r\n    {key: \"Name_of_article\", name: \"Name of article\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n    {key: \"Location_on_board\", name: \"Location on board\", editable: true},\r\n];\r\n\r\n\r\nfunction ShipStoresForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Ship stores\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ShipStoresForm);","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst RanksOfRating = [\"(...)\", 'AbleSeaman', 'Agent', 'AsstFoodBevMngr', 'BarManager', 'BarService', 'Bosun', 'Cadet', 'Captain', 'CargoTechnician', 'CasinoStaff', 'ChiefCook', 'ChiefElectrician', 'ChiefHousekeeper', 'ChiefEngineer', 'ChiefMaster', 'ChiefMate', 'ChiefOfficer', 'ChiefPurser', 'ChiefSteward', 'ClassSurveyor', 'CSO', 'Cook', 'CraneOperator', 'CrewMember', 'CruiseDirector', 'CruiseStaff', 'DeckApprentice', 'DeckFitter', 'DeckOfficer', 'Deckhand', 'Doctor', 'Donkeyman', 'ElectricalEngineer', 'ElectricalOfficer', 'Electrician', 'EngineerCadet', 'EngineeringCrew', 'EngineFitter', 'Entertainment', 'FacilitiesCrew', 'FacilitiesManager', 'FirstAsstEngineer', 'FirstEngineer', 'FirstMate', 'FirstOfficer', 'Fitter', 'FourthOfficer', 'FoodBevMngr', 'FoodService', 'FourthAsstEngineer', 'Greaser', 'Hospitality', 'HotelDirector', 'HotelStaff', 'HousekeepingStaff', 'InformationTechnology', 'JuniorEngineer', 'LaundryMaster', 'Lifeboatman', 'Maitred', 'MarineCrew', 'MarketingRevenueMngr', 'Master', 'MasterFirstClassPilot', 'MateFirstClassPilot', 'Mechanic', 'MedicalStaff', 'Messman', 'Motorman', 'Oiler', 'Operator', 'OrdinarySeaman', 'Owner', 'Painter', 'Porter', 'Provision', 'ProvisionMaster', 'Pumpman', 'QMED', 'RadioOfficer', 'Reeferman', 'Repairman', 'RiddingCrew', 'SafetyAndSecurity', 'SecondAsstEngineer', 'SecondMate', 'SecondOfficer', 'SSO', 'StaffCaptain', 'Steward', 'Superintendent', 'Tankerman', 'ThirdAsstEngineer', 'ThirdMate', 'ThirdOfficer', 'ThirdParty', 'TruckMechanic', 'Tunnelman', 'UtilityPerson', 'VettingInspector', 'Welder', 'Wiper', 'YardPersonnel', 'Other']\r\nconst RanksOfRatingEditor = <DropDownEditor options={RanksOfRating}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\n\r\nconst columns = [\r\n    {key: \"NR\", name: \"NR\", editable: true},\r\n    {key: \"Family_name\", name: \"Family name\", editable: true},\r\n    {key: \"Given_name\", name: \"Given name\", editable: true},\r\n    {key: \"Rank_of_rating\", name: \"Rank of rating\", editable: true, editor: RanksOfRatingEditor},\r\n    {key: \"Effects_description\", name: \"Effects description\", editable: true},\r\n    {key: \"Quantity\", name: \"Quantity\", editable: true},\r\n    {key: \"Unit\", name: \"Unit\", editable: true, editor: UnitEditor},\r\n\r\n];\r\n\r\nfunction CrewEffectsForm({data, updateData}) {\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {NR: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows\r\n        console.log(\"rows \", data.rows)\r\n        updateData(data)\r\n    };\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Crew effects\r\n            </Typography>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n                columnAutoWidth=\"true\"\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CrewEffectsForm);","let kindOfPackages = [\"(...)\",\"AE\",\"BG\",\"BR\",\"CK\",\"GB\",\"PK\",\"PA\",\"RL\",\"SU\",\"TU\"]\r\nexport default kindOfPackages;","import React from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ListOfPorts from \"../../config/consts/listOfPortsConst\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport kindOfPackagesList from \"../../config/consts/kindOfPackagesList\";\r\nimport unitList from \"../../config/consts/unitList\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst KindOfPackagesEditor = <DropDownEditor options={kindOfPackagesList}/>;\r\nconst UnitEditor = <DropDownEditor options={unitList}/>;\r\n\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true, width: 150},\r\n    {key: \"Kind_of_packages\", name: \"Kind_of_packages\", editable: true, editor: KindOfPackagesEditor, width: 150},\r\n    {key: \"Transport_unit\", name: \"Transport unit(Container number)\", editable: true, width: 240},\r\n    {key: \"Description_of_goods\", name: \"Description of goods\", editable: true, width: 150},\r\n    {key: \"Shipping_marks\", name: \"Shipping marks\", editable: true, width: 150},\r\n    {key: \"HS_code\", name: \"HS_code\", editable: true, width: 100},\r\n    {key: \"Gross_quantity\", name: \"Gross quantity\", editable: true, width: 150},\r\n    {key: \"Gross_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Net_quantity\", name: \"Net quantity\", editable: true, width: 150},\r\n    {key: \"Net_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Measurement\", name: \"Measurement\", editable: true, width: 150},\r\n    {key: \"Measurement_Unit\", name: \"Unit\", editable: true, editor: UnitEditor, width: 70},\r\n    {key: \"Seal_number\", name: \"Seal number\", editable: true, width: 150},\r\n    {key: \"Custom_status\", name: \"Custom status\", editable: true, width: 150},\r\n    {key: \"Size_and_type\", name: \"Size and type\", editable: true, width: 150},\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(0),\r\n        minWidth: 200,\r\n    }\r\n}));\r\n\r\n\r\nfunction CargoForm({data, updateData}) {\r\n    const classes = useStyles();\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.rows.length + 1\r\n        let row = {Seq: number}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const rows = data.rows.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            rows[i] = {...rows[i], ...updated};\r\n        }\r\n        data.rows = rows;\r\n        updateData(data)\r\n    };\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Cargo\r\n            </Typography>\r\n            {/*Port of arrival / last port of call / next port of call*/}\r\n            <Grid container justify=\"space-between\" style={{marginTop: '30px'}}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"port-of-loading-label\">Port of loading</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"port-of-loading-label\"\r\n                        value={data.portOfLoading}\r\n                        onChange={(e) => {\r\n                            updateData({portOfLoading: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n\r\n            </Grid>\r\n            <Grid>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                >\r\n                    <InputLabel id=\"portOfDischarge-label\">Port of Discharge</InputLabel>\r\n                    <Select\r\n                        labelId=\"portOfDischarge-label\"\r\n                        value={data.portOfDischarge}\r\n                        onChange={(e) => {\r\n                            updateData({portOfDischarge: e.target.value})\r\n                        }}\r\n                    >\r\n                        {ListOfPorts.map((port, index) =>\r\n                            <MenuItem key={index} value={`${port.code}`}>\r\n                                {`${port.code} - ${port.countryCode} - ${port.name}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={onGridRowsUpdated}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(CargoForm);","import FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport datePicker from \"../pickers/datePicker\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport listOfPortsConst from \"../../config/consts/listOfPortsConst\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 200,\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    selectControl: {},\r\n    labelControl: {\r\n        width: \"90%\"\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    topMargin: {\r\n        marginTop: theme.spacing(5)\r\n    }\r\n}));\r\n\r\n\r\nconst SecurityFormComponent = ({data, updateData}) => {\r\n\r\n    const classes = useStyles();\r\n    const marginTop = {marginTop: '30px'};\r\n    const widthOfLongQuestion = {width: '50%'}\r\n    const emptyDIV = <div style={{width: '225px'}}/>;\r\n    const portEditor = listOfPortsConst.map(el => el.code).filter(el => el.length !== 0);\r\n    const activityEditor = ['(...)', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15',]\r\n    return <>\r\n        <Typography style={marginTop} variant=\"h3\" classes={classes.topMargin} component=\"h3\" gutterBottom>\r\n            Security Information</Typography>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Security information\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"issc-label\">Does the ship have a valid\r\n                        International Ship Security Certificate (ISSC)?</InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"issc-label\"\r\n                        value={data.validISSC}\r\n                        onChange={(e) => {\r\n                            updateData({validISSC: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <TextField\r\n                label=\"If no, why not?\"\r\n                value={data.noValid}\r\n                onChange={(e) =>\r\n                    updateData({noValid: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <FormControl\r\n            style={marginTop}\r\n            variant=\"outlined\"\r\n            className={classes.formControlNoMargin}\r\n        >\r\n            <InputLabel className={classes.labelControl} id=\"issued-label\">Issued by</InputLabel>\r\n            <Select\r\n                className={classes.selectControl}\r\n                labelId=\"issued-label\"\r\n                value={data.issued}\r\n                onChange={(e) => {\r\n                    updateData({issued: e.target.value})\r\n                }}\r\n            >\r\n                <MenuItem value={'GVT'}>GVT</MenuItem>\r\n                <MenuItem value={'RSO'}>RSO</MenuItem>\r\n            </Select>\r\n        </FormControl>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel className={classes.labelControl} id=\"issc-type-label\">\r\n                    ISSC type\r\n                </InputLabel>\r\n                <Select\r\n                    className={classes.selectControl}\r\n                    labelId=\"issc-type-label\"\r\n                    value={data.isscType}\r\n                    onChange={(e) => {\r\n                        updateData({isscType: e.target.value})\r\n                    }}\r\n                >\r\n                    <MenuItem value={'Full'}>Full</MenuItem>\r\n                    <MenuItem value={'Interim'}>Interim</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Expiry date\"\r\n                type=\"date\"\r\n                variant={'outlined'}\r\n                value={data.expiryDate}\r\n                onChange={(e) =>\r\n                    updateData({expiryDate: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Security level at which the ship is currently operating\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityLevel}\r\n                        onChange={(e) => {\r\n                            updateData({securityLevel: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Security Level 1'}>Security level 1</MenuItem>\r\n                        <MenuItem value={'Security Level 2'}>Security level 2</MenuItem>\r\n                        <MenuItem value={'Security Level 3'}>Security level 3</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"security-level-label\">\r\n                        Is there any security-related matter you wish to report\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"security-level-label\"\r\n                        value={data.securityRelatedMatter}\r\n                        onChange={(e) => {\r\n                            updateData({securityRelatedMatter: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <div style={widthOfLongQuestion}>\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                    fullWidth\r\n                >\r\n                    <InputLabel className={classes.labelControl} id=\"approved-label\">\r\n                        Does the ship have an approved SSP on board?\r\n                    </InputLabel>\r\n                    <Select\r\n                        className={classes.selectControl}\r\n                        labelId=\"approved-label\"\r\n                        value={data.approvedSSP}\r\n                        onChange={(e) => {\r\n                            updateData({approvedSSP: e.target.value})\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Yes'}>Yes</MenuItem>\r\n                        <MenuItem value={'No'}>No</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            CSO name and 24 hours contract details\r\n        </Typography>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Given name\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Family name\"\r\n                value={data.familyName}\r\n                onChange={(e) =>\r\n                    updateData({familyName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDIV}\r\n        </Grid>\r\n\r\n        <Grid container style={marginTop} classes={classes.topMargin} justify=\"space-between\">\r\n            <TextField\r\n                label=\"Phone\"\r\n                value={data.firstName}\r\n                onChange={(e) =>\r\n                    updateData({firstName: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            <TextField\r\n                label=\"Fax\"\r\n                value={data.fax}\r\n                onChange={(e) =>\r\n                    updateData({fax: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email\"\r\n                value={data.email}\r\n                onChange={(e) =>\r\n                    updateData({email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <hr style={marginTop}/>\r\n\r\n        <Typography style={marginTop} variant=\"h5\" classes={classes.topMargin} component=\"h5\" gutterBottom>\r\n            Ship-to-ship activities, in chronological order (most recent first)<br/>\r\n            which were carried out during the last 10 calls at port facilities listed above\r\n        </Typography>\r\n\r\n        <div style={{marginTop: '30px'}}>\r\n            <ReactDataGrid\r\n                columns={[\r\n                    {key: \"NR\", name: \"NR\", editable: true, width: 40},\r\n                    {\r\n                        key: \"dateFrom\",\r\n                        name: \"Date from\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {\r\n                        key: \"dateDeparture\",\r\n                        name: \"Date departure\",\r\n                        editable: true,\r\n                        width: 145,\r\n                        editor: datePicker\r\n                    },\r\n                    {key: \"locationName\", name: \"Location\", editable: true, width: 150},\r\n                    {key: \"latitude\", name: \"Latitude\", editable: true, width: 150},\r\n                    {key: \"longitude\", name: \"Longitude\", editable: true, width: 150},\r\n                    {\r\n                        key: \"shipActivity\",\r\n                        name: \"Activity\",\r\n                        editable: true,\r\n                        width: 120,\r\n                        editor: <DropDownEditor options={activityEditor}/>\r\n                    },\r\n                    {\r\n                        key: \"securityMeasure\",\r\n                        name: \"Security measures\",\r\n                        editable: true,\r\n                        width: 150\r\n                    },\r\n                    {\r\n                        key: \"port\",\r\n                        name: \"Port\",\r\n                        editable: true,\r\n                        editor: <DropDownEditor options={portEditor}/>,\r\n                        width: 150\r\n                    }\r\n                ]}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, updated}) => {\r\n                    let rows = data.rows;\r\n                    rows[fromRow] = {...rows[fromRow], ...updated};\r\n                    updateData({rows})\r\n                }}\r\n                enableCellSelect={true}\r\n            />\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.push({});\r\n                updateData({illList})\r\n            }}>\r\n                Add row\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => {\r\n                let illList = data.illList;\r\n                illList.pop();\r\n                updateData({illList});\r\n            }}>Delete row</Button>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default SecurityFormComponent;","let dgClassifications = [\"(...)\", \"IMDG\", \"IGC\",\"IBC\",\"MARPOL_ANNEX1\",\"IMSBC\"]\r\nexport default dgClassifications","let classes = [\"(...)\", \"1\", \"1,1\", \"1,2\", \"1,3\", \"1,4\", \"1,5\", \"1,6\", \"2\", \"2,1\", \"2,2\", \"2,3\", \"3\", \"4\", \"4,1\", \"4,2\", \"4,3\", \"5\", \"5,1\", \"5,2\", \"6\", \"6,1\", \"6,2\", \"7\", \"8\", \"9\"];\r\nexport default classes","let groups = [\"(...)\", \"|\", \"||\",\"|||\",\"None\"]\r\nexport default groups","let codes = [\"(...)\",\"X\",\"Y\",\"Z\",\"OS\"]\r\nexport default codes;","import React, {useState} from \"react\";\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Editors} from 'react-data-grid-addons';\r\nimport dgClassifications from \"../../config/consts/dgClassifications\";\r\nimport IMOHazardClasses from \"../../config/consts/IMOHazardClasses\";\r\nimport packingGroups from \"../../config/consts/packingGroups\";\r\nimport pollutionCodes from \"../../config/consts/pollutionCodes\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst {DropDownEditor} = Editors;\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nconst dgClassificationEditor = <DropDownEditor options={dgClassifications}/>;\r\nconst IMOHazardEditor = <DropDownEditor options={IMOHazardClasses}/>;\r\nconst packingGroupsEditor = <DropDownEditor options={packingGroups}/>;\r\nconst pollutionCodesEditor = <DropDownEditor options={pollutionCodes}/>;\r\nconst columns = [\r\n    {key: \"Seq\", name: \"Seq\", editable: true, width: 50},\r\n    {key: \"Container_number\", name: \"Container number\", editable: false, width: 150},\r\n    {key: \"Textual_reference\", name: \"Textual reference\", editable: true, width: 150},\r\n    {key: \"DG_Classification\", name: \"DG Classification\", editable: true, width: 150, editor: dgClassificationEditor},\r\n    {key: \"IMO_hazard_classes\", name: \"IMO hazard classes\", editable: true, width: 150, editor: IMOHazardEditor},\r\n    {key: \"UN_number\", name: \"UN number\", editable: true, width: 150},\r\n    {key: \"Packing_group\", name: \"Packing group\", editable: true, width: 150, editor: packingGroupsEditor},\r\n    {key: \"Subsidiary_risk\", name: \"Subsidiary risk\", editable: true, width: 150},\r\n    {key: \"Flash_point\", name: \"Flash point\", editable: true, width: 150},\r\n    {key: \"pollution_code\", name: \"MARPOL pollution code\", editable: true, width: 200, editor: pollutionCodesEditor},\r\n    {key: \"EmS\", name: \"EmS\", editable: true, width: 100},\r\n    {key: \"Additional_information\", name: \"Additional information\", editable: true, width: 180},\r\n    {key: \"Segregation_information\", name: \"Segregation information\", editable: true, width: 180},\r\n    {key: \"On_board_location\", name: \"On board location\", editable: true, width: 150},\r\n\r\n];\r\n\r\n\r\nconst DPGForm = ({data, cargoData, updateData}) => {\r\n    const [openAlert, setOpenAlert] = useState({open: false, error: \"\", severity: 'error'});\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let row = {}\r\n        data.rows.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.rows.pop();\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <div>\r\n            <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n                Dangerous goods\r\n            </Typography>\r\n            {/*The Alerts*/}\r\n            <Collapse in={openAlert.open} style={{marginTop: '30px'}}>\r\n                <Alert\r\n                    severity={openAlert.severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpenAlert({open: false, error: \"\", severity: 'error'});\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\"/>\r\n                        </IconButton>\r\n                    }\r\n                >\r\n                    {openAlert.error}\r\n                </Alert>\r\n            </Collapse>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => data.rows[i]}\r\n                rowsCount={data.rows.length}\r\n                onGridRowsUpdated={({fromRow, toRow, updated}) => {\r\n                    console.log('From row:', fromRow, 'to row: ', toRow, 'and updated: ', updated)\r\n                    const rows = data.rows;\r\n\r\n                    for (let i = fromRow; i <= toRow; i++) {\r\n                        let item = rows[i];\r\n                        if (updated.hasOwnProperty(\"Seq\")) {\r\n                            item.Seq = updated.Seq;\r\n\r\n                            let cargoItem = cargoData.rows.find(function (element) {\r\n                                console.log(\"comparison \", parseInt(element.Seq), \" === \", parseInt(item.Seq))\r\n                                return parseInt(element.Seq) === parseInt(item.Seq)\r\n                            });\r\n                            console.log(\"cargoItem \", cargoItem)\r\n                            if (!cargoItem) {\r\n                                item.Seq = '';\r\n                                setOpenAlert({\r\n                                    open: true,\r\n                                    error: \"Cargo with number \" + item.Seq\r\n                                        + \" does not exist. Please provide Seq with correct number reference of cargo item\",\r\n                                    severity: 'error'\r\n                                })\r\n                                setTimeout(() => setOpenAlert({open: false, error: \"\", severity: 'error'}), 5000);\r\n                                continue;\r\n                            } else {\r\n                                item.Container_number = cargoItem.Transport_unit;\r\n                                console.log(\"item modified \", item)\r\n                                item = {...item, ...updated};\r\n                            }\r\n\r\n                        } else {\r\n                            item = {...item, ...updated};\r\n                        }\r\n                        rows[i] = item;\r\n                    }\r\n                    updateData({rows: rows})\r\n\r\n                }}\r\n                enableCellSelect={true}\r\n\r\n            />\r\n            <Button variant=\"primary\" onClick={addRow}>Add row</Button>\r\n            <Button variant=\"primary\" onClick={deleteRow}>Delete row</Button>\r\n        </div>\r\n\r\n    </>\r\n}\r\n\r\n\r\nexport default withStyles(styles)(DPGForm);","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ShipFormComponent from \"../components/blocks/shipFormComponent\";\r\nimport PortForm from \"../components/blocks/portFormComponent\";\r\nimport VoyageForm from \"../components/blocks/voyageFormComponent\";\r\nimport CrewForm from \"../components/blocks/crewFormComponent\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport readXLS from \"../functions/readExcel/readXLSParent\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport PassengersForm from \"../components/blocks/passengersFormComponent\";\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport HealthFormComponent from \"../components/blocks/healthFormComponent\";\r\nimport ShipStoresForm from \"../components/blocks/shipStoresFormComponent\";\r\nimport CrewEffectsForm from \"../components/blocks/crewEffectsFormComponent\";\r\nimport CargoForm from \"../components/blocks/cargoFormComponent\";\r\nimport SecurityFormComponent from \"../components/blocks/securityFormComponent\";\r\nimport DPGForm from \"../components/blocks/dpgFormComponent\";\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'Security';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 240 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction ShipDetails() {\r\n\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(defaultDataConst);\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n\r\n    console.log(\"All the data FROM PARENT!!\", data);\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h6\">\r\n                            Ship details\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-start'}>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        onChange={() => {\r\n                                            const file = document.getElementById(\"read-xml-file\").files[0];\r\n                                            const reader = new FileReader();\r\n                                            reader.onload = (() => {\r\n                                                try {\r\n                                                    let {\r\n                                                        port,\r\n                                                        crew,\r\n                                                        ship,\r\n                                                        passengers,\r\n                                                        voyage,\r\n                                                        shipStores,\r\n                                                        health,\r\n                                                        crewEffects,\r\n                                                        cargo,\r\n                                                        dpg\r\n                                                    } = readXML(reader.result);\r\n                                                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n\r\n                                                    setData({\r\n                                                        ...dataCopy, ...{\r\n                                                            port,\r\n                                                            crew,\r\n                                                            ship,\r\n                                                            passengers,\r\n                                                            voyage,\r\n                                                            shipStores,\r\n                                                            health,\r\n                                                            crewEffects,\r\n                                                            cargo,\r\n                                                            dpg\r\n                                                        }\r\n                                                    });\r\n                                                } catch (e) {\r\n                                                    setOpenErrorDialog({\r\n                                                        open: true, error: {\r\n                                                            title: 'Error while reading XML',\r\n                                                            text: e\r\n                                                        }\r\n                                                    })\r\n                                                    console.error(e);\r\n                                                }\r\n                                            })\r\n                                            reader.readAsText(file);\r\n                                        }}\r\n                                        id=\"read-xml-file\"\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"read-xml-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload XML\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <div style={{marginRight: '30px'}}>\r\n                                    <input\r\n                                        className={classes.uploadFile}\r\n                                        id=\"excel-file\"\r\n                                        multiple\r\n                                        onChange={() => {\r\n                                            const files = document.getElementById(\"excel-file\").files;\r\n\r\n                                            readXLS(files, setOpenErrorDialog, (item) => {\r\n                                                let dataCopy = data;\r\n                                                dataCopy = {...dataCopy, ...{item}}\r\n                                                console.log('The real data real: ', dataCopy)\r\n\r\n                                                setData(dataCopy)\r\n                                            });\r\n\r\n                                        }}\r\n                                        type=\"file\"\r\n                                    />\r\n                                    <label htmlFor=\"excel-file\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"default\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon/>}\r\n                                        >\r\n                                            Upload Excel\r\n                                        </Button>\r\n                                    </label>\r\n                                </div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    component=\"span\"\r\n                                    onClick={() => {\r\n                                        createXML(data);\r\n                                    }}\r\n                                    startIcon={<GetAppIcon/>}\r\n                                >\r\n                                    Generate XML file\r\n                                </Button>\r\n                            </Grid>\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {config.showDrawerIcons && <ListItemIcon><i>icon</i></ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\"\" + openErrorDialog.error.text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'port':\r\n            //@FIXME make it as a better function\r\n            return <PortForm data={data.port} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.port;\r\n                dataCopy.port = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ships':\r\n            return <ShipFormComponent data={data.ship} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.ship;\r\n                dataCopy.ship = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'voyage':\r\n            return <VoyageForm data={data.voyage} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let voyageCopy = dataCopy.voyage;\r\n                dataCopy.voyage = {...voyageCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew':\r\n            return <CrewForm data={data.crew} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let portCopy = dataCopy.crew;\r\n                dataCopy.crew = {...portCopy, ...dataItem};\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'passengers':\r\n            return <PassengersForm data={data.passengers} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let passengersCopy = dataCopy.passengers;\r\n                dataCopy.passengers = {...passengersCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'ship_stores':\r\n            return <ShipStoresForm data={data.shipStores} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let shipStoresCopy = dataCopy.shipStores;\r\n                dataCopy.passengers = {...shipStoresCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'crew_effects':\r\n            return <CrewEffectsForm data={data.crewEffects} updateData={() => {\r\n            }}/>\r\n        case 'cargo':\r\n            return <CargoForm data={data.cargo} updateData={(dataItem) => {\r\n                // deep copy\r\n                //@FIXME Fix it without using deep copy\r\n                let dataCopy = JSON.parse(JSON.stringify(data));\r\n                let cargoCopy = dataCopy.cargo;\r\n                dataCopy.cargo = {...cargoCopy, ...dataItem};\r\n                console.log(\"data copy \", dataCopy)\r\n                setData(dataCopy);\r\n            }}/>\r\n        case 'health':\r\n            return <HealthFormComponent\r\n                data={data.health}\r\n                crewData={data.crew}\r\n                passengerData={data.passengers}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'dangerous_goods':\r\n            return <DPGForm\r\n                data={data.dpg}\r\n                cargoData={data.cargo}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let dpg = dataCopy.dpg;\r\n                    dataCopy.dpg = {...dpg, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'security':\r\n            return <SecurityFormComponent\r\n                data={data.security}\r\n                updateData={(dataItem) => {\r\n                    // deep copy\r\n                    //@FIXME Fix it without using deep copy\r\n                    let dataCopy = JSON.parse(JSON.stringify(data));\r\n                    let health = dataCopy.health;\r\n                    dataCopy.health = {...health, ...dataItem};\r\n                    console.log(\"data copy \", dataCopy)\r\n                    setData(dataCopy);\r\n                }}/>\r\n        case 'waste':\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nexport default ShipDetails;","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'Port',\r\n        value: 'port'\r\n    }, {\r\n        label: 'Ships',\r\n        value: 'ships'\r\n    }, {\r\n        label: 'Crew',\r\n        value: 'crew'\r\n    }, {\r\n        label: 'Passengers',\r\n        value: 'passengers'\r\n    }, {\r\n        label: 'Voyage',\r\n        value: 'voyage'\r\n    }, {\r\n        label: 'Ship stores',\r\n        value: 'ship_stores'\r\n    }, {\r\n        label: 'Crew effects',\r\n        value: 'crew_effects'\r\n    }, {\r\n        label: 'Cargo',\r\n        value: 'cargo'\r\n    }, {\r\n        label: 'Health',\r\n        value: 'health'\r\n    }, {\r\n        label: 'Dangerous goods',\r\n        value: 'dangerous_goods'\r\n    }, {\r\n        label: 'Security',\r\n        value: 'security'\r\n    }, {\r\n        label: 'Waste',\r\n        value: 'waste'\r\n    }\r\n];","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport ShipDetails from \"./pages/shipDetails\";\r\nimport NotFound from \"./pages/404NotFound\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n\r\n        console.log('The history: ', history)\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={ShipDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AppRouter from \"./router\";\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <AppRouter/>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}